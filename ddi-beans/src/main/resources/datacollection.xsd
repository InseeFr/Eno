<?xml version="1.0" encoding="UTF-8"?>
<!--

Copyright (c) 2020 DDI Alliance, DDI 3.3 release, 2020-04-15

This file is part of DDI 3.3 XML Schema.

DDI 3.3 XML Schema is licenced under the terms of the Creative Commons Attribution 4.0 International (CC BY 4.0) License.

This is a human-readable summary of (and not a substitute for) the license (https://creativecommons.org/licenses/by/4.0/legalcode) 

You are free to:

    Share — copy and redistribute the material in any medium or format
	
    Adapt — remix, transform, and build upon the material
    for any purpose, even commercially.

    The licensor cannot revoke these freedoms as long as you follow the license terms.

Under the following terms:

    Attribution — You must give appropriate credit, provide a link to the license, and indicate if changes were made. 
	You may do so in any reasonable manner, but not in any way that suggests the licensor endorses you or your use.

    No additional restrictions — You may not apply legal terms or technological measures that legally restrict others 
	from doing anything the license permits.

Notices:

    You do not have to comply with the license for elements of the material in the public domain or where your use is permitted 
	by an applicable exception or limitation.
    
	No warranties are given. The license may not give you all of the permissions necessary for your intended use. 
	For example, other rights such as publicity, privacy, or moral rights may limit how you use the material.

-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="ddi:datacollection:3_3" xmlns:r="ddi:reusable:3_3" xmlns:a="ddi:archive:3_3" xmlns:l="ddi:logicalproduct:3_3" xmlns:xml="http://www.w3.org/XML/1998/namespace" targetNamespace="ddi:datacollection:3_3" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>
	<xs:import namespace="ddi:reusable:3_3" schemaLocation="reusable.xsd"/>
	<xs:import namespace="ddi:logicalproduct:3_3" schemaLocation="logicalproduct.xsd"/>
	<xs:import namespace="ddi:archive:3_3" schemaLocation="archive.xsd"/>
	<!-- DATA COLLECTION -->
	<xs:element name="DataCollection" type="DataCollectionType">
		<xs:annotation>
			<xs:documentation>A maintainable module containing information on activities related to data collection/capture and the processing required for the creation a data product. This section covers the methodologies, events, data sources, collection instruments and processes which comprise the collection/capture and processing of data. Metadata regarding the methodology of the data collection process including, determining repetition patterns, sampling, collection modes, etc. Collection Event specifies data sources, collection instruments, questions and question flow, and data processing activities. This module houses Processing Instructions (General Instructions and Generation Instructions) which may be referenced by variables or comparison maps.The module is described by a name, label, and description, provides spatial, temporal, and topical coverage information on the activities covered by the module, and references to external material related to objects in the module using OtherMaterial. The content of the module is organized within the following sections; Methodology, DataCaptureDevelopment, Collection Event, QuestionScheme (in-line or by reference), ControlConstructScheme (in-line or by references) containing the flow of a questionnaire or data capture process, InterviewerInstructionScheme (in-line or by reference), InstrumentScheme (in-line or by reference), ProcessingEventScheme (in-line or by reference), SamplingScheme (in-line or by reference) and DevelopmentActivityScheme.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="DataCollectionType">
		<xs:annotation>
			<xs:documentation>A maintainable module containing information on activities related to data collection/capture and the processing required for the creation a data product. This section covers the methodologies, events, data sources, collection instruments and processes which comprise the collection/capture and processing of data.  Metadata regarding the methodology of the data collection process including, determining repetition patterns, sampling, collection modes, etc. Collection Event specifies data sources, collection instruments, questions and question flow, and data processing activities. This module houses Processing Instructions (General Instructions and Generation Instructions) which may be referenced by variables or comparison maps.The module is described by a name, label, and description, provides spatial, temporal, and topical coverage information on the activities covered by the module, and references to external material related to objects in the module using OtherMaterial. The content of the module is organized within the following sections; Methodology, DataCaptureDevelopment, Collection Event, QuestionScheme (in-line or by reference), ControlConstructScheme (in-line or by references) containing the flow of a questionnaire or data capture process, InterviewerInstructionScheme (in-line or by reference), InstrumentScheme (in-line or by reference), ProcessingEventScheme (in-line or by reference), SamplingScheme (in-line or by reference) and DevelopmentActivityScheme.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:MaintainableType">
				<xs:sequence>
					<xs:element ref="DataCollectionModuleName" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A name for the DataCollection module. May be expressed in multiple languages. Repeat the element to express names with different content, for example different names for different systems.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Label" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A display label for the DataCollection module. Supports multiple language versions of the same content as well as optional formatting of the content. Repeat for labels with different content, for example, labels with differing length limitations.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A description of the content and purpose of the DataCollection module. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Coverage" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Documents the spatial, temporal, and/or topical coverage of the data collection module.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:choice minOccurs="0">
						<xs:element ref="Methodology">
							<xs:annotation>
								<xs:documentation>Methodology covers approaches used for selecting samples, administering surveys or data collection approaches, timing repeated data collection activities, weighting, and quality control.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="MethodologyReference">
							<xs:annotation>
								<xs:documentation>Reference to Methodology covers approaches used for selecting samples, administering surveys or data collection approaches, timing repeated data collection activities, weighting, and quality control. TypeOfObject should be set to Methodology.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
					<xs:choice minOccurs="0">
						<xs:element ref="DataCaptureDevelopment">
							<xs:annotation>
								<xs:documentation>Data capture development covers the development planning, process, and outcome for a partial or full data capture object (question, measurement, instrument, or control construct). Development normally included the development of the question wording, possible response domains and their presentation, translation for language or cultural variance in the population, question/measurement order and mode of delivery (instrument). Extensive work is often done for individual questions/measures that may be reused by different data capture instruments with the organization or for topical areas or populations that are difficult to measure.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="DataCaptureDevelopmentReference">
							<xs:annotation>
								<xs:documentation>Reference to DataCaptureDevelopment covers the development planning, process, and outcome for a partial or full data capture object (question, measurement, instrument, or control construct). Development normally included the development of the question wording, possible response domains and their presentation, translation for language or cultural variance in the population, question/measurement order and mode of delivery (instrument). Extensive work is often done for individual questions/measures that may be reused by different data capture instruments with the organization or for topical areas or populations that are difficult to measure. TypeOfObject should be DataCaptureDevelopment.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
					<xs:element ref="CollectionEvent" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A specific event in the collection or capture process.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element ref="QuestionScheme">
							<xs:annotation>
								<xs:documentation>Describes a set of questions used for data collection.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="r:QuestionSchemeReference">
							<xs:annotation>
								<xs:documentation>A reference to a QuestionScheme describing a set of questions used for data collection.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element ref="MeasurementScheme">
							<xs:annotation>
								<xs:documentation>Describes a set of measurements used for data collection.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="r:MeasurementSchemeReference">
							<xs:annotation>
								<xs:documentation>A reference to a MeasurementScheme describing a set of measurements used for data collection.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element ref="ControlConstructScheme">
							<xs:annotation>
								<xs:documentation>Describes a set of control constructs used to order and define processes such as data capture flow, instrument flow, sampling, data capture development activities, etc. Assumes the flow of the object along the prescribed routing (i.e. respondent through a questionnaire, data source through a measurement process, development object through a development process, or data set of a population through a sample sampling plan)Uses InParameters and OutParameters to describe the specific flow of datum captured by, used within, or processed by to create a stored datum in a variable.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="r:ControlConstructSchemeReference">
							<xs:annotation>
								<xs:documentation>A reference to a set of control constructs used to order and define processes such as data capture flow, instrument flow, sampling, data capture development activities, etc. Assumes the flow of the object along the prescribed routing (i.e. respondent through a questionnaire, data source through a measurement process, development object through a development process, or data set of a population through a sample sampling plan)Uses InParameters and OutParameters to describe the specific flow of datum captured by, used within, or processed by to create a stored datum in a variable. TypeOfObject should be ControlConstructScheme</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element ref="InterviewerInstructionScheme">
							<xs:annotation>
								<xs:documentation>Describes a set of instructions used by the interviewer (respondent in the case of a self administered questionnaire) or instrument to support the accurate collection or capture of data.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="r:InterviewerInstructionSchemeReference">
							<xs:annotation>
								<xs:documentation>Reference to a InterviewerInstructionScheme using SchemeReference which allows for the specification of objects to exclude.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element ref="InstrumentScheme">
							<xs:annotation>
								<xs:documentation>Describes a set of instruments used to collect or capture data.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="r:InstrumentSchemeReference">
							<xs:annotation>
								<xs:documentation>A reference to a set of instruments used to collect or capture data.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element ref="Instrument">
							<xs:annotation>
								<xs:documentation>Describes an instrument within this Data Collection.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="InstrumentReference">
							<xs:annotation>
								<xs:documentation>Includes an instrument in the DataCollection by reference.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element ref="ProcessingEventScheme">
							<xs:annotation>
								<xs:documentation>Describes a set of processing events used to collect or capture data and process it during or post collection. May include the processes used to capture data in non-questionnaire data capture.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="ProcessingEventSchemeReference">
							<xs:annotation>
								<xs:documentation>References a set of processing events used to collect or capture data and process it during or post collection. May include the processes used to capture data in non-questionnaire data capture.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element ref="ProcessingInstructionScheme">
							<xs:annotation>
								<xs:documentation>Describes a set of processing instructions used to collect or capture data and process it during or post collection. May include the processing instructions used to capture data in non-questionnaire data capture.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="ProcessingInstructionSchemeReference">
							<xs:annotation>
								<xs:documentation>References a set of processing instructions used to collect or capture data and process it during or post collection. May include the processing instructions used to capture data in non-questionnaire data capture.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element ref="SamplingInformationScheme">
							<xs:annotation>
								<xs:documentation>A set of sampling information maintained by an agency including sampling plans, sample frames, and samples.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="r:SamplingInformationSchemeReference">
							<xs:annotation>
								<xs:documentation>References to a set of sampling information maintained by an agency including sampling plans, sample frames, and samples.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element ref="DevelopmentActivityScheme">
							<xs:annotation>
								<xs:documentation>A set of development activities maintained by an agency, and used in the development, review, or creation of a question, measurement, data capture flow (control construct), or instrument.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="r:DevelopmentActivitySchemeReference">
							<xs:annotation>
								<xs:documentation>References to a set of development activities maintained by an agency, and used in the development, review, or creation of a question, measurement, data capture flow (control construct), or instrument. TypeOfObject should be DevelopmentActivityScheme.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="DataCaptureDevelopmentReference" type="r:ReferenceType">
		<xs:annotation>
			<xs:documentation>Reference to DataCaptureDevelopment covers the development planning, process, and outcome for a partial or full data capture object (question, measurement, instrument, or control construct). Development normally included the development of the question wording, possible response domains and their presentation, translation for language or cultural variance in the population, question/measurement order and mode of delivery (instrument). Extensive work is often done for individual questions/measures that may be reused by different data capture instruments with the organization or for topical areas or populations that are difficult to measure. TypeOfObject should be DataCaptureDevelopment.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DataCollectionModuleName" type="r:NameType">
		<xs:annotation>
			<xs:documentation>Name of the Data Collection Module using the DDI Name structure.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DevelopmentActivityScheme" type="DevelopmentActivitySchemeType">
		<xs:annotation>
			<xs:documentation>A set of development activities maintained by an agency, and used in the development, review, or creation of a question, measurement, data capture flow (control construct), or instrument.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ProcessingEventScheme" type="ProcessingEventSchemeType">
		<xs:annotation>
			<xs:documentation>A set of processing events maintained by an agency, and used in the processing data during development, cleaning, converting to variables, aggregating, and comparing.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ProcessingEventSchemeReference" type="r:SchemeReferenceType">
		<xs:annotation>
			<xs:documentation>Reference to a ProcessingEventScheme using SchemeReference which allows for the specification of objects to exclude. TypeOfObject should be set to ProcessingEventScheme.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ProcessingInstructionSchemeReference" type="r:SchemeReferenceType">
		<xs:annotation>
			<xs:documentation>Reference to a ProcessingInstructionScheme using SchemeReference which allows for the specification of objects to exclude. TypeOfObject should be set to ProcessingInstructionScheme.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="MethodologyReference" type="r:ReferenceType">
		<xs:annotation>
			<xs:documentation>Reference to Methodology covers approaches used for selecting samples, administering surveys or data collection approaches, timing repeated data collection activities, weighting, and quality control. TypeOfObject should be set to Methodology.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<!-- METHODOLOGY -->
	<xs:complexType name="MethodologyType">
		<xs:annotation>
			<xs:documentation>Metadata regarding the methodologies used concerning data collection, determining the timing and repetition patterns for data collection, and sampling procedures. Identifies areas where there were deviations from the planned sampling approach, the software used for data collection, and references to any quality standards or statements regarding the processes surrounding the planning and implementation of data collection.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:VersionableType">
				<xs:sequence>
					<xs:element ref="MethodologyName" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A name for the Methodology. May be expressed in multiple languages. Repeat the element to express names with different content, for example different names for different systems.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Label" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A display label for the Methodology. Supports multiple language versions of the same content as well as optional formatting of the content. Repeat for labels with different content, for example, labels with differing length limitations.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A description of the Methodology. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="DataCollectionMethodology" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Methodologies pertaining to the overall data collection such as primary or secondary data collection, qualitative or quantitative methods, mixed method approaches, GPS capturing methods, methods for collecting data from hard to reach communities, etc. Repeat this element if multiple methodologies are used. Repeat this element if multiple methodologies are used.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="TimeMethod" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Describes how time fits into the data collection methodology.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:choice minOccurs="0" maxOccurs="unbounded"> 
						<xs:element ref="WeightingMethodology">
							<xs:annotation>
								<xs:documentation>A basic structure for describing the methodology used for weighting. In addition to a descriptive narrative, the methodology may be classified by a short term or external controlled vocabulary.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="WeightingMethodologyReference">
							<xs:annotation>
								<xs:documentation>A reference to a basic structure for describing the methodology used for weighting. In addition to a descriptive narrative, the methodology may be classified by a short term or external controlled vocabulary.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>	
					<xs:element ref="SamplingProcedure" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Describes a sampling procedure. If multiple sampling procedures were used repeat this element for each.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="DeviationFromSampleDesign" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Describes any deviations from the planned sample design.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="DataCollectionSoftware" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Specification of a software package used to instantiate a data collection method.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:QualityStatementReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A reference to a Quality Statement pertaining to the quality of the study methodology, metadata, or data to which it is associated. Quality statements may be related to external quality standards.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="WeightingMethodology" type="WeightingMethodologyType">
		<xs:annotation>
			<xs:documentation>A basic structure for describing the methodology used for weighting. In addition to a descriptive narrative, the methodology may be classified by a short term or external controlled vocabulary.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="WeightingMethodologyType">
		<xs:annotation>
			<xs:documentation>A basic structure for describing the methodology used for weighting. In addition to a descriptive narrative, the methodology may be classified by a short term or external controlled vocabulary.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:VersionableType">
				<xs:sequence>
					<xs:element ref="TypeOfWeightingMethodology" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Allows for brief identification of the type of weighting methodology using an optional controlled vocabulary.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Full description of the weighting methodology. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="TypeOfWeightingMethodology" type="r:CodeValueType">
		<xs:annotation>
			<xs:documentation>A brief textual description or classification of the type of weighting methodology. Supports the use of an external controlled vocabulary.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DataCollectionSoftware" type="r:SoftwareType">
		<xs:annotation>
			<xs:documentation>Specification of the software used by the proprietary system.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<!-- COLLECTION EVENT -->
	<xs:element name="CollectionEventName" type="r:NameType">
		<xs:annotation>
			<xs:documentation>Name of the Collection Event using the DDI Name structure.</xs:documentation>
		</xs:annotation>
	</xs:element>	
	<xs:complexType name="CollectionEventType">
		<xs:annotation>
			<xs:documentation>Information on a specific data collection event including details on who was involved in data collection, the source of the data, the date and frequency of collection, mode of collection, identification of the instrument used for collection, information on the actual situation under which data was collected, actions taken to minimize loss of data, and reference to a quality standard or statement regarding the handling of the data collection process during this event.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:IdentifiableType">
				<xs:sequence>				
					<xs:element ref="CollectionEventName" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A name for the Collection Event. May be expressed in multiple languages. Repeat the element to express names with different content, for example different names for different systems.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Label" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A display label for the Collection Event. Supports multiple language versions of the same content as well as optional formatting of the content. Repeat for labels with different content, for example, labels with differing length limitations.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A description of the Collection Event. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>				
					<xs:element ref="DataCollectorOrganizationReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Reference to an organization or individual, defined in the organization scheme, responsible for the data collection.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="DataSource" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Describes a source of the data.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="DataCollectionDate" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Provides a date or range of dates for the described data collection event as well as  a cycle number when the collection is part of a series of data collection events.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="DataCollectionFrequency" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Documents the intended frequency of data collection, for example monthly, yearly, weekly, etc., preferably using an optional controlled vocabulary in the IntendedFrequency element. Date of first collection should be provided in StartDate as a basis for defining periodicity. EndDate should be entered for data collection cycles with a known or anticipated end date. EndDate is omitted in data collection series that are intended to be on-going.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ModeOfCollection" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Describes the mode of data collection.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="InstrumentReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>References the instrument or instruments used during the process of collecting data for this collection event period.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="CollectionSituation" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Describes the situation in which the data collection event takes place. If a number of collection situation types occurred repeat this element.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ActionToMinimizeLosses" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Describes action taken to minimize loss of data from the collection event.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:QualityStatementReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A reference to a Quality Statement pertaining to the quality of the study methodology, metadata, or data to which it is associated. Quality statements may be related to external quality standards.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="SampleReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>References the Sample used by this CollectionEvent. TypeOfObject should be Sample.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DataCollectionFrequencyType">
		<xs:annotation>
			<xs:documentation>Documents the intended frequency of data collection, for example monthly, yearly, weekly, etc., preferably using an optional controlled vocabulary in the IntendedFrequency element. Date of first collection should be provided in StartDate as a basis for defining periodicity. EndDate should be entered for data collection cycles with a known or anticipated end date. EndDate is omitted in data collection series that are intended to be on-going.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:DateType">
				<xs:sequence>
					<xs:element name="IntendedFrequency" type="r:CodeValueType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Documents the intended frequency of data collection, for example monthly, yearly, weekly, etc., preferably using an optional controlled vocabulary.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DataSourceType">
		<xs:annotation>
			<xs:documentation>Describes the source of the data. This may be a population group, an environmental object, a registry, published or unpublished data source, etc. Describes and provides a classification of the source, a citation of the origin if applicable, and a listing of any characteristics of the data source that may affect understanding of the data.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="SourceDescription" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A description of the data source. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="SourceType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Brief classification of the data source. Supports the use of an external controlled vocabulary. May be repeated to represent different forms of classification. The DDI Alliance has provided a controlled vocabulary (DataSourceType) to support this element at http://www.ddialliance.org/controlled-vocabularies.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="Origin" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>A citation or URI for the source of the data. Note that this is an external reference, and should not be used to point to DDI descriptions of the data, or to DDI-encoded data.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="SourceCharacteristic" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A significant characteristic of the data source that may affect understanding or collection of the data. This will include the level of documentation of the source data. For example: 'Legibility of data source affected due to water damage,' or 'solar flares during the data collection period may have affected the consistency of the data during the following period.' Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="SourceDescription" type="r:StructuredStringType">
		<xs:annotation>
			<xs:documentation>A description of the data source. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="SourceType" type="r:CodeValueType">
		<xs:annotation>
			<xs:documentation>A brief textual description of the type of data source. Supports the use of an external controlled vocabulary. The DDI Alliance has provided a controlled vocabulary (DataSourceType) to support this element at http://www.ddialliance.org/controlled-vocabularies.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="OriginType">
		<xs:annotation>
			<xs:documentation>A citation or URI for the source of the data. Note that this is an external reference, and should not be used to point to DDI descriptions of the data, or to DDI-encoded data.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="r:Citation" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Citation for the data source.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="OriginLocation" type="xs:anyURI" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A URN or URL for the data source.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!-- PROCESSING -->
	<xs:complexType name="ProcessingEventSchemeType">
		<xs:annotation>
			<xs:documentation>A set of processing events maintained by an agency, and used in the processing data during development, cleaning, converting to variables, aggregating, and comparing. In addition to the standard name, label, and description allows for the inclusion of an existing ProcessingEventScheme by reference and descriptions of ProcessingEvent and ProcessingEventGroup either in-line or by reference.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:MaintainableType">
				<xs:sequence>
					<xs:element ref="ProcessingEventSchemeName" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A name for the ProcessingEventScheme. May be expressed in multiple languages. Repeat the element to express names with different content, for example different names for different systems.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Label" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A display label for the ProcessingEventScheme. Supports multiple language versions of the same content as well as optional formatting of the content. Repeat for labels with different content, for example, labels with differing length limitations.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A description of the ProcessingEventScheme. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ProcessingEventSchemeReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Reference to an existing ProcessingEventScheme for inclusion.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element ref="ProcessingEvent">
							<xs:annotation>
								<xs:documentation>A ProcessingEvent described in the ProcessingEventScheme.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="ProcessingEventReference">
							<xs:annotation>
								<xs:documentation>Reference to an existing ProcessingEvent for inclusion in the scheme.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element ref="ProcessingEventGroup">
							<xs:annotation>
								<xs:documentation>A description of a group of ProcessingEvent for administrative or conceptual purposes.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="ProcessingEventGroupReference">
							<xs:annotation>
								<xs:documentation>A Processing Instruction Group included in the scheme by reference.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="ProcessingEventSchemeName" type="r:NameType">
		<xs:annotation>
			<xs:documentation>Name of the Processing Event Scheme using the DDI Name structure.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ProcessingEventReference" type="r:ReferenceType">
		<xs:annotation>
			<xs:documentation>Reference to an existing ProcessingEvent using the Reference structure. TypeOfObject should be set to ProcessingEvent.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ProcessingEventGroupReference" type="r:ReferenceType">
		<xs:annotation>
			<xs:documentation>Reference to an existing ProcessingEventGroup using the Reference structure. TypeOfObject should be set to ProcessingEventGroup.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ProcessingEventGroup" type="ProcessingEventGroupType">
		<xs:annotation>
			<xs:documentation>Describes a group of processing events for administrative or conceptual purposes, which may be hierarchical.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="ProcessingEventGroupType">
		<xs:annotation>
			<xs:documentation>Describes a group of processing events for administrative or conceptual purposes, which may be hierarchical. In addition to the standard name, label, and description contains references to included Processing Events, and other ProcessingEventGroups.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:VersionableType">
				<xs:sequence>
					<xs:element ref="TypeOfProcessingEventGroup" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A generic element for specifying a reason for a processing events group. Note that this element can contain either a term from a controlled vocabulary list or a textual description.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ProcessingEventGroupName" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A name for the ProcessingEventGroup. May be expressed in multiple languages. Repeat the element to express names with different content, for example different names for different systems.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Label" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A display label for the ProcessingEventGroup. Supports multiple language versions of the same content as well as optional formatting of the content. Repeat for labels with different content, for example, labels with differing length limitations.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A description of the ProcessingEventGroup. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:UniverseReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Reference to the universe statement describing the persons or other objects to which the contents of this group pertain.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:ConceptReference" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Reference to the concept expressed by the objects in this group.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Subject" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>If subjects are listed for this group, it is strongly recommended that the subjects listed also be found in the TopicalCoverage element for the parent packaging element when this group is included directly or by reference in a module containing a coverage element. Use of subject at the group level allows for associating objects as a type of subject based group or to identify subject characteristics of a reusable group of objects.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Keyword" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>If keywords are listed for this group, it is strongly recommended that the keywords listed also be found in the TopicalCoverage element for the parent packaging element when this group is included directly or by reference in a module containing a coverage element. Use of keyword at the group level allows for associating objects as a type of keyword based group or to identify keyword characteristics of a reusable group of objects.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element ref="ProcessingEventReference">
							<xs:annotation>
								<xs:documentation>Reference to constituent ProcessingEvent.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="ProcessingEventGroupReference">
							<xs:annotation>
								<xs:documentation>Reference to constituent processing event group. This allows for nesting of processing instruction groups.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
				</xs:sequence>
				<xs:attribute name="isOrdered" type="xs:boolean" default="false">
					<xs:annotation>
						<xs:documentation>If set to "true" indicates that the content of the group is ordered as it appears within the XML structure.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="ProcessingEventGroupName" type="r:NameType">
		<xs:annotation>
			<xs:documentation>Name of the Processing Event Group using the DDI Name structure.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="TypeOfProcessingEventGroup" type="r:CodeValueType">
		<xs:annotation>
			<xs:documentation>A brief textual description of the type of group created to associate a number of processing events. Supports the use of an external controlled vocabulary.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="ProcessingEventType">
		<xs:annotation>
			<xs:documentation>ProcessingEvent can contain a number of operations of different types to express a range of events that occur together. For example a ProcessingEvent of a CleaningOperation may also include a reference to a ProcessingInstruction used in the cleaning process. Event activities include ControlOperation, CleaningOperation, Weighting, and DataAppraisalInformation. References to related processing instructions and quality statement may be included.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:VersionableType">
				<xs:sequence>
					<xs:element ref="ProcessingEventName" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A name for the ProcessingEvent. May be expressed in multiple languages. Repeat the element to express names with different content, for example different names for different systems.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Label" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A display label for the ProcessingEvent. Supports multiple language versions of the same content as well as optional formatting of the content. Repeat for labels with different content, for example, labels with differing length limitations.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A description of the ProcessingEvent. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ControlOperation" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Description of a Control Operation used to facilitate data control.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="CleaningOperation" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Description of a Cleaning Operation such as consistency checking, invalid or out of range values, etc.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element ref="Weighting">
							<xs:annotation>
								<xs:documentation>Description of the weighting processes and any resultant standard weights.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="WeightingReference">
							<xs:annotation>
								<xs:documentation>Reference to a description of the weighting process and any resultant standard weights. TypeOfObject should be set to Weighting.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
					<xs:element ref="DataAppraisalInformation" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Description of the data appraisal processing including the resultant sampling error and response rate.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:ProcessingInstructionReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Reference to a processing instruction (GeneralInstruction or GenerationInstruction) used during the processing event. The basic Reference structure is extended to allow for the use of ParameterLinkage to link specific source parameters to the InParameter of the instruction to reflect its use within this specific Processing Event. TypeOfObject should be set to GeneralInstruction or GenerationInstruction.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:QualityStatementReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Reference to a quality statement relating to the processing event.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="ProcessingEventName" type="r:NameType">
		<xs:annotation>
			<xs:documentation>Name of the Processing Event Group using the DDI Name structure.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="WeightingReference" type="r:ReferenceType">
		<xs:annotation>
			<xs:documentation>Reference to a description of the weighting process and any resultant standard weights. TypeOfObject should be set to Weighting.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="OperationType">
		<xs:annotation>
			<xs:documentation>A generic operation description used as a type by specified operations. Describes the operation and identifies the organization or individual responsible for performing it.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="r:Description" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A description of the operation. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="r:AgencyOrganizationReference" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>A reference to an organization or individual responsible for the operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DataAppraisalInformationType">
		<xs:annotation>
			<xs:documentation>Describes the result of data appraisal activities as a response rate and sampling error. May also list additional appraisal processes taken as a result of the initial appraisal process.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="ResponseRate" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>A specific rate of response and/or a description of the rate of response for this event. If data contains multiple response rates for different portions of the data due to delivery method, identification of sub-populations or other reasons, repeat this element providing the specific response rate and a description of the sub-population, delivery method or other feature that was used in developing the specific rate.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="SamplingError" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Description of the sampling error. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="OtherAppraisalProcess" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Description of any other appraisal process used. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="ResponseRate" type="ResponseRateType">
		<xs:annotation>
			<xs:documentation>A specific rate of response and/or a description of the rate of response for a specific processing event that includes data appraisal.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="ResponseRateType">
		<xs:annotation>
			<xs:documentation>A specific rate of response and/or a description of the rate of response for a specific processing event that includes data appraisal.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="SampleSize" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The size of the sample from whom data was requested.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NumberOfResponses" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The number of responses within the specified sample.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SpecificResponseRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The specific rate of response expressed as a percent.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="r:Description" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A description of the rate of response including any information pertinent to understanding the specified rate of response. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="ProcessingInstructionScheme" type="ProcessingInstructionSchemeType">
		<xs:annotation>
			<xs:documentation>A set of Processing Instructions (General and Generation Instructions) maintained by an agency.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="ProcessingInstructionSchemeType">
		<xs:annotation>
			<xs:documentation>A set of Processing Instructions (General and Generation Instructions) maintained by an agency. In addition to the standard name, label, and description allows for the inclusion of an existing ProcessingInstructionScheme by reference, and GeneralInstruction, GenerationInstruction, and ProcessingInstructionGroup descriptions either in-line or by reference.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:MaintainableType">
				<xs:sequence>
					<xs:element ref="ProcessingInstructionSchemeName" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A name for the ProcessingInstructionScheme. May be expressed in multiple languages. Repeat the element to express names with different content, for example different names for different systems.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Label" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A display label for the ProcessingInstructionScheme. Supports multiple language versions of the same content as well as optional formatting of the content. Repeat for labels with different content, for example, labels with differing length limitations.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A description of the ProcessingInstructionScheme. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ProcessingInstructionSchemeReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Reference to an existing ProcessingInstructionScheme for inclusion.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element ref="GeneralInstruction">
							<xs:annotation>
								<xs:documentation>A General Instruction described in the Processing Instruction Scheme.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="GeneralInstructionReference">
							<xs:annotation>
								<xs:documentation>A General Instruction include by reference in the Processing Instruction Scheme.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element ref="GenerationInstruction">
							<xs:annotation>
								<xs:documentation>A Generation Instruction described in the Processing Instruction Scheme.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="GenerationInstructionReference">
							<xs:annotation>
								<xs:documentation>A Generation Instruction include by reference in the Processing Instruction Scheme.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element ref="ProcessingInstructionGroup">
							<xs:annotation>
								<xs:documentation>A description of a group of ProcessingInstructions for administrative or conceptual purposes.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="ProcessingInstructionGroupReference">
							<xs:annotation>
								<xs:documentation>A Processing Instruction Group included in the scheme by reference.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="GeneralInstructionReference" type="r:ReferenceType">
		<xs:annotation>
			<xs:documentation>Reference to an existing GeneralInstruction using the Reference structure. TypeOfObject should be set to GeneralInstruction.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="GenerationInstructionReference" type="r:ReferenceType">
		<xs:annotation>
			<xs:documentation>Reference to an existing GenerationInstruction using the Reference structure. TypeOfObject should be set to GenerationInstruction.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ProcessingInstructionSchemeName" type="r:NameType">
		<xs:annotation>
			<xs:documentation>Name of the Processing Instruction using the DDI Name structure.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ProcessingInstructionGroupReference" type="r:ReferenceType">
		<xs:annotation>
			<xs:documentation>Reference to an existing ProcessingInstructionGroup using the Reference structure. TypeOfObject should be set to ProcessingInstructionGroup.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ProcessingInstructionGroup" type="ProcessingInstructionGroupType">
		<xs:annotation>
			<xs:documentation>Describes a group of processing instructions for administrative or conceptual purposes, which may be hierarchical.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="ProcessingInstructionGroupType">
		<xs:annotation>
			<xs:documentation>Describes a group of processing instructions for administrative or conceptual purposes, which may be hierarchical. In addition to the standard name, label, and description contains references to included Generation or General Instructions, and other ProcessingInstructionGroups.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:VersionableType">
				<xs:sequence>
					<xs:element ref="TypeOfProcessingInstructionGroup" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A generic element for specifying a reason for a processing instruction group. Note that this element can contain either a term from a controlled vocabulary list or a textual description.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ProcessingInstructionGroupName" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A name for the ProcessingInstructionGroup. May be expressed in multiple languages. Repeat the element to express names with different content, for example different names for different systems.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Label" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A display label for the ProcessingInstructionGroup. Supports multiple language versions of the same content as well as optional formatting of the content. Repeat for labels with different content, for example, labels with differing length limitations.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A description of the ProcessingInstructionGroup. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:UniverseReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Reference to the universe statement describing the persons or other objects to which the contents of this group pertain.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:ConceptReference" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Reference to the concept expressed by the objects in this group.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Subject" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>If subjects are listed for this group, it is strongly recommended that the subjects listed also be found in the TopicalCoverage element for the parent packaging element when this group is included directly or by reference in a module containing a coverage element. Use of subject at the group level allows for associating objects as a type of subject based group or to identify subject characteristics of a reusable group of objects.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Keyword" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>If keywords are listed for this group, it is strongly recommended that the keywords listed also be found in the TopicalCoverage element for the parent packaging element when this group is included directly or by reference in a module containing a coverage element. Use of keyword at the group level allows for associating objects as a type of keyword based group or to identify keyword characteristics of a reusable group of objects.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element ref="GeneralInstructionReference">
							<xs:annotation>
								<xs:documentation>Reference to constituent General Instruction.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="GenerationInstructionReference">
							<xs:annotation>
								<xs:documentation>Reference to constituent Generation Instruction.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="ProcessingInstructionGroupReference">
							<xs:annotation>
								<xs:documentation>Reference to constituent processing instruction group. This allows for nesting of processing instruction groups.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
				</xs:sequence>
				<xs:attribute name="isOrdered" type="xs:boolean" default="false">
					<xs:annotation>
						<xs:documentation>If set to "true" indicates that the content of the group is ordered as it appears within the XML structure.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="ProcessingInstructionGroupName" type="r:NameType">
		<xs:annotation>
			<xs:documentation>Name of the Processing Instruction Group using the DDI Name structure.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="TypeOfProcessingInstructionGroup" type="r:CodeValueType">
		<xs:annotation>
			<xs:documentation>A brief textual description of the type of group created to associate a number of processing instructions. Supports the use of an external controlled vocabulary.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ProcessingInstruction" type="ProcessingInstructionType" abstract="true">
		<xs:annotation>
			<xs:documentation>Substitution group head for types of processing instruction.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="ProcessingInstructionType" abstract="true">
		<xs:annotation>
			<xs:documentation>Substitution group head for types of processing instruction.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:VersionableType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="GeneralInstructionType">
		<xs:annotation>
			<xs:documentation>Processing instructions that pertain to data collection or data processing overall such as handling of non-response to questions, imputation practices, suppression rules, etc. General instructions should be listed separately to allow for referencing of specific processes.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ProcessingInstructionType">
				<xs:sequence>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A description of the general instruction. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:CommandCode" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Structured information used by a system to process the instruction.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="OverriddenCodeReference" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Used when attribute of the containing GeneralInstruction isOverride equals true. This element provides the reference to the GeneralInstruction being overridden by the use of this instruction. For example a special confidentiality process used for a select set of variables rather than the normal process.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="isOverride" type="xs:boolean" default="false">
					<xs:annotation>
						<xs:documentation>If set to "true", indicates that this coding instruction overrides a more generally used process.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="GenerationInstructionType">
		<xs:annotation>
			<xs:documentation>Processing instructions for recodes, derivations from multiple question or variable sources, and derivations based on external sources. Instructions should be listed separately so they can be referenced individually.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ProcessingInstructionType">
				<xs:sequence>
					<xs:element ref="InputQuestionReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Reference to a question used in the instruction. Allows the designation of an Alias used by the instruction. TypeOfObject should be set to QuestionItem or QuestionGrid.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="InputMeasurementReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Reference to a Measurement used in the instruction. Allows the designation of an Alias used by the instruction. TypeOfObject should be set to MeasurementItem.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="InputVariableReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Reference to a variable used in the coding process. Allows the designation of an Alias used by the instruction. TypeOfObject should be set to Variable.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ExternalInformation" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Reference to an external source of information used in the coding process, for example a value from a chart, etc.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A description of the generation instruction. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:CommandCode" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Structured information used by a system to process the instruction.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ControlConstructReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A control construct which is used to describe or process the instruction.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="Aggregation" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Describes the aggregation process, identifying both the independent and dependent variables within the process.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="isDerived" type="xs:boolean" default="true">
					<xs:annotation>
						<xs:documentation>Default setting is "true", the instruction describes a derivation. If the instruction is a simple recode, set to "false".</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="Aggregation" type="AggregationType">
		<xs:annotation>
			<xs:documentation>Describes the aggregation method and the variables used in the aggregation process.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="AggregationType">
		<xs:annotation>
			<xs:documentation>Describes the aggregation method and the variables used in the aggregation process. Identifies the method using an external controlled vocabulary and identifies the variables used either in-line or by reference to an existing description.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="r:AggregationMethod" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Identification of the type of aggregation method used. Supports the use of a controlled vocabulary. DDI strongly recommends the use of a controlled vocabulary. The DDI Alliance has provided a controlled vocabulary (AggregationMethod) to support this element at http://www.ddialliance.org/controlled-vocabularies.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:choice minOccurs="0">
				<xs:element ref="AggregationVariables">
					<xs:annotation>
						<xs:documentation>Identifies the independent and dependent variables used in the aggregation process in-line.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element ref="AggregationVariablesReference">
					<xs:annotation>
						<xs:documentation>A reference to an existing AggregationVariables description.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="AggregationVariables" type="AggregationVariablesType">
		<xs:annotation>
			<xs:documentation>Identifies the independent and dependent variables used in the aggregation process.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="AggregationVariablesReference" type="r:ReferenceType">
		<xs:annotation>
			<xs:documentation>Reference to an existing AggregationVariables using the Reference structure. TypeOfObject should be set to Variable.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="AggregationVariablesType">
		<xs:annotation>
			<xs:documentation>Identifies the independent and dependent variables used in the aggregation process. Note that in the case of calculating a percentage, mean, etc. of a dependent value against the total population of the cell, there is no independent variable.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:IdentifiableType">
				<xs:sequence>
					<xs:element ref="IndependentVariableReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A reference to a variable, which is an important constraint for the computed aggregation measure and has the potential to invoke a change in a dependent variable like sex for average of income. In the context of calculating percentages, the use of Sex as the independent variable would indicate that the percentages provided represent the percentage of the dependent variable associated with a specific value for Sex (i.e., the dependent variable expressed as a percentage of the total for Males). This would be opposed to the percent for the full population (the percent of the total grid population falling within that particular cell).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="DependentVariableReference" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A reference to a variable, for which the aggregate measure is computed like average of income.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="IndependentVariableReference" type="r:ReferenceType">
		<xs:annotation>
			<xs:documentation>Reference to an existing Variable using the Reference structure. TypeOfObject should be set to Variable.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DependentVariableReference" type="r:ReferenceType">
		<xs:annotation>
			<xs:documentation>Reference to an existing Variable using the Reference structure. TypeOfObject should be set to Variable.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="SourceReferenceType">
		<xs:annotation>
			<xs:documentation>Reference to an input used in the derivation or coding instruction. TypeOfObject should be set to Variable, QuestionItem, QuestionGrid, or MeasurementItem.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:ReferenceType">
				<xs:sequence>
					<xs:element ref="r:Alias" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Allows for assigning an alias used to reference this item in a command. For example if the SourceReference was a question capturing a persons age the command might read "If AGE LT 5...". AGE would be the alias.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- INTERVIEWER INSTRUCTIONS -->
	<xs:element name="InterviewerInstructionScheme" type="InterviewerInstructionSchemeType">
		<xs:annotation>
			<xs:documentation>A set of interviewer instructions to be displayed within the instrument, such as definitions, and explanations of terminology and questions.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="InterviewerInstructionSchemeType">
		<xs:annotation>
			<xs:documentation>A set of interviewer instructions to be displayed within the instrument, such as definitions, and explanations of terminology and questions. Content may also be used to provide the contents of an instruction manual for questions or instruments. In addition to the standard name, label, and description, allows for the inclusion of another InterviewerInstructionScheme by reference an a set of in-line instructions.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:MaintainableType">
				<xs:sequence>
					<xs:element ref="InterviewerInstructionSchemeName" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A name for the InterviewerInstructionScheme. May be expressed in multiple languages. Repeat the element to express names with different content, for example different names for different systems.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Label" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A display label for the InterviewerInstructionScheme. Supports multiple language versions of the same content as well as optional formatting of the content. Repeat for labels with different content, for example, labels with differing length limitations.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A description of the content and purpose of the InterviewerInstructionScheme. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:InterviewerInstructionSchemeReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Allows for the inclusion of an existing InterviewerInstructionScheme by reference.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element ref="Instruction">
							<xs:annotation>
								<xs:documentation>Content of an individual instruction.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="InstructionReference">
							<xs:annotation>
								<xs:documentation>Inclusion of an individual instruction by reference. TypeOfObject should be set to Instruction.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element ref="InstructionGroup">
							<xs:annotation>
								<xs:documentation>In-line description of a group of Instructions.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="InstructionGroupReference">
							<xs:annotation>
								<xs:documentation>The inclusion of an existing InstructionGroup by reference. TypeOfObject should be set to InstructionGroup.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="InterviewerInstructionSchemeName" type="r:NameType">
		<xs:annotation>
			<xs:documentation>Name of the Interviewer Instruction Scheme using the DDI Name structure.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="InstructionGroupReference" type="r:ReferenceType">
		<xs:annotation>
			<xs:documentation>Reference to an existing InstructionGroup using the Reference structure. TypeOfObject should be set to InstructionGroup.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="InstructionGroup" type="InstructionGroupType">
		<xs:annotation>
			<xs:documentation>Contains a group of Instructions.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="InstructionGroupType">
		<xs:annotation>
			<xs:documentation>Contains a group of Instructions, which may describe an ordered or hierarchical relationship structure. Specifies the purpose of the group, a name, label, and description of the group, its relationship to a specific universe or concept, and lists the members of the group.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:VersionableType">
				<xs:sequence>
					<xs:element ref="TypeOfInstructionGroup" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A generic element for specifying a reason for a InstructionGroup. Note that this element can contain either a term from a controlled vocabulary list or a textual description.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="InstructionGroupName" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A name for the group. May be expressed in multiple languages. Repeat the element to express names with different content, for example different names for different systems.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Label" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A display label for the InstructionGroup. Supports multiple language versions of the same content as well as optional formatting of the content. Repeat for labels with different content, for example, labels with differing length limitations.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A description of the content and purpose of the InstructionGroup. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:UniverseReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Reference to the universe statement describing the persons or other objects to which the contents of this group pertain.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:ConceptReference" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Reference to the concept expressed by the objects in this group.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Subject" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>If subjects are listed for this group, it is strongly recommended that the subjects listed also be found in the TopicalCoverage element for the parent packaging element when this group is included directly or by reference in a module containing a coverage element. Use of subject at the group level allows for associating objects as a type of subject based group or to identify subject characteristics of a reusable group of objects.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Keyword" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>If keywords are listed for this group, it is strongly recommended that the keywords listed also be found in the TopicalCoverage element for the parent packaging element when this group is included directly or by reference in a module containing a coverage element. Use of keyword at the group level allows for associating objects as a type of keyword based group or to identify keyword characteristics of a reusable group of objects.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element ref="InstructionReference">
							<xs:annotation>
								<xs:documentation>Reference to constituent Instruction (from the substitution group). TypeOfObject should be set to Instruction.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="InstructionGroupReference">
							<xs:annotation>
								<xs:documentation>Reference to constituent InstructionGroup. This allows for nesting of InstructionGroups. TypeOfObject should be set to InstructionGroup.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
				</xs:sequence>
				<xs:attribute name="isOrdered" type="xs:boolean" default="false">
					<xs:annotation>
						<xs:documentation>If set to "true" indicates that the content of the group is ordered as it appears within the XML structure.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="InstructionGroupName" type="r:NameType">
		<xs:annotation>
			<xs:documentation>Name of the InstructionGroup using the DDI Name structure.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="TypeOfInstructionGroup" type="r:CodeValueType">
		<xs:annotation>
			<xs:documentation>A brief textual description of the type of group created to associate a number of Instructions. Supports the use of an external controlled vocabulary.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="Instruction" type="InstructionType">
		<xs:annotation>
			<xs:documentation>Provides the content and description of a single instruction.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="InstructionType">
		<xs:annotation>
			<xs:documentation>Provides the content and description of a single instruction. In addition to the standard name, label, and description, an InParameter can be designated to specify information needed to process the dynamic content of the instruction, an image can be associated with the instruction, and the instruction text provided using DynamicText. Note that when using Dynamic Text, the full InstructionText must be repeated for multi-language versions of the content. Different languages may handle the dynamic portions in different locations and/or with different content. Therefore languages cannot be mixed within a dynamic text except when the full text itself has multiple language sections, for example, a foreign language term in a text. The InstructionText may also be repeated to provide a dynamic and plain text version of the instruction. This allows for accurate rendering of the instruction in a non-dynamic environment like print.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:VersionableType">
				<xs:sequence>
					<xs:element ref="InstructionName" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A name for the Instruction. May be expressed in multiple languages. Repeat the element to express names with different content, for example different names for different systems.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Label" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A display label for the Instruction. Supports multiple language versions of the same content as well as optional formatting of the content. Repeat for labels with different content, for example, labels with differing length limitations.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A description of the content and purpose of the Instruction. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:InParameter" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A parameter that may accept content from outside the Instruction. In addition to standard parameter content may provide the instructions for limiting the allowable array index.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="AssociatedImage" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>An image associated with the Instruction, located at the provided URN or URL.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="InstructionText" type="DynamicTextType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The content of the Instruction text provided using DynamicText. Note that when using Dynamic Text, the full InstructionText must be repeated for multi-language versions of the content. The InstructionText may also be repeated to provide a dynamic and plain text version of the instruction. This allows for accurate rendering of the instruction in a non-dynamic environment like print.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="InstructionName" type="r:NameType">
		<xs:annotation>
			<xs:documentation>Name of the Instruction using the DDI Name structure.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="AssociatedImage" type="r:ImageType">
		<xs:annotation>
			<xs:documentation>An image associated with the Instruction, located at the provided URN or URL.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<!-- INSTRUMENT -->
	<xs:element name="InstrumentScheme" type="InstrumentSchemeType">
		<xs:annotation>
			<xs:documentation>Describes a set of instruments maintained by an agency.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="InstrumentSchemeType">
		<xs:annotation>
			<xs:documentation>Describes a set of instruments maintained by an agency. In addition to the standard name, label, and description, allows for the inclusion of an existing InstrumentScheme by reference and contains Instruments and InstrumentGroups inline an by reference.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:MaintainableType">
				<xs:sequence>
					<xs:element ref="InstrumentSchemeName" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A name for the InstrumentScheme. May be expressed in multiple languages. Repeat the element to express names with different content, for example different names for different systems.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Label" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A display label for the InstrumentScheme. Supports multiple language versions of the same content as well as optional formatting of the content. Repeat for labels with different content, for example, labels with differing length limitations.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A description of the InstrumentScheme. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:InstrumentSchemeReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Allows for inclusion by reference of another Instrument Scheme.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element ref="Instrument">
							<xs:annotation>
								<xs:documentation>Describes an instrument within this instrument scheme.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="InstrumentReference">
							<xs:annotation>
								<xs:documentation>Includes an instrument in the scheme by reference.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element ref="InstrumentGroup">
							<xs:annotation>
								<xs:documentation>Describes a group of instruments as in instrument group within an instrument scheme.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="InstrumentGroupReference">
							<xs:annotation>
								<xs:documentation>Allows for inclusion by reference of a instrument group.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="InstrumentSchemeName" type="r:NameType">
		<xs:annotation>
			<xs:documentation>Name of the Instrument Scheme using the DDI Name structure.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<!-- INSTRUMENT -->
	<xs:element name="InstrumentGroup" type="InstrumentGroupType">
		<xs:annotation>
			<xs:documentation>Describes a group of instruments for administrative or conceptual purposes, which may be hierarchical.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="InstrumentGroupType">
		<xs:annotation>
			<xs:documentation>Describes a group of instruments for administrative or conceptual purposes, which may be hierarchical. In addition to the standard name, label, and description, contains references to the contained Instruments and InstrumentGroups.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:VersionableType">
				<xs:sequence>
					<xs:element ref="TypeOfInstrumentGroup" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A generic element for specifying a reason for a instrument group. Note that this element can contain either a term from a controlled vocabulary list or a textual description.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="InstrumentGroupName" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A name for the InstrumentGroup. May be expressed in multiple languages. Repeat the element to express names with different content, for example different names for different systems.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Label" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A display label for the InstrumentGroup. Supports multiple language versions of the same content as well as optional formatting of the content. Repeat for labels with different content, for example, labels with differing length limitations.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A description of the InstrumentGroup. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:UniverseReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Reference to the universe statement describing the persons or other objects to which the contents of this group pertain.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:ConceptReference" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Reference to the concept expressed by the objects in this group.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Subject" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>If subjects are listed for this group, it is strongly recommended that the subjects listed also be found in the TopicalCoverage element for the parent packaging element when this group is included directly or by reference in a module containing a coverage element. Use of subject at the group level allows for associating objects as a type of subject based group or to identify subject characteristics of a reusable group of objects.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Keyword" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>If keywords are listed for this group, it is strongly recommended that the keywords listed also be found in the TopicalCoverage element for the parent packaging element when this group is included directly or by reference in a module containing a coverage element. Use of keyword at the group level allows for associating objects as a type of keyword based group or to identify keyword characteristics of a reusable group of objects.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element ref="InstrumentReference">
							<xs:annotation>
								<xs:documentation>Reference to constituent instrument.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="InstrumentGroupReference">
							<xs:annotation>
								<xs:documentation>Reference to constituent instrument group. This allows for nesting of instrument groups.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
				</xs:sequence>
				<xs:attribute name="isOrdered" type="xs:boolean" default="false">
					<xs:annotation>
						<xs:documentation>If set to "true" indicates that the content of the group is ordered as it appears within the XML structure.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="InstrumentGroupName" type="r:NameType">
		<xs:annotation>
			<xs:documentation>Name of the Instrument Group using the DDI Name structure.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="InstrumentGroupReference" type="r:ReferenceType">
		<xs:annotation>
			<xs:documentation>Reference to an existing InstrumentGroup using the Reference structure. TypeOfObject should be set to InstrumentGroup.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="TypeOfInstrumentGroup" type="r:CodeValueType">
		<xs:annotation>
			<xs:documentation>A brief textual description of the type of group created to associate a number of instruments. Supports the use of an external controlled vocabulary.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="InstrumentType">
		<xs:annotation>
			<xs:documentation>Defines the type of instrument used for data collection or capture. In addition to the standard name, label, and description contains a classification of the type of instrument, a reference to an external instance of the instrument (such as an image of a questionnaire or programming script) and a reference to the Sequence control construct that contains the flow for data collection or capture.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:VersionableType">
				<xs:sequence>
					<xs:element ref="InstrumentName" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A name for the Instrument. May be expressed in multiple languages. Repeat the element to express names with different content, for example different names for different systems.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Label" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A display label for the Instrument. Supports multiple language versions of the same content as well as optional formatting of the content. Repeat for labels with different content, for example, labels with differing length limitations.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A description of the Instrument. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="TypeOfInstrument" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Describes the type of the instrument, according to the documenters type classification. Supports the use of an external controlled vocabulary. The DDI Alliance has provided a controlled vocabulary (TypeOfInstrument) to support this element at http://www.ddialliance.org/controlled-vocabularies.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ExternalInstrumentLocation" type="xs:anyURI" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A reference to an external representation of the data collection instrument, such as an image of a questionnaire or programming script.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ControlConstructReference" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A reference to the Sequence control construct that initiates the flow of the instrument content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="FieldedLanguages" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Language in which the Instrument is fielded. Include all options as separate items. Language can be specified by region, for example en-AU. Supports the use of a controlled vocabulary.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="DevelopmentResultsReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Reference to the development implementation results which gave rise to this version of the object. TypeOfObject should be DevelopmentResults.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="InstrumentName" type="r:NameType">
		<xs:annotation>
			<xs:documentation>Name of the Instrument using the DDI Name structure.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="FieldedLanguages" type="r:CodeValueType">
		<xs:annotation>
			<xs:documentation>Language in which the Instrument is fielded. Include all options as separate items. Language can be specified by region, for example en-AU. Supports the use of a controlled vocabulary.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ControlConstructScheme" type="ControlConstructSchemeType">
		<xs:annotation>
			<xs:documentation>A set of control constructs maintained by an agency and used in the instrument or computational instruction.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="ControlConstructSchemeType">
		<xs:annotation>
			<xs:documentation>A set of control constructs maintained by an agency and used in the instrument or computational instruction. ControlConstructs describe the ordering and flow of questions within an instrument or information through a process. In addition to the standard name, label and description can include an existing ControlConstructScheme by reference and describe individual Control Constructs of varying types.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:MaintainableType">
				<xs:sequence>
					<xs:element ref="ControlConstructSchemeName" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A name for the ControlConstructScheme. May be expressed in multiple languages. Repeat the element to express names with different content, for example different names for different systems.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Label" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A display label for the ControlConstructScheme. Supports multiple language versions of the same content as well as optional formatting of the content. Repeat for labels with different content, for example, labels with differing length limitations.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A description of the content and purpose of the ControlConstructScheme. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:ControlConstructSchemeReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Provides for inclusion by reference of external Control Construct Schemes.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element ref="ControlConstruct">
							<xs:annotation>
								<xs:documentation>Extensible structure for control elements used in describing flow logic within the instrument.: IfThenElse, RepeatUntil, RepeatWhile, Loop, Sequence, ComputationItem, StatementItem, MeasurementConstruct, and QuestionConstruct.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="ControlConstructReference">
							<xs:annotation>
								<xs:documentation>Extensible structure for control elements used in describing flow logic within the instrument.: IfThenElse, RepeatUntil, RepeatWhile, Loop, Sequence, ComputationItem, StatementItem, MeasurementConstruct and QuestionConstruct. TypeOfObject should reflect the type of ControlConstruct being referenced. Value should be IfThenElse, RepeatUntil, RepeatWhile, Loop, Sequence, ComputationItem, StatementItem, MeasurementConstruct or QuestionConstruct.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element ref="ControlConstructGroup">
							<xs:annotation>
								<xs:documentation>In-line description of a group of ControlConstructs.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="ControlConstructGroupReference">
							<xs:annotation>
								<xs:documentation>The inclusion of an existing ControlConstructGroup by reference. TypeOfObject should be set to ControlConstructGroup.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="ControlConstructSchemeName" type="r:NameType">
		<xs:annotation>
			<xs:documentation>Name of the Control construct Scheme using the DDI Name structure.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ControlConstructGroupReference" type="r:ReferenceType">
		<xs:annotation>
			<xs:documentation>Reference to an existing ControlConstructGroup using the Reference structure. TypeOfObject should be set to ControlConstructGroup.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ControlConstructGroup" type="ControlConstructGroupType">
		<xs:annotation>
			<xs:documentation>Contains a group of ControlConstructs.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="ControlConstructGroupType">
		<xs:annotation>
			<xs:documentation>Contains a group of ControlConstructs, which may describe an ordered or hierarchical relationship structure. Specifies the purpose of the group, a name, label, and description of the group, its relationship to a specific universe or concept, and lists the members of the group.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:VersionableType">
				<xs:sequence>
					<xs:element ref="TypeOfControlConstructGroup" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A generic element for specifying a reason for a ControlConstructGroup. Note that this element can contain either a term from a controlled vocabulary list or a textual description.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ControlConstructGroupName" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A name for the ControlConstructGroup. May be expressed in multiple languages. Repeat the element to express names with different content, for example different names for different systems.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Label" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A display label for the ControlConstructGroup. Supports multiple language versions of the same content as well as optional formatting of the content. Repeat for labels with different content, for example, labels with differing length limitations.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A description of the content and purpose of the ControlConstructGroup. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:UniverseReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Reference to the universe statement describing the persons or other objects to which the contents of this group pertain.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:ConceptReference" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Reference to the concept expressed by the objects in this group.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Subject" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>If subjects are listed for this group, it is strongly recommended that the subjects listed also be found in the TopicalCoverage element for the parent packaging element when this group is included directly or by reference in a module containing a coverage element. Use of subject at the group level allows for associating objects as a type of subject based group or to identify subject characteristics of a reusable group of objects.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Keyword" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>If keywords are listed for this group, it is strongly recommended that the keywords listed also be found in the TopicalCoverage element for the parent packaging element when this group is included directly or by reference in a module containing a coverage element. Use of keyword at the group level allows for associating objects as a type of keyword based group or to identify keyword characteristics of a reusable group of objects.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element ref="ControlConstructReference">
							<xs:annotation>
								<xs:documentation>Reference to constituent ControlConstruct (from the substitution group). TypeOfObject should be set to IfThenElse, RepeatUntil, RepeatWhile, Loop, Sequence, ComputationItem, StatementItem, MeasurementConstruct or QuestionConstruct.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="ControlConstructGroupReference">
							<xs:annotation>
								<xs:documentation>Reference to constituent ControlConstructGroup. This allows for nesting of ControlConstructGroups. TypeOfObject should be set to ControlConstructGroup.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
				</xs:sequence>
				<xs:attribute name="isOrdered" type="xs:boolean" default="false">
					<xs:annotation>
						<xs:documentation>If set to "true" indicates that the content of the group is ordered as it appears within the XML structure.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="ControlConstructGroupName" type="r:NameType">
		<xs:annotation>
			<xs:documentation>Name of the ControlConstructGroup using the DDI Name structure.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="TypeOfControlConstructGroup" type="r:CodeValueType">
		<xs:annotation>
			<xs:documentation>A brief textual description of the type of group created to associate a number of ControlConstructs. Supports the use of an external controlled vocabulary.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ControlConstruct" type="ControlConstructType" abstract="true">
		<xs:annotation>
			<xs:documentation>Provides the basic, extensible structure for control elements used in describing flow logic within the instrument.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="ControlConstructType" abstract="true">
		<xs:annotation>
			<xs:documentation>Provides the basic, extensible structure for control elements used in describing flow logic within the instrument. The only data point which is inherited by the extended constructs based on this type is the identification of the control construct.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:VersionableType">
				<xs:sequence>
					<xs:element ref="ConstructName" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A name for the ControlConstruct. May be expressed in multiple languages. Repeat the element to express names with different content, for example different names for different systems.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Label" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A display label for the ControlConstruct. Supports multiple language versions of the same content as well as optional formatting of the content. Repeat for labels with different content, for example, labels with differing length limitations.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A description of the content and purpose of the ControlConstruct. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:InParameter" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A parameter that may accept content from outside its parent element.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:OutParameter" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>An identify for the output of the control construct.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Binding" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A structure used to bind the content of a parameter declared as the source to a parameter declared as the target. For example, binding the output of a question to the input of a generation instruction. Question A has an OutParameter X. Generation Instruction has an InParameter Y used in the recode instruction. Binding defines the content of InParameter Y to be whatever is provided by OutParameter X for use in the calculation of the recode.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ExternalAid" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A pointer to an external aid presented by the instrument such as a text card, image, audio, or audiovisual aid. Typically a URN. Use type attribute to describe the type of external aid provided. Example of terms to use would include: imageOnly audioOnly audioVisual multiMedia. ExternalAid will be available each time the control construct is invoked. Care should be taken when placing an ExternalAid in RepeatWhile, RepeatUntil and Loop constructs as it will recur each time the conditional statement is checked. This does not include interviewer instructions, which are handled separately.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element ref="ExternalInterviewerInstruction">
							<xs:annotation>
								<xs:documentation>Contains a reference to an interviewer instruct ruction held in a structure other than DDI XML. Uses the OtherMaterial structure to describe and link to the external object.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="InterviewerInstructionReference">
							<xs:annotation>
								<xs:documentation>Reference to an interviewer instruction expressed as DDI XML.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
						<xs:element ref="DevelopmentResultsReference" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Reference to the development implementation results which gave rise to this version of the object. TypeOfObject should be DevelopmentResults.</xs:documentation>
							</xs:annotation>
						</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="ConstructName" type="r:NameType">
		<xs:annotation>
			<xs:documentation>Name of the Construct using the DDI Name structure.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="IfThenElse" type="IfThenElseType" substitutionGroup="ControlConstruct">
		<xs:annotation>
			<xs:documentation>A member of the ControlConstruct substitution group. Describes an if-then-else decision type of control construct.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="IfThenElseType">
		<xs:annotation>
			<xs:documentation>A member of the ControlConstruct substitution group. Describes an if-then-else decision type of control construct. IF the stated condition is met, the THEN clause is trigged, otherwise the ELSE clause is triggered. Contains an IfCondition (the condition that must be met to trigger the Then clause), a ThenConstructReference (indicating the construct to invoke if the condition is met), an ElseConstructReference (indicating the construct to invoke if the condition is not met), and an ElseIf structure allowing the expression of multiple conditions to invoke multiple branching.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ControlConstructType">
				<xs:sequence>
					<xs:element ref="TypeOfIfThenElse" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A brief textual identification of the IfThenElse. Supports the use of an external controlled vocabulary.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="IfCondition" minOccurs="0">
						<xs:annotation>
							<xs:documentation>The condition which must be met to trigger the Then clause, expressed as a CommandCode. The condition is an expression in the programming language used in the instrument.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ThenConstructReference" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Reference to the control construct which should be triggered if the associated condition is met.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ElseIf" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Use for multiple branching from a single point in the flow logic represented by the flow logic If, Then, ElseIf, Then, etc.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ElseConstructReference" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Reference to the control construct which is triggered if the associated condition is not met.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ElseIfType">
		<xs:annotation>
			<xs:documentation>Use for multiple branching from a single point in the flow logic represented by the flow logic If, Then, ElseIf, Then, etc. This is a packaging element for an IfCondition and ThenConstructReference and not a control construct.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="IfCondition" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The condition which must be met to trigger the Then clause, expressed as a Coding. The condition is an expression in the programming language used in the instrument.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ThenConstructReference" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the control construct which should be triggered if the associated condition is met.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="ElseIf" type="ElseIfType">
		<xs:annotation>
			<xs:documentation>Use for multiple branching from a single point in the flow logic represented by the flow logic If, Then, ElseIf, Then, etc.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="RepeatUntil" type="RepeatUntilType" substitutionGroup="ControlConstruct">
		<xs:annotation>
			<xs:documentation>A ControlConstruct that specifies a ControlConstruct to be repeated until a specified condition is met.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="RepeatUntilType">
		<xs:annotation>
			<xs:documentation>A member of the ControlConstruct substitution group. Specifies a ControlConstruct to be repeated until a specified condition is met. Before each iteration the condition is tested. When the condition is met, control passes back to the containing control construct.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ControlConstructType">
				<xs:sequence>
					<xs:element ref="UntilCondition" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Information on the command used to determine whether the "Until" condition is met.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="UntilConstructReference" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A reference to the ControlConstruct to implement until the UntilCondition is met. This could be a single ControlConstruct or a set of ControlConstructs within a Sequence.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="RepeatWhile" type="RepeatWhileType" substitutionGroup="ControlConstruct">
		<xs:annotation>
			<xs:documentation>A ControlConstruct that specifies a ControlConstruct to be repeated while a specified condition is met.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="RepeatWhileType">
		<xs:annotation>
			<xs:documentation>A member of the ControlConstruct substitution group. Specifies a ControlConstruct to be repeated while a specified condition is met. Before each iteration the condition is tested. When the condition is not met, control passes back to the containing control construct.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ControlConstructType">
				<xs:sequence>
					<xs:element ref="WhileCondition" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Information on the command used to determine whether the "While" condition is met.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="WhileConstructReference" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A reference to the ControlConstruct to implement until the WhileCondition is met. This could be a single ControlConstruct or a set of ControlConstructs within a Sequence.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="Loop" type="LoopType" substitutionGroup="ControlConstruct">
		<xs:annotation>
			<xs:documentation>A control construct describing an action which loops until a limiting condition is met.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="LoopType">
		<xs:annotation>
			<xs:documentation>A member of the control construct substitution group. Describing an action which loops until a limiting condition is met. The ControlConstruct contained in the Loop operates on the LoopVariable until the LoopWhile condition is met, and then control is handed back to the containing control construct.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ControlConstructType">
				<xs:sequence>
					<xs:element ref="LoopVariableReference" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A reference to the variable (as used in the associated CommandCode) which is incremented or otherwise manipulated to meet the conditions stated in the LoopWhile condition.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="InitialValue" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Information on the command used to set the initial value for the process. Could be a simple value.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="LoopWhile" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Information on the command used to determine whether the "LoopWhile" condition is met.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="StepValue" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Information on the command used to set the incremental or step value for the process. Could be a simple value.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ControlConstructReference" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A reference to the ControlConstruct to implement until the LoopWhile condition is met. This could be a single ControlConstruct or a set of ControlConstructs within a Sequence.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="Sequence" type="SequenceType" substitutionGroup="ControlConstruct">
		<xs:annotation>
			<xs:documentation>A ControlConstruct that provides a sequence order for operations expressed as control constructs.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="SequenceType">
		<xs:annotation>
			<xs:documentation>A member of the ControlConstruct substitution group. Provides a sequence order for operations expressed as control constructs. The sequence can be typed to support local processing or classification flags and alternate sequencing instructions (such as randomize for each respondent).</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ControlConstructType">
				<xs:sequence>
					<xs:element ref="TypeOfSequence" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Provides the ability to "type" a sequence for classification or processing purposes. Supports the use of an external controlled vocabulary.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ControlConstructReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>References control constructs in the order that they should appear within the instrument.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ConstructSequence" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Describes alternate ordering for different cases using the SpecificSequence structure. If you set the sequence to anything other than order of appearance the only allowable children are QuestionConstruct or Sequence. Contents must be randomizable.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="ConstructSequence" type="SpecificSequenceType">
		<xs:annotation>
			<xs:documentation>Describes the ordering of Constructs when not otherwise indicated.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ComputationItem" type="ComputationItemType" substitutionGroup="ControlConstruct">
		<xs:annotation>
			<xs:documentation>A form of control construct providing a code and assigning a variable to hold value of the code as used for computation in control construct flow.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="ComputationItemType">
		<xs:annotation>
			<xs:documentation>A form of control construct providing a code and assigning a variable to hold value of the code as used for computation in control construct flow. Member of the ControlConstruct substitution group.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ControlConstructType">
				<xs:sequence>
					<xs:element ref="TypeOfComputationItem" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A brief textual identification of the ComputationItem. Supports the use of an external controlled vocabulary.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:CommandCode" minOccurs="0">
						<xs:annotation>
							<xs:documentation>The Code which contains the value of the variable in programming terms.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="AssignedVariableReference" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A reference to a variable to which the associated value in the Code element is assigned.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="StatementItem" type="StatementItemType" substitutionGroup="ControlConstruct">
		<xs:annotation>
			<xs:documentation>A textual statement used in the Instrument. A substitution for ControlConstruct.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="StatementItemType">
		<xs:annotation>
			<xs:documentation>A textual statement used in the Instrument. A substitution for ControlConstruct. In addition to the objects found in ControlConstruct StatementItem adds the text for display at the specified point within the instrument.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ControlConstructType">
				<xs:sequence>
					<xs:element ref="DisplayText" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Text to be displayed by the instrument. Supports the use of DynamicText. Note that when using Dynamic Text, the full DisplayText must be repeated for multi-language versions of the content. Different languages may handle the dynamic portions in different locations and/or with different content. Therefore languages cannot be mixed within a dynamic text except when the full text itself has multiple language sections, for example, a foreign language term in a text. The DisplayText may also be repeated to provide a dynamic and plain text version of the display. This allows for accurate rendering of the display in a non-dynamic environment like print.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DynamicTextType">
		<xs:annotation>
			<xs:documentation>Structure supporting the use of dynamic text, where portions of the textual contend change depending on external information (pre-loaded data, response to an earlier query, environmental situations, etc.).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="TextContent" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>This is the head of a substitution group and is never used directly as an element name. Instead it is replaced with either LiteralText or ConditionalText.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="isStructureRequired" type="xs:boolean" default="false">
			<xs:annotation>
				<xs:documentation>If textual structure (e.g. size, color, font, etc.) is required to understand the meaning of the content change value to "true".</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="audienceLanguage" type="xs:language" use="optional">
			<xs:annotation>
				<xs:documentation>Specifies the language of the intended audience. This is particularly important for clarifying the primary language of a mixed language textual string, for example when language testing and using a foreign word withing the question text.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:element name="TextContent" type="TextContentType" abstract="true">
		<xs:annotation>
			<xs:documentation>Abstract type existing as the head of a substitution group. May be replaced by any valid member of the substitution group TextContent.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="TextContentType" abstract="true">
		<xs:annotation>
			<xs:documentation>Abstract type existing as the head of a substitution group. May be replaced by any valid member of the substitution group TextContent. Provides the common element Description to all members using TextContent as an extension base.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="r:Description" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A description of the content and purpose of the text segment. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="LiteralText" type="LiteralTextType" substitutionGroup="TextContent">
		<xs:annotation>
			<xs:documentation>A substitution for TextContent containing the static (unchanging) text.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="LiteralTextType">
		<xs:annotation>
			<xs:documentation>Literal (static) text to be used in the instrument using the StructuredString structure plus an attribute allowing for the specification of white space to be preserved.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="TextContentType">
				<xs:sequence>
					<xs:element ref="Text">
						<xs:annotation>
							<xs:documentation>The value of the static text string. Supports the optional use of XHTML formatting tags within the string structure. If the content of a literal text contains more than one language, i.e. "What is your understanding of the German word 'Gesundheit'?", the foreign language element should be placed in a separate LiteralText component with the appropriate xml:lang value and, in this case, isTranslatable set to "false". If the existence of white space is critical to the understanding of the content (such as inclusion of a leading or trailing white space), set the attribute of Text xml:space to "preserve".</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="Text" type="TextType">
		<xs:annotation>
			<xs:documentation>The static portion of the text expressed as a StructuredString with the ability to preserve whitespace if critical to the understanding of the content.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="TextType">
		<xs:annotation>
			<xs:documentation>The static portion of the text expressed as a StructuredString with the ability to preserve whitespace if critical to the understanding of the content.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:ContentType">
				<xs:attribute ref="xml:space" default="default">
					<xs:annotation>
						<xs:documentation>The default setting states that leading and trailing white space will be removed and multiple adjacent white spaces will be treated as a single white space. If the existance of any of these white spaces is critical to the understanding of the content, change the value of this attribute to "preserve".</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="ConditionalText" type="ConditionalTextType" substitutionGroup="TextContent">
		<xs:annotation>
			<xs:documentation>A substitution for TextContent, contains command code or source of the dynamic (changing) text.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="ConditionalTextType">
		<xs:annotation>
			<xs:documentation>Text which has a changeable value depending on a stated condition, response to earlier questions, or as input from a set of metrics (pre-supplied data).</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="TextContentType">
				<xs:choice>
					<xs:element ref="Expression">
						<xs:annotation>
							<xs:documentation>The condition on which the associated text varies expressed by a command code. For example, a command that inserts an age by calculating the difference between today’s date and a previously defined date of birth. Use InParameter and OutParameter of parent class to associate Parameters to Alias values in command code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="IfThenElseText">
						<xs:annotation>
							<xs:documentation>The condition on which the associated text varies expressed by an IfThenElse decision tree. For example, If MEMBER = 1, Then = [ConditionalResult singular], ElseIf MEMBER > 1, Then = [ConditionalResult plural].  Use InParameter and OutParameter of parent class to associate Parameters to Alias values in the IfCondition.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:SourceParameterReference">
						<xs:annotation>
							<xs:documentation>This allows for the simple insert of a piece of information from another specified parameter. For example, if the text of the item using conditional text included the respondent’s name use SourceParameterReference to reference the InParameter of the question that is bound to the OutParameter of the question: “What is your name?”</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:choice>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ConditionalResultType">
		<xs:annotation>
			<xs:documentation>The text resulting from the conditional command. Supports structured content and the insertion of content by a source parameter. For example if a language has gender specific verb structures the result of an IfCondition may result in a text using female verb structures and inserting the female's name at a specific point.</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:sequence>
				<xs:element ref="Text" minOccurs="1" maxOccurs="unbounded">
					<xs:annotation>
						<xs:documentation>The value of the static text string to use if condition is true. Supports the optional use of XHTML formatting tags within the string structure. If the content of a literal text contains more than one language, i.e. "What is your understanding of the German word 'Gesundheit'?", the foreign language element should be placed in a separate LiteralText component with the appropriate xml:lang value and, in this case, isTranslatable set to "false". If the existence of white space is critical to the understanding of the content (such as inclusion of a leading or trailing white space), set the attribute of Text xml:space to "preserve".</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:sequence>			
			<xs:element ref="r:SourceParameterReference">
				<xs:annotation>
					<xs:documentation>This allows for the simple insert of a piece of information from another specified parameter. For example, if the text of the item using conditional text included the respondent’s name use SourceParameterReference to reference the InParameter of the question that is bound to the OutParameter of the question: “What is your name?”</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="IfThenElseTextType">
		<xs:annotation>
			<xs:documentation>Describes an if-then-else decision type for conditional text. IF the stated condition is met, the THEN clause is trigged, otherwise the ELSE clause is triggered. Contains an IfCondition (the condition that must be met to trigger the Then clause), a ThenResult (indicating the ConditionalResult to invoke if the condition is met), an ElseResult (indicating the construct to invoke if the condition is not met), and an ElseIfText structure allowing the expression of multiple conditions to invoke multiple branching.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="IfCondition" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The condition which must be met to trigger the Then clause, expressed as a CommandCode. The condition is an expression in the programming language used in the instrument.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ThenResult" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The conditional response which should be triggered if the associated condition is met.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ElseIfText" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Use for multiple branching from a single point in the flow logic represented by the flow logic If, Then, ElseIf, Then, etc.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ElseResult" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The conditional response which should be triggered if the associated condition is not met.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="IfThenElseText" type="IfThenElseTextType">
		<xs:annotation>
			<xs:documentation>Describes an if-then-else decision type for conditional text. IF the stated condition is met, the THEN clause is trigged, otherwise the ELSE clause is triggered. Contains an IfCondition (the condition that must be met to trigger the Then clause), a ThenResult (indicating the ConditionalResult to invoke if the condition is met), an ElseResult (indicating the construct to invoke if the condition is not met), and an ElseIfText structure allowing the expression of multiple conditions to invoke multiple branching.</xs:documentation>
		</xs:annotation>
	</xs:element>	
	<xs:complexType name="ElseIfTextType">
		<xs:annotation>
			<xs:documentation>Use for multiple branching from a single point in the flow logic represented by the flow logic If, Then, ElseIf, Then, etc. This is a packaging element for an IfCondition and ThenConstructReference and not a control construct.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="IfCondition" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The condition which must be met to trigger the Then clause, expressed as a Coding. The condition is an expression in the programming language used in the instrument.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ThenResult" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The conditional response which should be triggered if the associated condition is met.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="ElseIfText" type="ElseIfTextType">
		<xs:annotation>
			<xs:documentation>Use for multiple branching from a single point in the flow logic represented by the flow logic If, Then, ElseIf, Then, etc.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ThenResult" type="ConditionalResultType">
		<xs:annotation>
			<xs:documentation>The conditional result which should be triggered if the associated condition is met.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ElseResult" type="ConditionalResultType">
		<xs:annotation>
			<xs:documentation>The conditional result which should be triggered if the associated condition is not met.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="QuestionSchemeType">
		<xs:annotation>
			<xs:documentation>Contains a set of QuestionItems, QuestionGrids, QuestionBlocks, and QuestionGroups. In addition to the standard name, label, and description of the Question Scheme, may contain another QuestionScheme by reference, a listing of Questions by type (in-line or by reference), and a listing of QuestionGroups (in-line or by reference).</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:MaintainableType">
				<xs:sequence>
					<xs:element ref="QuestionSchemeName" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A name for the QuestionScheme. May be expressed in multiple languages. Repeat the element to express names with different content, for example different names for different systems.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Label" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A display label for the QuestionScheme. Supports multiple language versions of the same content as well as optional formatting of the content. Repeat for labels with different content, for example, labels with differing length limitations.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A description of the content and purpose of the QuestionScheme. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:QuestionSchemeReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Allows for the inclusion of another QuestionScheme by reference.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element ref="QuestionItem">
							<xs:annotation>
								<xs:documentation>Describes a QuestionItem in-line.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="QuestionItemReference">
							<xs:annotation>
								<xs:documentation>Allows for the inclusion of an existing question item by reference.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element ref="QuestionGrid">
							<xs:annotation>
								<xs:documentation>Describes a QuestionGrid in-line.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="QuestionGridReference">
							<xs:annotation>
								<xs:documentation>Allows for the inclusion of an existing question grid by reference.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element ref="QuestionBlock">
							<xs:annotation>
								<xs:documentation>Describes a QuestionBlock in-line.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="QuestionBlockReference">
							<xs:annotation>
								<xs:documentation>Allows for the inclusion of an existing question block by reference.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element ref="QuestionGroup">
							<xs:annotation>
								<xs:documentation>Contains a group of Questions, which may be ordered or hierarchical.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="QuestionGroupReference">
							<xs:annotation>
								<xs:documentation>Allows the inclusion of an existing QuestionGroup by reference.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="QuestionSchemeName" type="r:NameType">
		<xs:annotation>
			<xs:documentation>Name of the Question Scheme using the DDI Name structure.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="QuestionItemReference" type="r:ReferenceType">
		<xs:annotation>
			<xs:documentation>Reference to an existing QuestionItem using the Reference structure. TypeOfObject should be set to QuestionItem.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="QuestionGridReference" type="r:ReferenceType">
		<xs:annotation>
			<xs:documentation>Reference to an existing QuestionGrid using the Reference structure. TypeOfObject should be set to QuestionGrid.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="QuestionBlockReference" type="r:ReferenceType">
		<xs:annotation>
			<xs:documentation>Reference to an existing QuestionBlock using the Reference structure. TypeOfObject should be set to QuestionBlock.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="QuestionGroupReference" type="r:ReferenceType">
		<xs:annotation>
			<xs:documentation>Reference to an existing QuestionGroup using the Reference structure. TypeOfObject should be set to QuestionGroup.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="QuestionGrid" type="QuestionGridType">
		<xs:annotation>
			<xs:documentation>Structures the QuestionGrid as an NCube-like structure providing dimension information, labeling options, and response domains attached to one or more cells within the grid.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="QuestionBlock" type="QuestionBlockType">
		<xs:annotation>
			<xs:documentation>A QuestionBlock is a specific structure used in educational and other types of testing where an object (Stimulus Material) is provided and a set of questions are asked regarding the object.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="QuestionGroup" type="QuestionGroupType">
		<xs:annotation>
			<xs:documentation>Contains a group of Questions, which may be ordered or hierarchical.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="MeasurementItem" type="MeasurementItemType">
		<xs:annotation>
			<xs:documentation>Structure a single Measurement which may contain one or more response domains (i.e., a list of valid category responses where if "Other" is indicated a text response can be used to specify the intent of "Other").</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="MeasurementItemType">
		<xs:annotation>
			<xs:documentation>Structure a single Measurement which may contain one or more response domains (i.e., a list of valid category responses where if "Other" is indicated a text response can be used to specify the intent of "Other"). The structure provides detail on the intent of the measurement, they type of capture, the valid response options and the number of allowed responses, references to external aids and instructions, and an estimation of the time needed to respond to the measurement. Note that the MeasurementItem is a reusable format for use in any number of applied uses. Additional materials and information can be added within the MeasurementConstruct which is the applied use of a measurement.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:VersionableType">
				<xs:sequence>
					<xs:element ref="MeasurementItemName" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A name for the MeasurementItem. Repeat the element to express names with different content, for example different names for different systems.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Label" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A display label for the MeasurementItem. Supports multiple language versions of the same content as well as optional formatting of the content. Repeat for labels with different content, for example, labels with differing length limitations.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A description of the MeasurementItem. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:InParameter" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Provides an identity for input objects required for the MeasurementItem.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:OutParameter" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Provides an identify for the output objects of the MeasurementItem.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Binding" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A structure used to bind the content of a parameter declared as the source to a parameter declared as the target.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="TypeOfMeasurementItem" minOccurs="0" maxOccurs="unbounded" >
						<xs:annotation>
							<xs:documentation>A brief term defining the type of MeasurementItem. Supports the use of an external controlled vocabulary.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="MeasurementItemIntent" minOccurs="0">
						<xs:annotation>
							<xs:documentation>The purpose of the MeasurementItem in terms of what it is designed to measure.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:choice minOccurs="0">
						<xs:choice minOccurs="0">
							<xs:element ref="ResponseDomain">
								<xs:annotation>
									<xs:documentation>Contains a response domain for the measurement item. Typically used to describe simple response domains (textual, numeric, etc.).</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element ref="ResponseDomainReference">
								<xs:annotation>
									<xs:documentation>The inclusion of a response domain by reference (must be supported by a managed representation). An abstract element. May be substituted by any valid object of substitution type ResponseDomainReference.</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:choice>
						<xs:element ref="StructuredMixedResponseDomain">
							<xs:annotation>
								<xs:documentation>Use in cases where the measurement requires the option for multiple response domains.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
					<xs:element ref="r:ResponseCardinality" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Allows the designation of the minimum and maximum number of responses allowed for this measurement. Note that each response domain has its own response cardinality.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:ConceptReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A reference to the concept associated with the response to the measurement.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ExternalAid" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A pointer to an external aid presented by the instrument such as a text card, image, audio, or audiovisual aid. Typically a URN. Use type attribute to describe the type of external aid provided. Example of terms to use would include: imageOnly audioOnly audioVisual multiMedia.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element ref="ExternalInterviewerInstruction">
							<xs:annotation>
								<xs:documentation>External reference to an interviewer instruction not expressed as DDI XML using OtherMaterial.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="InterviewerInstructionReference">
							<xs:annotation>
								<xs:documentation>Reference to an interviewer instruction expressed as DDI XML.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
					<xs:element ref="r:RepresentedVariableReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Reference to the RepresentedVariable that describes the data to be collected by this measurement. The RepresentedVariable contains the broad reusable specification of the Variable, i.e., concept, universe, and value representation. When more than one ResponseDomain exists, one RepresentedVariable should be created for each ResponseDomain in the same order as the corresponding ResponseDomain. TypeOfObject should be set to RepresentedVariable.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="DevelopmentResultsReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Reference to the development implementation results which gave rise to this version of the object. TypeOfObject should be DevelopmentResults.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="estimatedSecondsResponseTime" type="xs:decimal" use="optional">
					<xs:annotation>
						<xs:documentation>The estimated amount of time required to perform the measurement expressed in seconds. Decimal values should be used to define fractions of seconds.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="TypeOfMeasurementItem" type="r:CodeValueType">
		<xs:annotation>
			<xs:documentation>A brief term defining the type of MeasurementItem. Supports the use of an external controlled vocabulary.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="MeasurementItemIntent" type="r:StructuredStringType">
		<xs:annotation>
			<xs:documentation>Intent of the Measurement. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:complexType name="MeasurementSchemeType">
		<xs:annotation>
			<xs:documentation>Contains a set of MeasurementItems and MeasurementGroups. In addition to the standard name, label, and description of the MeasurementScheme, may contain another MeasurementScheme by reference, a listing of MeasurementItems (in-line or by reference), and a listing of MeasurementGroups (in-line or by reference).</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:MaintainableType">
				<xs:sequence>
					<xs:element ref="MeasurementSchemeName" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A name for the MeasurementScheme. May be expressed in multiple languages. Repeat the element to express names with different content, for example different names for different systems.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Label" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A display label for the scheme. May be expressed in multiple languages. Repeat for labels with different content, for example, labels with differing length limitations.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A description of the content and purpose of the MeasurementItemScheme. May be expressed in multiple languages and supports the use of structured content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:MeasurementSchemeReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Allows for the inclusion of another MeasurementItemScheme by reference.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element ref="MeasurementItem">
							<xs:annotation>
								<xs:documentation>Describes a MeasurementItem in-line.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="r:MeasurementItemReference">
							<xs:annotation>
								<xs:documentation>Allows for the inclusion of an existing MeasurementItem by reference.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element ref="MeasurementGroup">
							<xs:annotation>
								<xs:documentation>Contains a group of MeasurementItems, which may be ordered or hierarchical.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="MeasurementGroupReference">
							<xs:annotation>
								<xs:documentation>Allows the inclusion of an existing MeasurementItemGroup by reference.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="MeasurementScheme" type="MeasurementSchemeType">
		<xs:annotation>
			<xs:documentation>Contains a set of MeasurementItems and MeasurementGroups.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="MeasurementSchemeName" type="r:NameType">
		<xs:annotation>
			<xs:documentation>Name of the MeasurementScheme using the DDI Name structure.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="MeasurementGroupReference" type="r:ReferenceType">
		<xs:annotation>
			<xs:documentation>Reference to an existing MeasurementGroup using the Reference structure. TypeOfObject should be set to MeasurementGroup.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="MeasurementGroup" type="MeasurementGroupType">
		<xs:annotation>
			<xs:documentation>Contains a group of MeasurementItems, which may be ordered or hierarchical.</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:complexType name="MeasurementGroupType">
		<xs:annotation>
			<xs:documentation>Contains a group of MeasurementItem, which may be ordered or hierarchical. In addition to the name, label, and description of the group, the structure allows for defining the type of group using an optional controlled vocabulary, a reference to a defining universe or concept for the group, a subject classification for the group, and a listing of MeasurementItems and MeasurementGroups in any order.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:VersionableType">
				<xs:sequence>
					<xs:element ref="TypeOfMeasurementGroup" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A brief textual identification of the group type. Supports the use of an external controlled vocabulary.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="MeasurementGroupName" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A name for the group. May be expressed in multiple languages. Repeat the element to express names with different content, for example different names for different systems.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Label" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A display label for the question group. May be expressed in multiple languages. Repeat for labels with different content, for example, labels with differing length limitations.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A description of the content and purpose of the MeasurementItemGroup. May be expressed in multiple languages and supports the use of structured content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:UniverseReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Reference to the universe statement describing the persons or other objects to which the contents of this MeasurementItem group pertain.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:ConceptReference" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Reference to the concept expressed by the MeasurementItem in this group.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Subject" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>If subjects are listed for this group, it is strongly recommended that the subjects listed also be found in the TopicalCoverage element for the parent packaging element when this group is included directly or by reference in a module containing a coverage element. Use of subject at the group level allows for associating objects as a type of subject based group or to identify subject characteristics of a reusable group of objects.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Keyword" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>If keywords are listed for this group, it is strongly recommended that the keywords listed also be found in the TopicalCoverage element for the parent packaging element when this group is included directly or by reference in a module containing a coverage element. Use of keyword at the group level allows for associating objects as a type of keyword based group or to identify keyword characteristics of a reusable group of objects.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element ref="r:MeasurementItemReference">
							<xs:annotation>
								<xs:documentation>Reference to constituent MeasurementItem.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="MeasurementGroupReference">
							<xs:annotation>
								<xs:documentation>Reference to constituent MeasurementGroup. This allows for nesting of MeasurementGroups.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
				</xs:sequence>
				<xs:attribute name="isOrdered" type="xs:boolean" default="false">
					<xs:annotation>
						<xs:documentation>If set to "true" indicates that the content of the group is ordered as it appears within the XML structure.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="MeasurementGroupName" type="r:NameType">
		<xs:annotation>
			<xs:documentation>Name of the MeasurementGroup using the DDI Name structure.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="TypeOfMeasurementGroup" type="r:CodeValueType">
		<xs:annotation>
			<xs:documentation>A brief textual description of the type of group created to associate a number of MeasurementItem. Supports the use of an external controlled vocabulary.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="QuestionType" abstract="true">
		<xs:annotation>
			<xs:documentation>Serves as a common extension base for different forms of Questions</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:VersionableType">
				<xs:sequence>
					<xs:element ref="DevelopmentResultsReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Reference to the development implementation results which gave rise to this version of the object. TypeOfObject should be DevelopmentResults.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="QuestionItem" type="QuestionItemType">
		<xs:annotation>
			<xs:documentation>Structure a single Question which may contain one or more response domains (i.e., a list of valid category responses where if "Other" is indicated a text response can be used to specify the intent of "Other").</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="QuestionItemType">
		<xs:annotation>
			<xs:documentation>Structure a single Question which may contain one or more response domains (i.e., a list of valid category responses where if "Other" is indicated a text response can be used to specify the intent of "Other"). The structure provides detail on the intent of the question, the text of the question, the valid response options and the number of allowed responses, references to external aids and instructions, and an estimation of the time needed to respond to the question. Note that the QuestionItem is a reusable format for use in any number of applied uses. External aids, instructions, response sequencing etc. should contain information consistent with the general use of the QuestionItem. Additional materials and information can be added within the QuestionConstruct which is the applied use of a question.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="QuestionType">
				<xs:sequence>
					<xs:element ref="QuestionItemName" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A name for the QuestionItem. May be expressed in multiple languages. Repeat the element to express names with different content, for example different names for different systems.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Label" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A display label for the QuestionItem. Supports multiple language versions of the same content as well as optional formatting of the content. Repeat for labels with different content, for example, labels with differing length limitations.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A description of the QuestionItem. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:InParameter" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Provides an identity for input objects required for the QuestionItem.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:OutParameter" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Provides an identify for the output objects of the QuestionItem.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Binding" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A structure used to bind the content of a parameter declared as the source to a parameter declared as the target. For example, binding the OutParameter of one Question to the InParameter of another Question in order to personalize a question text. Care should be taken to bind only reusable information at this level. Binding is also available at the QuestionConstruct to reflect bindings particular to the use of the question in a specific question flow or instrument.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="QuestionText" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The text of a question. Supports the use of DynamicText. Note that when using QuestionText, the full QuestionText must be repeated for multi-language versions of the content. Different languages may handle the dynamic portions in different locations and/or with different content. Therefore languages cannot be mixed within a dynamic text except when the full text itself has multiple language sections, for example, a foreign language term in a text. The DisplayText may also be repeated to provide a dynamic and plain text version of the display. This allows for accurate rendering of the QuestionText in a non-dynamic environment like print.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="QuestionIntent" minOccurs="0">
						<xs:annotation>
							<xs:documentation>The purpose of the QuestionItem in terms of what it is designed to measure. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:choice minOccurs="0">
						<xs:choice minOccurs="0">
							<xs:element ref="ResponseDomain">
								<xs:annotation>
									<xs:documentation>Contains a response domain for the question item. Typically used to describe simple response domains (textual, numeric, etc.).</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element ref="ResponseDomainReference">
								<xs:annotation>
									<xs:documentation>The inclusion of a response domain by reference (must be supported by a managed representation). An abstract element. May be substituted by any valid object of substitution type ResponseDomainReference.</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:choice>
						<xs:element ref="StructuredMixedResponseDomain">
							<xs:annotation>
								<xs:documentation>Use in cases where the question requires the option for multiple response domains, such as a category response and a text response to specify a value for "Other", or when text needs to be inserted before, after, or between response options for the question.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
					<xs:element ref="r:ResponseCardinality" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Allows the designation of the minimum and maximum number of responses allowed for this question. Note that each response domain has its own response cardinality.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:ConceptReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A reference to the concept associated with the response to the question.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ExternalAid" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A pointer to an external aid presented by the instrument such as a text card, image, audio, or audiovisual aid. Typically a URN. Use type attribute to describe the type of external aid provided. Example of terms to use would include: imageOnly audioOnly audioVisual multiMedia.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element ref="ExternalInterviewerInstruction">
							<xs:annotation>
								<xs:documentation>External reference to an interviewer instruction not expressed as DDI XML using OtherMaterial.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="InterviewerInstructionReference">
							<xs:annotation>
								<xs:documentation>Reference to an interviewer instruction expressed as DDI XML.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
					<xs:element ref="r:RepresentedVariableReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Reference to the RepresentedVariable that describes the data to be collected by this question. The RepresentedVariable contains the broad reusable specification of the Variable, i.e., concept, universe, and value representation. When more than one ResponseDomain exists, one RepresentedVariable should be created for each ResponseDomain in the same order as the corresponding ResponseDomain. TypeOfObject should be set to RepresentedVariable.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="estimatedSecondsResponseTime" type="xs:decimal" use="optional">
					<xs:annotation>
						<xs:documentation>The estimated amount of time required to answer a question expressed in seconds. Decimal values should be used to define fractions of seconds.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>


	<xs:complexType name="QuestionBlockType">
		<xs:annotation>
			<xs:documentation>A QuestionBlock is a specific structure used in educational and other types of testing where an object (Stimulus Material) is provided and a set of questions are asked regarding the object. The QuestionBlock generally has related QuestionBlocks that measure similar skills or aptitudes and is used randomly within a set of questionnaires to create multiple versions of a single questionnaire that can be used with large groups for testing purposes. Assembly of the QuestionBlocks into a questionnaire may the result of selection based on an experimental design model. It contains information on what the QuestionBlock is intended to measure, input and output parameters for the QuestionBlock, a description of the stimulus material and the questions related to it, instructions on sequencing and number of allowed responses, references to external aids and instructions, and an estimate of the time needed to complete the question. Note that the QuestionBlock is a reusable format for use in any number of applied uses. External aids, instructions, response sequencing etc. should contain information consistent with the general use of the QuestionBlock (QuestionItems and QuestionGrids will contain information specific to the individual question). Additional materials and information can be added within the QuestionConstruct which is the applied use of a question.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="QuestionType">
				<xs:sequence>
					<xs:element ref="QuestionBlockName" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A name for the QuestionBlock. May be expressed in multiple languages. Repeat the element to express names with different content, for example different names for different systems.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Label" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A display label for the QuestionBlock. Supports multiple language versions of the same content as well as optional formatting of the content. Repeat for labels with different content, for example, labels with differing length limitations.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A description of the QuestionBlock. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:InParameter" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Provides an identity for input objects required for the QuestionBlock.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:OutParameter" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Provides an identify for the output objects of the QuestionBlock.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Binding" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A structure used to bind the content of a parameter declared as the source to a parameter declared as the target. For example, binding the OutParameter of one Question to the InParameter of another Question in order to personalize a question text. Care should be taken to bind only reusable information at this level. Binding is also available at the QuestionConstruct to reflect bindings particular to the use of the question in a specific question flow or instrument.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="QuestionBlockIntent" minOccurs="0">
						<xs:annotation>
							<xs:documentation>The purpose of the QuestionBlock in terms of what it is designed to test. May contain information on specific aspects of the Block and its construction. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element ref="StimulusMaterial">
							<xs:annotation>
								<xs:documentation>Material that is visual, verbal and/or auditory used to communicate ideas or information which can be researched or provide a source for a response. For example, a picture about which a number of questions are asked, or a sound for which a measurable response is taken (as in a hearing test).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="QuestionItemReference">
							<xs:annotation>
								<xs:documentation>Reference to a QuestionItem containing a question regarding the stimulus material.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="QuestionGridReference">
							<xs:annotation>
								<xs:documentation>Reference to a QuestionGrid containing a question regarding the stimulus material.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
					<xs:element ref="QuestionSequence" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Allows for recommending that the sequence of questions should vary according to a specified pattern, i.e., random, rotation, etc.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:ResponseCardinality" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Indicates the minimum and maximum number of responses to expect from the QuestionBlock.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:ConceptReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A reference to the concept the QuestionBlock is intended to gather data on.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ExternalAid" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A pointer to an external aid presented by the instrument such as a text card, image, audio, or audiovisual aid. Typically a URN. Use type attribute to describe the type of external aid provided. Example of terms to use would include: imageOnly audioOnly audioVisual multiMedia.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element ref="ExternalInterviewerInstruction">
							<xs:annotation>
								<xs:documentation>External reference to an interviewer instruction not expressed as DDI XML using OtherMaterial.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="InterviewerInstructionReference">
							<xs:annotation>
								<xs:documentation>Reference to an interviewer instruction expressed as DDI XML.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
				</xs:sequence>
				<xs:attribute name="estimatedSecondsResponseTime" type="xs:decimal" use="optional">
					<xs:annotation>
						<xs:documentation>The estimated amount of time required to answer a question expressed in seconds. Decimal values should be used to define fractions of seconds.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="QuestionBlockName" type="r:NameType">
		<xs:annotation>
			<xs:documentation>Name of the Question Block using the DDI Name structure.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="QuestionBlockIntent" type="r:StructuredStringType">
		<xs:annotation>
			<xs:documentation>Intent of the Question Block/ Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="StimulusMaterial" type="StimulusMaterialType">
		<xs:annotation>
			<xs:documentation>Description and link to the StimulusMaterial using the DDI Other Material structure.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="StimulusMaterialType">
		<xs:annotation>
			<xs:documentation>Description and link to the StimulusMaterial using the DDI Other Material structure.</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element ref="r:OtherMaterial">
				<xs:annotation>
					<xs:documentation>Description and link to the StimulusMaterial using the DDI Other Material structure.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="r:OtherMaterialReference">
				<xs:annotation>
					<xs:documentation>Use of a previously described StimulusMaterial by Reference. TypeOfObject will be OtherMaterial.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	<xs:element name="QuestionSequence" type="QuestionSequenceType">
		<xs:annotation>
			<xs:documentation>Describes the ordering of questions when not otherwise indicated. Extends the standard sequencing information to indicate how and if StimulusMaterial should be treated in the resequencing.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="QuestionSequenceType">
		<xs:annotation>
			<xs:documentation>Describes the ordering of questions when not otherwise indicated. Extends the standard sequencing information to indicate how and if StimulusMaterial should be treated in the resequencing.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="SpecificSequenceType">
				<xs:attribute name="handlingOfStimulusMaterial" type="HandlingType" default="within">
					<xs:annotation>
						<xs:documentation>Clarifies how stimulus material is to be handled within the resequencing using a controlled vocabulary. Options: "include"=Include StimulusMaterial in resequencing without restriction; "preceding"=Attach each StimulusMaterial to the preceding question; "following"=Attach each StimulusMaterial to the question following it; and the default value of "within"=Resequencing occurs within each set of questions as delimited by StimulusMaterial</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="HandlingType">
		<xs:annotation>
			<xs:documentation>Clarifies how stimulus material is to be handled within the resequencing using a controlled vocabulary.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="include">
				<xs:annotation>
					<xs:documentation>Include StimulusMaterial in resequencing without restriction</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="preceding">
				<xs:annotation>
					<xs:documentation>Attach each StimulusMaterial to the preceding question. StimulusMaterial will move with the preceding question so that it so that it always occurs directly after the same question.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="following">
				<xs:annotation>
					<xs:documentation>Attach each StimulusMaterial to the Question following it StimulusMaterial will move with the following Question so that it always occurs directly before the same question.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="within">
				<xs:annotation>
					<xs:documentation>Resequencing occurs within each set of questions as delimited by StimulusMaterial. This is the default value. This allows StimulusMaterial to stay in the same position relative to the set of questions which it currently follows or precedes.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="QuestionGroupType">
		<xs:annotation>
			<xs:documentation>Contains a group of Questions, which may be ordered or hierarchical. In addition to the name, label, and description of the group, the structure allows for defining the type of group using an optional controlled vocabulary, a reference to a defining universe or concept for the group, a subject classification for the group, and a listing of Questions and QuestionGroups in any order.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:VersionableType">
				<xs:sequence>
					<xs:element ref="TypeOfQuestionGroup" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A brief textual identification of the group type. Supports the use of an external controlled vocabulary.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="QuestionGroupName" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A name for the QuestionGroup. May be expressed in multiple languages. Repeat the element to express names with different content, for example different names for different systems.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Label" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A display label for the QuestionGroup. Supports multiple language versions of the same content as well as optional formatting of the content. Repeat for labels with different content, for example, labels with differing length limitations.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A description of the content and purpose of the QuestionGroup. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:UniverseReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Reference to the universe statement describing the persons or other objects to which the contents of this question group pertain.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:ConceptReference" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Reference to the concept expressed by the Questions in this group.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Subject" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>If subjects are listed for this group, it is strongly recommended that the subjects listed also be found in the TopicalCoverage element for the parent packaging element when this group is included directly or by reference in a module containing a coverage element. Use of subject at the group level allows for associating objects as a type of subject based group or to identify subject characteristics of a reusable group of objects.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Keyword" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>If keywords are listed for this group, it is strongly recommended that the keywords listed also be found in the TopicalCoverage element for the parent packaging element when this group is included directly or by reference in a module containing a coverage element. Use of keyword at the group level allows for associating objects as a type of keyword based group or to identify keyword characteristics of a reusable group of objects.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element ref="QuestionItemReference">
							<xs:annotation>
								<xs:documentation>Reference to constituent QuestionItem.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="QuestionGridReference">
							<xs:annotation>
								<xs:documentation>Reference to constituent QuestionGrid.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="QuestionBlockReference">
							<xs:annotation>
								<xs:documentation>Reference to constituent QuestionBlock.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="QuestionGroupReference">
							<xs:annotation>
								<xs:documentation>Reference to constituent QuestionGroup. This allows for nesting of QuestionGroups.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
				</xs:sequence>
				<xs:attribute name="isOrdered" type="xs:boolean" default="false">
					<xs:annotation>
						<xs:documentation>If set to "true" indicates that the content of the group is ordered as it appears within the XML structure.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="QuestionGroupName" type="r:NameType">
		<xs:annotation>
			<xs:documentation>Name of the Question Group using the DDI Name structure.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="TypeOfQuestionGroup" type="r:CodeValueType">
		<xs:annotation>
			<xs:documentation>A brief textual description of the type of group created to associate a number of question items, question grids, and/or question blocks. Supports the use of an external controlled vocabulary.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="QuestionItemName" type="r:NameType">
		<xs:annotation>
			<xs:documentation>Name of the Question Item using the DDI Name structure.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="MeasurementItemName" type="r:NameType">
		<xs:annotation>
			<xs:documentation>Name of the Measurement Item using the DDI Name structure.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="StructuredMixedResponseDomain" type="StructuredMixedResponseDomainType">
		<xs:annotation>
			<xs:documentation>A structure to allow for mixing multiple response domains in a single question. These may also include intervening text statements that are tightly bound to a response domain. A common example is the use of a CodeDomain and a TextDomain where the TextDomain is associated with the value with the label "Other" in the CodeDomain.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="StructuredMixedResponseDomainType">
		<xs:annotation>
			<xs:documentation>A structure to allow for mixing multiple response domains in a single question. These may also include intervening text statements that are tightly bound to a response domain. A common example is the use of a CodeDomain and a TextDomain where the TextDomain is associated with the value with the label "Other" in the CodeDomain. ResponseDomains should be chosen that do NOT duplicate responses such as CodeLists with overlapping codes. Be aware that certain instruments may collect responses in such a way that confusion between a code response and text response may be possible. The process of resolving such conflicts should be addressed in the data processing instructions. There is an assumption that if a text or numeric response duplicates a coded response to a question, that the value is that of the coded category. At least one ResponseDomain must be provided.</xs:documentation>
		</xs:annotation>
		<xs:choice minOccurs="2" maxOccurs="unbounded">
			<xs:element ref="ResponseTextSet">
				<xs:annotation>
					<xs:documentation>Text closely related to the content of the ResponseDomain(s), in general, text required to make sense of the related response domain. ResponseTextSet provides a means of bundling multiple language versions of ResponseText together. This wrapper serves to differentiate between a case where multiple language content for a single ResponseText are provided and when two differing sets of ResponseText are in immediate sequence (with no intervening question).  Note that when using ResponseText, the full ResponseText must be repeated for multi-language versions of the content within the same ResponseTextSet.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ResponseDomainInMixed">
				<xs:annotation>
					<xs:documentation>A structure that provides both the response domain and information on how it should be attached, or related, to other specified response domains in the question.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	<xs:element name="ResponseDomainInMixed" type="ResponseDomainInMixedType">
		<xs:annotation>
			<xs:documentation>A structure that provides both the response domain and information on how it should be attached, or related, to other specified response domains in the question.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="ResponseDomainInMixedType">
		<xs:annotation>
			<xs:documentation>A structure that provides both the response domain and information on how it should be attached, or related, to other specified response domains in the question. If no AttachmentLocation information is provided it is assumed that multiple response domains or response text occurs in sequence.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:choice>
				<xs:element ref="ResponseDomain">
					<xs:annotation>
						<xs:documentation>The response domain being used. An abstract element. May be substituted by any valid object of substitution type ResponseDomain.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element ref="ResponseDomainReference">
					<xs:annotation>
						<xs:documentation>The inclusion of a response domain by reference (must be supported by a managed representation). An abstract element. May be substituted by any valid object of substitution type ResponseDomainReference.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
			<xs:element ref="AttachmentLocation" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Allows attachment of a secondary response domain to a specific item within another response domain used in the question. For example, attach a TextDomain to the value "Other" using the TextDomain label (Please specify) as a label for the TextDomain.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="attachmentBase" type="xs:integer" use="optional">
			<xs:annotation>
				<xs:documentation>If another response domain will be attached to the response domain listed withinResponseDomainInMixed provide a value in attachmentBase to allow for unique identification within this question. AttachmentLocation contains an attribute attachmentDomain which will provide a link from the domain that is being attached to the domain it is being attached to.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:element name="AttachmentLocation" type="AttachmentLocationType">
		<xs:annotation>
			<xs:documentation>Allows attachment of a secondary response domain to a specific item within another response domain used in the question.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="AttachmentLocationType">
		<xs:annotation>
			<xs:documentation>Allows attachment of a response domain to a specific item in a code or category scheme. For example, attach a TextDomain to the value "Other".</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:choice maxOccurs="unbounded">
				<xs:element ref="r:CodeReference">
					<xs:annotation>
						<xs:documentation>Identifies the value to which the new response domain is attached by a references a specific Code within the CodeDomain.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element ref="r:CategoryReference">
					<xs:annotation>
						<xs:documentation>Identifies the value to which the new response domain is attached by a references a specific Category within the CategoryDomain.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element ref="DomainSpecificValue">
					<xs:annotation>
						<xs:documentation>Identifies the value to which the new response domain is attached by a reference to a specific value used by the response domain and the specific value.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="QuestionGridType">
		<xs:annotation>
			<xs:documentation>Structures the QuestionGrid as an NCube-like structure providing dimension information, labeling options, and response domains attached to one or more cells within the grid. Provides the intent of the QuestionGrid, input and output parameters for the grid, the question text for the grid, details on the dimensions, allowed responses, and additional cell contents of the grid, references to external aids and instructions, and an estimate of the time required to complete the grid. Note that the QuestionGrid is a reusable format for use in any number of applied uses. External aids, instructions, response sequencing etc. should contain information consistent with the general use of the QuestionGrid. Additional materials and information can be added within the QuestionConstruct which is the applied use of a question.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="QuestionType">
				<xs:sequence>
					<xs:element ref="QuestionGridName" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A name for the QuestionGrid. May be expressed in multiple languages. Repeat the element to express names with different content, for example different names for different systems.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Label" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A display label for the QuestionGrid. Supports multiple language versions of the same content as well as optional formatting of the content. Repeat for labels with different content, for example, labels with differing length limitations.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A description of the QuestionGrid. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:InParameter" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Provides an identity for input objects required for the QuestionGrid.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:OutParameter" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Provides an identify for the output objects of the QuestionGrid.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Binding" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A structure used to bind the content of a parameter declared as the source to a parameter declared as the target. For example, binding the OutParameter of one Question to the InParameter of another Question in order to personalize a question text. Care should be taken to bind only reusable information at this level. Binding is also available at the QuestionConstruct to reflect bindings particular to the use of the question in a specific question flow or instrument.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="QuestionText" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The text of a question. Supports the use of DynamicText. Note that when using QuestionText, the full QuestionText must be repeated for multi-language versions of the content. Different languages may handle the dynamic portions in different locations and/or with different content. Therefore languages cannot be mixed within a dynamic text except when the full text itself has multiple language sections, for example, a foreign language term in a text. The DisplayText may also be repeated to provide a dynamic and plain text version of the display. This allows for accurate rendering of the QuestionText in a non-dynamic environment like print.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="QuestionIntent" minOccurs="0">
						<xs:annotation>
							<xs:documentation>The purpose of the QuestionGrid in terms of what it is designed to test. May contain information on specific aspects of the Grid and its construction. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="GridDimension" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Describes each dimension of the grid including dimension rank (for the purpose of identifying a cell address), a text for the dimension, and optional labels and codes used as column and row stubs. May also describe a roster (a set of unlabeled rows or columns depending upon display situation).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:choice minOccurs="0">
						<xs:choice minOccurs="0">
							<xs:element ref="ResponseDomain">
								<xs:annotation>
									<xs:documentation>Contains a response domain for the question grid. All cells in the grid have the same response domain. Any cell may also contain an internal label.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element ref="ResponseDomainReference">
								<xs:annotation>
									<xs:documentation>The inclusion of a response domain by reference (must be supported by a managed representation). An abstract element. May be substituted by any valid object of substitution type DomainReference.</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:choice>
						<xs:element ref="StructuredMixedGridResponseDomain">
							<xs:annotation>
								<xs:documentation>Contains a mixture of response domains for the grid cells. Each response domain can be attached to a specific region of the grid, for example a single column or row.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
					<xs:element ref="CellLabel" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Provides for the addition of a label within a cell or cells of the grid. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="FixedCellValue" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Provides for the ability to fix a value within a cell or cells of the grid.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:ConceptReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A reference to the concept the QuestionGrid is intended to gather data on.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ExternalAid" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A pointer to an external aid presented by the instrument such as a text card, image, audio, or audiovisual aid. Typically a URN. Use type attribute to describe the type of external aid provided. Example of terms to use would include: imageOnly audioOnly audioVisual multiMedia.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element ref="ExternalInterviewerInstruction">
							<xs:annotation>
								<xs:documentation>External reference to an interviewer instruction not expressed as DDI XML using OtherMaterial.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="InterviewerInstructionReference">
							<xs:annotation>
								<xs:documentation>Reference to an interviewer instruction expressed as DDI XML.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
					<xs:element ref="r:RepresentedVariableReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Reference to the RepresentedVariable that describes the data to be collected by this question grid. The RepresentedVariable contains the broad reusable specification of the Variable, i.e., concept, universe, and value representation. When more than one ResponseDomain exists, one RepresentedVariable should be created for each ResponseDomain in the same order as the corresponding ResponseDomain. TypeOfObject should be set to RepresentedVariable.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="estimatedSecondsResponseTime" type="xs:decimal" use="optional">
					<xs:annotation>
						<xs:documentation>The estimated amount of time required to answer a question expressed in seconds. Decimal values should be used to define fractions of seconds.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="QuestionGridName" type="r:NameType">
		<xs:annotation>
			<xs:documentation>Name of the Question Grid using the DDI Name structure.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="GridDimensionType">
		<xs:annotation>
			<xs:documentation>Describes each dimension of the grid including dimension rank (for the purpose of identifying a cell address), a text for the dimension, and optional labels and codes used as column and row stubs. May also describe a roster (a set of unlabeled rows or columns depending upon display situation).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:choice>
				<xs:element ref="CodeDomain">
					<xs:annotation>
						<xs:documentation>This includes a reference to a CodeList that is used for the labels contained in the dimension. CodeLists are used even when the code is not being displayed in order to use this information for creating the cell coordinate address.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element ref="Roster">
					<xs:annotation>
						<xs:documentation>A roster is an unlabeled list of numbered rows or columns depending upon orientation. The numbers may or may not be displayed but will be used as information for creating the cell coordinate address.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
			<xs:element ref="CreateSummary" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Note that this is generally usable only with single valid response domain in grid. More complex uses should be carefully documented using details in CommandCode and Input/output Parameters.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="rank" type="xs:nonNegativeInteger" use="required">
			<xs:annotation>
				<xs:documentation>The rank order of this dimension (the order in which the value for this dimension will appear in the cell address)denoted with a 1-based indexing. Provides coordinate order (1,2,n) for the intersect point of this dimension within the cell address. For example, if the rank of this dimension is 2, the intersect point on this dimension will be the second value listed in the cell address.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="displayCode" type="xs:boolean" default="true">
			<xs:annotation>
				<xs:documentation>If set to "true" (default value) the code value associated with the category label will be displayed. Set to "false" if only the category label should not be displayed.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="displayLabel" type="xs:boolean" default="true">
			<xs:annotation>
				<xs:documentation>If set to "true" (default value) the label of the CodeList will be displayed. Set to "false" to suppress this display.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:element name="CreateSummary" type="CreateSummaryType">
		<xs:annotation>
			<xs:documentation>Note that this is generally usable only with single valid response domain in grid. More complex uses should be carefully documented using details in CommandCode and Input/output Parameters.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="CreateSummaryType">
		<xs:annotation>
			<xs:documentation>Note that this is generally usable only with single valid response domain in grid. More complex uses should be carefully documented using details in CommandCode and Input/output Parameters.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:CommandCodeType">
				<xs:sequence>
					<xs:element ref="r:Label" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Label for the summary type used.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>	
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="RosterType">
		<xs:annotation>
			<xs:documentation>A roster is an unlabeled list of numbered rows or columns depending upon orientation. The numbers may or may not be displayed but will be used as information for creating the cell coordinate address. The Roster defines the numbering used for the coordinate system, sets a minimum and maximum number of values, and provides the condition for continuation. The Roster label is used in the same way as the label of the CodeDomain, providing a dimension level header or label.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="r:Label" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A display label for the Roster. Supports multiple language versions of the same content as well as optional formatting of the content. Repeat for labels with different content, for example, labels with differing length limitations.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ConditionForContinuation" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Provides the condition for continuing to add another iteration to the Roster. This may be a human readable condition and/or a machine-actionable command.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="baseCodeValue" type="xs:integer" use="required">
			<xs:annotation>
				<xs:documentation>A base value for the first item on the Roster (normally 0 or 1 but can be set to any value especially when the use of a roster extends an enumerated list expressed as an integer.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="codeIterationValue" type="xs:integer" use="required">
			<xs:annotation>
				<xs:documentation>The value added to the last used value to create the iteration value for the current row or column expressed as an integer.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="minimumRequired" type="xs:nonNegativeInteger" default="1">
			<xs:annotation>
				<xs:documentation>The minimum number of rows or columns required expressed as an integer.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="maximumAllowed" type="xs:nonNegativeInteger">
			<xs:annotation>
				<xs:documentation>The maximum number of rows or columns allowed expressed as an integer. Leaving this attribute with no value implies that the maximum allowed is unbounded.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="StructuredMixedGridResponseDomainType">
		<xs:annotation>
			<xs:documentation>Contains a mixture of response domains for the grid cells. Each response domain can be attached to a specific region of the grid, for example a single column or row. It is assumed that each cell will contain either a resonse domain or be declared as containing No Data By Definition. Any cell may also contain an internal label.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:choice minOccurs="2" maxOccurs="unbounded">
				<xs:element ref="GridResponseDomainInMixed">
					<xs:annotation>
						<xs:documentation>Identifies a response type found in the grid and defines the cell or cells that contain it.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element ref="NoDataByDefinition">
					<xs:annotation>
						<xs:documentation>Identifies the cell or cells in the grid that by definition contain no response domains. These cells MAY contain a label.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="FixedCellValueType">
		<xs:annotation>
			<xs:documentation>Provides the ability to fix the value of a grid cell and defines the cell or cells. Designates the fixed value to be used and the location of the cell or cells within the grid.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="r:Value" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Identifies the value to which the cell(s) defined in GridAttachment should be fixed. Supports the use of meaningful leading or trailing spaces. Note that care should be taken to make sure this is a valid value within the response domain of the cell.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="GridAttachment" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Identifies the cell or cells in a grid to which the label is attached by a reference to a specific cell coordinate in a grid or by identifying a range of values along a dimension.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CellLabelType">
		<xs:annotation>
			<xs:documentation>Provide a label to be included inside of a grid cell and defines the cell or cells that contain it. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:LabelType">
				<xs:sequence>
					<xs:element ref="GridAttachment" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Identifies the cell or cells in a grid to which the label is attached by a reference to a specific cell coordinate in a grid or by identifying a range of values along a dimension.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="GridResponseDomainInMixed" type="GridResponseDomainInMixedType">
		<xs:annotation>
			<xs:documentation>Designates the response domain and the cells using the specified response domain within a QuestionGrid. Supports the use of ResponseAttachmentLocation and attachmentBase for defining specific relationships between response domains in a StructuredMixedGridResponseDomain. Functions similar to a ResponseDomainInMixed within a QuestionItem.</xs:documentation>
		</xs:annotation>
	</xs:element>	
	<xs:complexType name="GridResponseDomainInMixedType">
		<xs:annotation>
			<xs:documentation>Designates the response domain and the cells using the specified response domain within a QuestionGrid. Supports the use of ResponseAttachmentLocation and attachmentBase for defining specific relationships between response domains in a StructuredMixedGridResponseDomain. Functions similar to a ResponseDomainInMixed within a QuestionItem.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:choice>
				<xs:element ref="ResponseDomain">
					<xs:annotation>
						<xs:documentation>This is a substitution head and can be replaced by any valid member of the substitution group for ResponseDomain.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element ref="ResponseDomainReference">
					<xs:annotation>
						<xs:documentation>The inclusion of a response domain by reference (must be supported by a managed representation). An abstract element. May be substituted by any valid object of substitution type ResponseDomainReference.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
			<xs:element ref="ResponseAttachmentLocation" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Allows attachment of a secondary response domain to a specific item within another response domain used in the question grid. For example, attach a TextDomain to the value "Other" using the TextDomain label (Please specify) as a label for the TextDomain.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="GridAttachment" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Identifies the cell or cells in a grid to which the item is attached by a reference to a specific cell coordinate in a grid or by identifying a range of values along a dimension.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="attachmentBase" type="xs:integer" use="optional">
			<xs:annotation>
				<xs:documentation>If another response domain will be attached to the response domain listed withinResponseDomainInMixed provide a value in attachmentBase to allow for unique identification within this question grid. ResponseAttachmentLocation contains an attribute attachmentDomain which will provide a link from the domain that is being attached to the domain it is being attached to.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:element name="ResponseAttachmentLocation" type="AttachmentLocationType">
		<xs:annotation>
			<xs:documentation>Allows attachment of a secondary response domain to a specific item within another response domain used in the question grid. For example, attach a TextDomain to the value "Other" using the TextDomain label (Please specify) as a label for the TextDomain.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="GridAttachmentType">
		<xs:annotation>
			<xs:documentation>Identifies the cell or cells in a grid to which the item is attached by a reference to a specific cell coordinate in a grid or by identifying a range of values along a dimension.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="SpecificCellCoordinate">
					<xs:annotation>
						<xs:documentation>Defines a single cell by its matrix coordinate address. For example "1,3,2" for a 3 dimensional matrix where dimension rank-1 has a value of 1, dimension rank-2 has a value of 3, and dimension rank-3 has a value of 2.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element ref="CellCoordinatesAsDefined">
					<xs:annotation>
						<xs:documentation>Defines one or more cells by defining the applicable values of each dimension as "all values", a "specific value" or a range. For example in a simple 2 dimensional grid where dimension rank-1 is displayed as rows and dimension rank-2 as columns and the first column contains a NumericDomain; SelectDimension rank="1" allValues="true" and SelectDimension rank="2" specificValue="1" would result in the NumericDomain being attached to the first column of the grid only.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
		</xs:sequence>
		<xs:attribute name="allCells" type="xs:boolean" default="false">
			<xs:annotation>
				<xs:documentation>If the item should be attached to all the cells in the grid set this attribute to "true".</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="CellCoordinatesAsDefinedType">
		<xs:annotation>
			<xs:documentation>Defines one or more cells by defining the applicable values of each dimension as "all values", a "specific value" or a range. For example in a simple 2 dimensional grid where dimension rank-1 is displayed as rows and dimension rank-2 as columns and the first column contains a NumericDomain; SelectDimension rank="1" allValues="true" and SelectDimension rank="2" specificValue="1" would result in the NumericDomain being attached to the first column of the grid only.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="SelectDimension" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>For each dimension in the grid define the applicable values as "all values", a "specific value" or a range. If a rangeMinimum or rangeMaximum is provided without the other, the assumption is unbounded for the object not included.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SelectDimensionType">
		<xs:annotation>
			<xs:documentation>For each dimension in the grid define the applicable values as "all values", a "specific value" or a range. If a rangeMinimum or rangeMaximum is provided without the other, the assumption is unbounded for the object not included.</xs:documentation>
		</xs:annotation>
		<xs:attribute name="rank" type="xs:nonNegativeInteger" use="required">
			<xs:annotation>
				<xs:documentation>The rank value of the dimension for which the selection criteria apply.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="allValues" type="xs:boolean">
			<xs:annotation>
				<xs:documentation>If set to "true" applies to the full set of dimension values. If set to "false" use specificValue, rangeMinimum and rangeMaximum as appropriate to define the subset of values needed.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="specificValue" type="xs:string">
			<xs:annotation>
				<xs:documentation>May contain a single value or a delimited array of values.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="rangeMinimum" type="xs:string">
			<xs:annotation>
				<xs:documentation>The inclusive minimum value of the range. Use when the values or subset of values are ordered and contiguous and may be expressed as a range.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="rangeMaximum" type="xs:string">
			<xs:annotation>
				<xs:documentation>The inclusive maximum value of the range. Use when the values or subset of values are ordered and contiguous and may be expressed as a range.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:element name="DomainSpecificValue" type="DomainSpecificValueType">
		<xs:annotation>
			<xs:documentation>Identifies the value of the ResponseDomain to which the new ResponseDomain is attached by specifying its attachmentBase number of the target ResponseDomain in the attribute attachmentDomain. Specifies one or more values within the ResponseDomain to which the object is attached (i.e. single item or set).</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="DomainSpecificValueType">
		<xs:annotation>
			<xs:documentation>Identifies the value of the ResponseDomain to which the new ResponseDomain is attached by specifying its attachmentBase number of the target ResponseDomain in the attribute attachmentDomain. Specifies one or more values within the ResponseDomain to which the object is attached (i.e. single item or set).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="r:Value" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>The value of the target response domain to which the object should be attached.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="attachmentDomain" type="xs:integer" use="optional">
			<xs:annotation>
				<xs:documentation>This is the value of the attribute "attachmentBase" on the ResponseDomainInMixed to which the specified response domain will be attached. This is used to clarify attachment locations when more than two response domains are provided in a StructuredMixedResponseDomain.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:element name="GridDimension" type="GridDimensionType">
		<xs:annotation>
			<xs:documentation>Describes each dimension of the grid including dimension rank (for the purpose of identifying a cell address), a text for the dimension, and optional labels and codes used as column and row stubs.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="Roster" type="RosterType">
		<xs:annotation>
			<xs:documentation>A roster is an unlabeled list of numbered rows or columns depending upon orientation.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ConditionForContinuation" type="r:CommandCodeType">
		<xs:annotation>
			<xs:documentation>Information on the command used for determining if the conditions have been met to continue the given activity.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="StructuredMixedGridResponseDomain" type="StructuredMixedGridResponseDomainType">
		<xs:annotation>
			<xs:documentation>Contains a mixture of response domains for the grid cells. Each response domain can be attached to a specific region of the grid, for example a single column or row.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="FixedCellValue" type="FixedCellValueType">
		<xs:annotation>
			<xs:documentation>Provides for the ability to fix a value within a cell or cells of the grid.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="CellLabel" type="CellLabelType">
		<xs:annotation>
			<xs:documentation>Provides for the addition of a label within a cell or cells of the grid. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="NoDataByDefinition" type="GridAttachmentType">
		<xs:annotation>
			<xs:documentation>Defines the cells within the grid that contain the specified content.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="GridAttachment" type="GridAttachmentType">
		<xs:annotation>
			<xs:documentation>Identifies the cell or cells in a grid to which the item is attached by a reference to a specific cell coordinate in a grid or by identifying a range of values along a dimension.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="SpecificCellCoordinate" type="xs:string">
		<xs:annotation>
			<xs:documentation>The SpecificCellCoordinate expressed as an xs:string.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="CellCoordinatesAsDefined" type="CellCoordinatesAsDefinedType">
		<xs:annotation>
			<xs:documentation>Defines one or more cells by defining the applicable values of each dimension as "all values", a "specific value" or a range.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="SelectDimension" type="SelectDimensionType">
		<xs:annotation>
			<xs:documentation>For each dimension in the grid define the applicable values as "all values", a "specific value" or a range.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="MeasurementConstruct" type="MeasurementConstructType" substitutionGroup="ControlConstruct">
		<xs:annotation>
			<xs:documentation>A construct which ties measurement content to the programmatic logic of the control constructs.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="MeasurementConstructType">
		<xs:annotation>
			<xs:documentation>A construct which ties measurement content to the programmatic logic of the control constructs. Contains a reference to a MeasurementItem, identifies the response unit, analysis unit, and universe. May provide an estimate of the number of minutes needed to respond.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ControlConstructType">
				<xs:sequence>
					<xs:element ref="r:MeasurementReference" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Reference to a Measurement.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ResponseUnit" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Identifies the intended Response unit (respondent). Supports the use of an external controlled vocabulary. The DDI Alliance has provided a controlled vocabulary (ResponseUnit) to support this element at http://www.ddialliance.org/controlled-vocabularies.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:AnalysisUnit" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The analysis unit, expressed as a term which may come from a controlled vocabulary. The DDI Alliance has provided a controlled vocabulary (AnalysisUnit) to support this element at http://www.ddialliance.org/controlled-vocabularies.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:UniverseReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Reference to the universe statement containing a description of the persons or other elements that this measurement refers to.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="estimatedSecondsResponseTime" type="xs:decimal" use="optional">
					<xs:annotation>
						<xs:documentation>The estimated amount of time required to perform the data capture expressed in seconds. Decimal values should be used to define fractions of seconds. At the measurement construct level it refers to the estimated time within the context of is use in a data capture process.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>	
	<xs:element name="QuestionConstruct" type="QuestionConstructType" substitutionGroup="ControlConstruct">
		<xs:annotation>
			<xs:documentation>A construct which ties question content to the programmatic logic of the control constructs.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="QuestionConstructType">
		<xs:annotation>
			<xs:documentation>A member of the ControlConstruct substitution group. A construct which ties question content to the programmatic logic of the control constructs. Contains a reference to a QuestionItem, QuestionGrid or QuestionBlock, can set response or dimension sequence for use in a specific application, identifies the response unit, analysis unit, and universe. May provide an estimate of the number of minutes needed to respond.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ControlConstructType">
				<xs:sequence>
					<xs:element ref="r:QuestionReference" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Reference to a QuestionItem, QuestionGrid, or QuestionBlock.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ResponseSequence" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Describes the sequencing of the response options to the question for this application.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="DimensionSequence" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Describes the sequencing of the dimension within a QuestionGrid for this application.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ResponseUnit" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Identifies the intended Response unit (respondent). Supports the use of an external controlled vocabulary. The DDI Alliance has provided a controlled vocabulary (ResponseUnit) to support this element at http://www.ddialliance.org/controlled-vocabularies.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:AnalysisUnit" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The analysis unit, expressed as a term which may come from a controlled vocabulary. The DDI Alliance has provided a controlled vocabulary (AnalysisUnit) to support this element at http://www.ddialliance.org/controlled-vocabularies.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:UniverseReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Reference to the universe statement containing a description of the persons or other elements that this variable refers to, and to which any analytic results refer. If more than one universe is referenced the universe of the variable is the intersect of the referenced universes.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="estimatedSecondsResponseTime" type="xs:decimal" use="optional">
					<xs:annotation>
						<xs:documentation>The estimated amount of time required to answer a question expressed in seconds. Decimal values should be used to define fractions of seconds. At the question construct level it refers to the estimated time within the context of is use in a questionnaire.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="ResponseSequence" type="SpecificSequenceType">
		<xs:annotation>
			<xs:documentation>Describes the ordering of response options when not otherwise indicated.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DimensionSequence" type="SpecificSequenceType">
		<xs:annotation>
			<xs:documentation>Describes the ordering of dimensions when not otherwise indicated.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ResponseDomain" type="r:RepresentationType" abstract="true">
		<xs:annotation>
			<xs:documentation>An abstract element serving as the head of a substitution group. May be substituted by any valid object of substitution type ResponseDomain.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="TextDomain" type="r:TextDomainType" substitutionGroup="ResponseDomain">
		<xs:annotation>
			<xs:documentation>A response domain capturing a textual response.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DateTimeDomain" type="DateTimeDomainType" substitutionGroup="ResponseDomain">
		<xs:annotation>
			<xs:documentation>A response domain capturing a date or time response for a question item.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="DateTimeDomainType">
		<xs:annotation>
			<xs:documentation>A response domain capturing a date or time response for a question item. Contains the equivalent content of a DateTimeRepresentation including the format of the date field, a DateTypeCode, and restriction of content using a regular expression. Adds a set of elements available to all Response Domains; Label, Description, OutParameter, designation of response cardinality, and a declaration of an offset date for the data content. Has an equivalent DateTimeDomainReference which references a ManagedTextRepresentation.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:DateTimeRepresentationBaseType">
				<xs:sequence>
					<xs:element ref="r:Label" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A display label for the domain. Supports multiple language versions of the same content as well as optional formatting of the content. Repeat for labels with different content, for example, labels with differing length limitations.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A description of the content and purpose of the domain. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:OutParameter" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Allows for the response to be bound to one of the QuestionItem's OutParameters, so the collected information can be used elsewhere, for example as inputs to subsequent questions in an Instrument or to a GenerationInstruction. If multiple responses are possible, this would represent and ordered array of the responses.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:ResponseCardinality" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Allows the designation of the minimum and maximum number of responses allowed for this response domain.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:ContentDateOffset" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Identifies the difference between the date applied to the data as a whole and this specific item such as previous year's income or residence 5 years ago.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="NumericDomain" type="NumericDomainType" substitutionGroup="ResponseDomain">
		<xs:annotation>
			<xs:documentation>A response domain capturing a numeric response (the intent is to analyze the response as a number) for a question item</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="NumericDomainType">
		<xs:annotation>
			<xs:documentation>A response domain capturing a numeric response (the intent is to analyze the response as a number) for a question. Contains the equivalent content of a NumericRepresentation including the numeric range, numeric type code, format, scale, decimal position, and interval. Adds a set of elements available to all Response Domains; Label, Description, OutParameter, designation of response cardinality, and a declaration of an offset date for the data content. Has an equivalent NumericDomainReference which references a ManagedNumericRepresentation.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:NumericRepresentationBaseType">
				<xs:sequence>
					<xs:element ref="r:Label" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A display label for the domain. Supports multiple language versions of the same content as well as optional formatting of the content. Repeat for labels with different content, for example, labels with differing length limitations.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A description of the content and purpose of the domain. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:OutParameter" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Allows for the response to be bound to one of the QuestionItem's OutParameters, so the collected information can be used elsewhere, for example as inputs to subsequent questions in an Instrument or to a GenerationInstruction. If multiple responses are possible, this would represent and ordered array of the responses.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:ResponseCardinality" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Allows the designation of the minimum and maximum number of responses allowed for this response domain.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:ContentDateOffset" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Identifies the difference between the date applied to the data as a whole and this specific item such as previous year's income or residence 5 years ago.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="CodeDomain" type="CodeDomainType" substitutionGroup="ResponseDomain">
		<xs:annotation>
			<xs:documentation>A response domain capturing a coded response (where both codes and their related category value are displayed) for a question item.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="CodeDomainType">
		<xs:annotation>
			<xs:documentation>A response domain capturing a coded response (where both codes and their related category value are displayed) for a question. Includes standard response domain elements; OutParameter, designation of response cardinality, and a declaration of an offset date for the data content. Contains the equivalent content of a CodeRepresentation including a reference to the CodeList used and the ability to limit the use of the CodeList to specific CodeList levels, ranges, or values. Adds a set of elements available to all Response Domains; Label, Description, OutParameter, designation of response cardinality, and a declaration of an offset date for the data content. CodeDomains cannot be included by reference. CodeDomain does not have an equivalent managed representation as the CodeList itself is a managed object. CodeDomains must be entered in-line.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:CodeRepresentationBaseType">
				<xs:sequence>
					<xs:element ref="r:Label" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A display label for the domain. Supports multiple language versions of the same content as well as optional formatting of the content. Repeat for labels with different content, for example, labels with differing length limitations.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A description of the content and purpose of the domain. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:OutParameter" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Allows for the response to be bound to one of the QuestionItem's OutParameters, so the collected information can be used elsewhere, for example as inputs to subsequent questions in an Instrument or to a GenerationInstruction. If multiple responses are possible, this would represent and ordered array of the responses.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:ResponseCardinality" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Allows the designation of the minimum and maximum number of responses allowed for this response domain.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:ContentDateOffset" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Identifies the difference between the date applied to the data as a whole and this specific item such as previous year's income or residence 5 years ago.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="displayCode" type="xs:boolean" default="true">
					<xs:annotation>
						<xs:documentation>If set to "true" (default value) the code value associated with the category label will be displayed. Set to "false" if only the category label should not be displayed.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="CategoryDomain" type="CategoryDomainType" substitutionGroup="ResponseDomain">
		<xs:annotation>
			<xs:documentation>A response domain capturing a category (without an attached code) response for a question item.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="CategoryDomainType">
		<xs:annotation>
			<xs:documentation>A response domain capturing a category (without an attached code) response for a question item. Includes standard response domain elements; OutParameter, designation of response cardinality, and a declaration of an offset date for the data content, as well as a CategoryRepresentationBase.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:CategoryRepresentationBaseType">
				<xs:sequence>
					<xs:element ref="r:Label" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A display label for the domain. Supports multiple language versions of the same content as well as optional formatting of the content. Repeat for labels with different content, for example, labels with differing length limitations.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A description of the content and purpose of the domain. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:OutParameter" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Allows for the response to be bound to one of the QuestionItem's OutParameters, so the collected information can be used elsewhere, for example as inputs to subsequent questions in an Instrument or to a GenerationInstruction. If multiple responses are possible, this would represent and ordered array of the responses.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:ResponseCardinality" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Allows the designation of the minimum and maximum number of responses allowed for this response domain.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:ContentDateOffset" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Identifies the difference between the date applied to the data as a whole and this specific item such as previous year's income or residence 5 years ago.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="GeographicDomain" type="GeographicDomainType" substitutionGroup="ResponseDomain">
		<xs:annotation>
			<xs:documentation>A response domain capturing a geographic coordinate reading as a response for a question item.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="GeographicDomainType">
		<xs:annotation>
			<xs:documentation>Structures the response domain for a geographic point to ensure collection of relevant information. The point may be associated with a polygon (such as the centroid of the polygon) or a line (end or shape points of a line). Note that the common response domain objects (OutParameter, ResponseCardinality, and ContentDateOffset) are available at each of the response objects in the representation.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:GeographicRepresentationBaseType">
				<xs:sequence>
					<xs:element ref="r:Label" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A display label for the domain. Supports multiple language versions of the same content as well as optional formatting of the content. Repeat for labels with different content, for example, labels with differing length limitations.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A description of the content and purpose of the domain. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="NominalDomain" type="NominalDomainType" substitutionGroup="ResponseDomain">
		<xs:annotation>
			<xs:documentation>A response domain capturing a nominal (check off) response for a question grid response. A NominalDomain may only be included in-line. It cannot be included by reference.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="NominalDomainType">
		<xs:annotation>
			<xs:documentation>A response domain capturing a nominal (check off) response for a question grid response. Includes standard response domain elements; OutParameter, designation of response cardinality, and a declaration of an offset date for the data content.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:NominalRepresentationBaseType">
				<xs:sequence>
					<xs:element ref="r:Label" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A display label for the domain. Supports multiple language versions of the same content as well as optional formatting of the content. Repeat for labels with different content, for example, labels with differing length limitations.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A description of the content and purpose of the domain. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:OutParameter" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Allows for the response to be bound to one of the QuestionItem's OutParameters, so the collected information can be used elsewhere, for example as inputs to subsequent questions in an Instrument or to a GenerationInstruction. If multiple responses are possible, this would represent and ordered array of the responses.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:ResponseCardinality" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Allows the designation of the minimum and maximum number of responses allowed for this response domain.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:ContentDateOffset" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Identifies the difference between the date applied to the data as a whole and this specific item such as previous year's income or residence 5 years ago.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="ScaleDomain" type="ScaleDomainType" substitutionGroup="ResponseDomain">
		<xs:annotation>
			<xs:documentation>A response domain capturing a scale response which describes a 1..n dimensional scale of various display types for a question. A ScaleDomain may also be provided by reference.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="ScaleDomainType">
		<xs:annotation>
			<xs:documentation>A response domain capturing a scale response which describes a 1..n dimensional scale of various display types for a question item. Includes standard response domain elements; OutParameter, designation of response cardinality, and a declaration of an offset date for the data content. May be replaced by a ScaleRepresentationRefererence.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:ScaleRepresentationBaseType">
				<xs:sequence>
					<xs:element ref="r:Label" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A display label for the domain. Supports multiple language versions of the same content as well as optional formatting of the content. Repeat for labels with different content, for example, labels with differing length limitations.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A description of the content and purpose of the domain. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:OutParameter" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Allows for the response to be bound to one of the QuestionItem's OutParameters, so the collected information can be used elsewhere, for example as inputs to subsequent questions in an Instrument or to a GenerationInstruction. If multiple responses are possible, this would represent and ordered array of the responses.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:ResponseCardinality" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Allows the designation of the minimum and maximum number of responses allowed for this response domain.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:ContentDateOffset" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Identifies the difference between the date applied to the data as a whole and this specific item such as previous year's income or residence 5 years ago.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="LocationDomain" type="LocationDomainType" substitutionGroup="ResponseDomain">
		<xs:annotation>
			<xs:documentation>A response domain capturing a location response (mark on an image, recording, or object) for a question. A LocationDomain may only be included in-line. It cannot be included by reference.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="LocationDomainType">
		<xs:annotation>
			<xs:documentation>A response domain capturing a location response (mark on an image, recording, or object) for a question. Includes standard response domain elements; OutParameter, designation of response cardinality, and a declaration of an offset date for the data content.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:LocationRepresentationBaseType">
				<xs:sequence>
					<xs:element ref="r:Label" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A display label for the domain. Supports multiple language versions of the same content as well as optional formatting of the content. Repeat for labels with different content, for example, labels with differing length limitations.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A description of the content and purpose of the domain. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:OutParameter" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Allows for the response to be bound to one of the QuestionItem's OutParameters, so the collected information can be used elsewhere, for example as inputs to subsequent questions in an Instrument or to a GenerationInstruction. If multiple responses are possible, this would represent and ordered array of the responses.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:ResponseCardinality" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Allows the designation of the minimum and maximum number of responses allowed for this response domain.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:ContentDateOffset" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Identifies the difference between the date applied to the data as a whole and this specific item such as previous year's income or residence 5 years ago.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="RankingDomain" type="RankingDomainType" substitutionGroup="ResponseDomain">
		<xs:annotation>
			<xs:documentation>A response domain capturing a ranking response which supports a "ranking" of categories. Generally used within a QuestionGrid. A RankingDomain may only be included in-line. It cannot be included by reference.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="RankingDomainType">
		<xs:annotation>
			<xs:documentation>A response domain capturing a ranking response which supports a "ranking" of categories. Generally used within a QuestionGrid. Includes standard response domain elements; OutParameter, designation of response cardinality, and a declaration of an offset date for the data content, as well as content for a Nominal Representation.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:RankingRepresentationBaseType">
				<xs:sequence>
					<xs:element ref="r:Label" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A display label for the domain. Supports multiple language versions of the same content as well as optional formatting of the content. Repeat for labels with different content, for example, labels with differing length limitations.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A description of the content and purpose of the domain. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:OutParameter" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Allows for the response to be bound to one of the QuestionItem's OutParameters, so the collected information can be used elsewhere, for example as inputs to subsequent questions in an Instrument or to a GenerationInstruction. If multiple responses are possible, this would represent and ordered array of the responses.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:ResponseCardinality" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Allows the designation of the minimum and maximum number of responses allowed for this response domain.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:ContentDateOffset" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Identifies the difference between the date applied to the data as a whole and this specific item such as previous year's income or residence 5 years ago.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="DistributionDomain" type="DistributionDomainType" substitutionGroup="ResponseDomain">
		<xs:annotation>
			<xs:documentation>A response domain capturing a distribution response for a question. A DistributionDomain may only be included in-line. It cannot be included by reference.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="DistributionDomainType">
		<xs:annotation>
			<xs:documentation>A response domain capturing a distribution response for a question item. Includes standard response domain elements; OutParameter, designation of response cardinality, and a declaration of an offset date for the data content, as well as the description of a distribution representation.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:DistributionRepresentationBaseType">
				<xs:sequence>
					<xs:element ref="r:Label" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A display label for the domain. Supports multiple language versions of the same content as well as optional formatting of the content. Repeat for labels with different content, for example, labels with differing length limitations.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A description of the content and purpose of the domain. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:OutParameter" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Allows for the response to be bound to one of the QuestionItem's OutParameters, so the collected information can be used elsewhere, for example as inputs to subsequent questions in an Instrument or to a GenerationInstruction. If multiple responses are possible, this would represent and ordered array of the responses.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:ResponseCardinality" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Allows the designation of the minimum and maximum number of responses allowed for this response domain.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:ContentDateOffset" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Identifies the difference between the date applied to the data as a whole and this specific item such as previous year's income or residence 5 years ago.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="GeographicStructureCodeDomain" type="GeographicStructureCodeDomainType" substitutionGroup="ResponseDomain">
		<xs:annotation>
			<xs:documentation>A response domain capturing a geographic structure code as a response for a question item. A GeographicStructureCodeDomain may only be included in-line. It cannot be included by reference.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="GeographicStructureCodeDomainType">
		<xs:annotation>
			<xs:documentation>A response domain capturing a geographic structure code as a response for a question item. Includes standard response domain elements; OutParameter, designation of response cardinality, and a declaration of an offset date for the data content, as well as a description of a geographic structure code representation.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:GeographicStructureCodeRepresentationBaseType">
				<xs:sequence>
					<xs:element ref="r:Label" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A display label for the domain. Supports multiple language versions of the same content as well as optional formatting of the content. Repeat for labels with different content, for example, labels with differing length limitations.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A description of the content and purpose of the domain. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:OutParameter" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Allows for the response to be bound to one of the QuestionItem's OutParameters, so the collected information can be used elsewhere, for example as inputs to subsequent questions in an Instrument or to a GenerationInstruction. If multiple responses are possible, this would represent and ordered array of the responses.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:ResponseCardinality" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Allows the designation of the minimum and maximum number of responses allowed for this response domain.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:ContentDateOffset" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Identifies the difference between the date applied to the data as a whole and this specific item such as previous year's income or residence 5 years ago.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="displayCode" type="xs:boolean" default="true">
					<xs:annotation>
						<xs:documentation>If set to "true" (default value) the code value associated with the category label will be displayed. Set to "false" if only the category label should not be displayed.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="GeographicLocationCodeDomain" type="GeographicLocationCodeDomainType" substitutionGroup="ResponseDomain">
		<xs:annotation>
			<xs:documentation>A response domain capturing the name or code of a Geographic Location as a response for a question item. A GeographicLocationCodeDomain may only be included in-line. It cannot be included by reference.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="GeographicLocationCodeDomainType">
		<xs:annotation>
			<xs:documentation>A response domain capturing the name or code of a Geographic Location as a response for a question item. Includes standard response domain elements; OutParameter, designation of response cardinality, and a declaration of an offset date for the data content, as well as a description of a geographic location code represeanttion. Allows for capturing a limited segment of a complex geographic code.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:GeographicLocationCodeRepresentationBaseType">
				<xs:sequence>
					<xs:element ref="r:Label" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A display label for the domain. Supports multiple language versions of the same content as well as optional formatting of the content. Repeat for labels with different content, for example, labels with differing length limitations.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A description of the content and purpose of the domain. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:OutParameter" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Allows for the response to be bound to one of the QuestionItem's OutParameters, so the collected information can be used elsewhere, for example as inputs to subsequent questions in an Instrument or to a GenerationInstruction. If multiple responses are possible, this would represent and ordered array of the responses.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:ResponseCardinality" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Allows the designation of the minimum and maximum number of responses allowed for this response domain.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:ContentDateOffset" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Identifies the difference between the date applied to the data as a whole and this specific item such as previous year's income or residence 5 years ago.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="displayCode" type="xs:boolean" default="true">
					<xs:annotation>
						<xs:documentation>If set to "true" (default value) the code value associated with the category label will be displayed. Set to "false" if only the category label should not be displayed.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="ResponseDomainReference" type="DomainReferenceType" abstract="true">
		<xs:annotation>
			<xs:documentation>An abstract base for the substitution group ResponseDomainReference. TypeOfObject should be set to ManagedDateTimeRepresentation, ManagedMissingValuesRepresentation, ManagedNumericRepresentation, ManagedScaleRepresentation, or ManagedTextRepresentation.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="MissingValuesDomainReference" type="DomainReferenceType" substitutionGroup="ResponseDomainReference">
		<xs:annotation>
			<xs:documentation>A response domain capturing the missing value response for a question item. This may only be included by reference as all MissingValue descriptions are managed. Note that MissingValues may be captured separately as process or paradata through a parallel data capture process or automatically by the instrument. The TypeOfObject should be set to ManagedMissingValuesRepresentation.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="TextDomainReference" type="DomainReferenceType" substitutionGroup="ResponseDomainReference">
		<xs:annotation>
			<xs:documentation>A response domain capturing the text response for a question item. The TypeOfObject should be set to ManagedTextRepresentation.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="NumericDomainReference" type="DomainReferenceType" substitutionGroup="ResponseDomainReference">
		<xs:annotation>
			<xs:documentation>A response domain capturing the numeric response for a question item. The TypeOfObject should be set to ManagedNumericRepresentation.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DateTimeDomainReference" type="DomainReferenceType" substitutionGroup="ResponseDomainReference">
		<xs:annotation>
			<xs:documentation>A response domain capturing the date time response for a question item. The TypeOfObject should be set to ManagedDateTimeRepresentation.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ScaleDomainReference" type="DomainReferenceType" substitutionGroup="ResponseDomainReference">
		<xs:annotation>
			<xs:documentation>A response domain capturing the scale response for a question item. The TypeOfObject should be set to ManagedScaleRepresentation.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="DomainReferenceType">
		<xs:annotation>
			<xs:documentation>Abstract type for the head of a substitution group that allows for the use of a response domain by reference. If specific values are used to denote missing values, these can be indicated as a space-delimited list in the missingValue attribute. If the missing value is indicated by a blank, this should be indicated by setting the value of blankIsMissingValue to true.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:ReferenceType">
				<xs:sequence>
					<xs:element ref="r:Label" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A display label for the domain. Supports multiple language versions of the same content as well as optional formatting of the content. Repeat for labels with different content, for example, labels with differing length limitations.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A description of the content and purpose of the domain. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:OutParameter" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Allows for the response to be bound to one of the QuestionItem's OutParameters, so the collected information can be used elsewhere, for example as inputs to subsequent questions in an Instrument or to a GenerationInstruction. If multiple responses are possible, this would represent and ordered array of the responses.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:ResponseCardinality" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Allows the designation of the minimum and maximum number of responses allowed for this response domain.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:ContentDateOffset" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Identifies the difference between the date applied to the data as a whole and this specific item such as previous year's income or residence 5 years ago.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--Interviewer Instructions -->
	<xs:complexType name="ExternalInterviewerInstructionType">
		<xs:annotation>
			<xs:documentation>Specification of an external interviewer instruction not structured in DDI. Uses the structure of OtherMaterial to provide a citation, description, and locator for the object.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:choice minOccurs="0">
				<xs:element ref="r:OtherMaterial">
					<xs:annotation>
						<xs:documentation>Specification of an external interviewer instruction not structured in DDI. Uses the structure of OtherMaterial to provide a citation, description, and locator for the object. TypeOfOtherMaterial should be set to ExternalInterviewInstruction.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element ref="r:OtherMaterialReference">
					<xs:annotation>
						<xs:documentation>Inclusion of an existing ExternalInterviewerInstruction description by reference.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
			<xs:element ref="InstructionAttachmentLocation" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Allows attachment of an instruction to a specific item in a question structure. For example, to a Label, QuestionText, ResponseDomain, Response domain value, or grid cell.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="isDisplayed" type="xs:boolean" default="true">
			<xs:annotation>
				<xs:documentation>If set to "true" indicates that the instruction should always be displayed, not just upon need.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="InterviewerInstructionReferenceType">
		<xs:annotation>
			<xs:documentation>Reference to an interviewer instruction expressed as DDI XML plus a flag to designate whether the instruction should always be displayed. TypeOfObject should be set to InterviewerInstruction.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:ReferenceType">
				<xs:sequence>
					<xs:element ref="InstructionAttachmentLocation" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Allows attachment of an instruction to a specific item in a question structure. For example, to a Label, QuestionText, ResponseDomain, Response domain value, or grid cell.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="isDisplayed" type="xs:boolean" default="true">
					<xs:annotation>
						<xs:documentation>If set to "true" the content of the instruction is intended to be displayed. If set to "false" the preference is for the instruction to be displayed upon request if this is supported by the mode of presentation.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SpecificSequenceType">
		<xs:annotation>
			<xs:documentation>Describes the ordering of items when not otherwise indicated. There are a set number of values for ItemSequenceType, but also a provision for describing an alternate ordering using a command language.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="ItemSequenceType">
				<xs:annotation>
					<xs:documentation>Identifies the type of sequence to use. Values include InOrderOfAppearance, Random, Rotate, and Other.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="AlternateSequenceType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Information on the command used to generate an alternative means of determining sequence changes. If used, the ItemSequenceType should be "Other".</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="ItemSequenceType" type="ItemSequenceTypeType" default="InOrderOfAppearance">
		<xs:annotation>
			<xs:documentation>Describes the types of sequences that can be used for a set of items.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:simpleType name="ItemSequenceTypeType">
		<xs:annotation>
			<xs:documentation>Describes the types of sequences that can be used for a set of items.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="InOrderOfAppearance">
				<xs:annotation>
					<xs:documentation>In the order of appearance per the DDI instance, for each use.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Random">
				<xs:annotation>
					<xs:documentation>Randomly resorts sequence for each use.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Rotate">
				<xs:annotation>
					<xs:documentation>Rotates order of sequence for each use where first use is 1 2 3 4, second use is 2 3 4 1, third use is 3 4 1 2 etc.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Other">
				<xs:annotation>
					<xs:documentation>Any other means of reordering sequence. When value is Other, AlterativeSequenceType must be specified to describe the resequencing process.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="AlternateSequenceType" type="r:CommandCodeType">
		<xs:annotation>
			<xs:documentation>Information on the command used to generate an alternative means of determining sequence changes.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="TypeOfInstrument" type="r:CodeValueType">
		<xs:annotation>
			<xs:documentation>A brief textual description of the type of instrument being described primarily for classification purposes. Supports the use of an external controlled vocabulary.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="TypeOfSequence" type="r:CodeValueType">
		<xs:annotation>
			<xs:documentation>A brief textual description of the purpose of type of sequence. Many sequences are defined for processing or display purposes and may be classified using this element. Supports the use of an external controlled vocabulary.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="Methodology" type="MethodologyType">
		<xs:annotation>
			<xs:documentation>Metadata regarding the methodologies used concerning data collection, determining the timing and repetition patterns for data collection, and sampling procedures.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="CollectionEvent" type="CollectionEventType">
		<xs:annotation>
			<xs:documentation>Information on a specific data collection event</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="QuestionScheme" type="QuestionSchemeType">
		<xs:annotation>
			<xs:documentation>Contains a set of QuestionItems, QuestionGrids, QuestionBlocks, and QuestionGroups.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="Instrument" type="InstrumentType">
		<xs:annotation>
			<xs:documentation>Defines the type of instrument used for data collection or capture.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ProcessingEvent" type="ProcessingEventType">
		<xs:annotation>
			<xs:documentation>ProcessingEvent can contain a number of operations of different types to express a range of events that occur together.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="DataCollectionMethodologyType">
		<xs:annotation>
			<xs:documentation>Methodologies pertaining to the overall data collection such as primary or secondary data collection, qualitative or quantitative methods, mixed method approaches, GPS capturing methods, methods for collecting data from hard to reach communities, etc. Repeat this element if multiple methodologies are used. In addition to a descriptive narrative, the methodology may be classified by a short term or external controlled vocabulary.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:IdentifiableType">
				<xs:sequence>
					<xs:element ref="TypeOfDataCollectionMethodology" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Allows for brief identification of the type of data collection methodology using an optional controlled vocabulary.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Full description of the data collection methodology. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="TypeOfDataCollectionMethodology" type="r:CodeValueType">
		<xs:annotation>
			<xs:documentation>A brief textual description or classification of the type of data collection methodology. Supports the use of an external controlled vocabulary.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="MethodologyName" type="r:NameType">
		<xs:annotation>
			<xs:documentation>Name of the Methodology using the DDI Name structure.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DataCollectionMethodology" type="DataCollectionMethodologyType">
		<xs:annotation>
			<xs:documentation>Methodologies pertaining to the overall data collection such as primary or secondary data collection, qualitative or quantitative methods, mixed method approaches, GPS capturing methods, methods for collecting data from hard to reach communities, etc. Repeat this element if multiple methodologies are used.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="TimeMethodType">
		<xs:annotation>
			<xs:documentation>Describes the time method or time dimension of the data collection. This may cover specific timing issues such as when a data collection instrument is fielded (time of year, month, week, day), intended repetition, length of data collection period etc. In addition to the descriptive narrative supports the use of a brief term or external controlled vocabulary to classify the methodology used.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:IdentifiableType">
				<xs:sequence>
					<xs:element ref="TypeOfTimeMethod" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Allows brief identification of time method used with the option of using a controlled vocabulary. The DDI Alliance has provided a controlled vocabulary (TimeMethod) to support this element at http://www.ddialliance.org/controlled-vocabularies.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Full description of the data time method used. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="TypeOfTimeMethod" type="r:CodeValueType">
		<xs:annotation>
			<xs:documentation>A brief textual description or classification of the type of the time methodology used. Supports the use of an external controlled vocabulary. The DDI Alliance has provided a controlled vocabulary (TimeMethod) to support this element at http://www.ddialliance.org/controlled-vocabularies.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="TimeMethod" type="TimeMethodType">
		<xs:annotation>
			<xs:documentation>Describes the time method or time dimension of the data collection.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="SamplingProcedureType">
		<xs:annotation>
			<xs:documentation>Describes a sampling procedure. If multiple sampling procedures were used repeat this element for each.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:IdentifiableType">
				<xs:sequence>
					<xs:element ref="TypeOfSamplingProcedure" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A generic means of classifying a SamplingProcedure. Supports the use of an external controlled vocabulary.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Full description of the sampling procedure. Supports structured content and multiple language content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="SamplingPlanReference" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Reference to sample plan which describes a process for achieving the sample. TypeOfObject should be SamplingPlan.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="SampleReference" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Reference to sample created using sampling procedure. TypeOfObject should be Sample.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="TypeOfSamplingProcedure" type="r:CodeValueType">
		<xs:annotation>
			<xs:documentation>A brief textual description or classification of the type of sampling procedure used. Supports the use of an external controlled vocabulary. The DDI Alliance has provided a controlled vocabulary (SamplingProcedure) to support this element at http://www.ddialliance.org/controlled-vocabularies.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="SamplingProcedure" type="SamplingProcedureType">
		<xs:annotation>
			<xs:documentation>Describes the type of sample, sample design and provides details on drawing the sample.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="PopulationOfConcern" type="PopulationType">
		<xs:annotation>
			<xs:documentation>Describe the population through a combination of textual description and reference to a structured Universe.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="SamplingPlanReference" type="r:ReferenceType">
		<xs:annotation>
			<xs:documentation>Reference to an existing SamplingPlan. TypeOfObject should be SamplingPlan</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="OverallTargetSampleSize" type="PopulationSizeType">
		<xs:annotation>
			<xs:documentation>The target value of the sample size for the primary and any secondary or sub-population.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="OverallSampleSize" type="SizeType">
		<xs:annotation>
			<xs:documentation>Size of the full sample. Consists of an integer value and specification of the unit.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ApplicationDetails" type="ApplicationDetailsType">
		<xs:annotation>
			<xs:documentation>Provides sample stage level details where needed.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="PopulationType">
		<xs:annotation>
			<xs:documentation>Describe the population through a combination of textual description and reference to a structured Universe. If multiple universes are referenced, the overall universe is the intersect of the set of universes referenced.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="r:Description" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A textual description of the population. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="r:UniverseReference" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>A reference to a structured Universe description.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PopulationSizeType">
		<xs:annotation>
			<xs:documentation>The target value of the sample size for the primary and any secondary or sub-population.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="PrimaryPopulation" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The sample size of the primary or full population included in this sample. Consists of an integer value and specification of the sample unit.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="SecondaryPopulation" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>The sample size of any secondary or sub-populations included in this sample. Consists of an integer value and specification of the sample unit.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="PrimaryPopulation" type="SizeType">
		<xs:annotation>
			<xs:documentation>The sample size of the primary or full population included in this sample. Consists of an integer value and specification of the unit.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="SecondaryPopulation" type="SizeType">
		<xs:annotation>
			<xs:documentation>The sample size of any secondary or sub-populations included in this sample. Consists of an integer value and specification of the unit.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="SizeType">
		<xs:annotation>
			<xs:documentation>Consists of an integer value and specification of the unit. The unit may be specified using a controlled vocabulary.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="r:UnitTypeReference" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to an existing UnitType using the Reference structure. TypeOfObject should be set to UnitType.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NumberOfUnits" minOccurs="0" type="xs:nonNegativeInteger">
				<xs:annotation>
					<xs:documentation>Indicate the number of units of the UnitType specified.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ApplicationDetailsType">
		<xs:annotation>
			<xs:documentation>Provides sample stage level details where needed. Repeat for individual stages or sub-stages.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="SamplingStageReference" minOccurs="0">
				<xs:annotation>
					<xs:documentation>References the sample plan stage in an overall sample plan. TypeOfObject should be set to SamplingStage</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="SampleFrameReference" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to sample frame used. Note that this is the actual sample frame used and may differ from the recommended sample frame found in the sample plan stage referenced for this procedure. Deviation from the recommended sample frame should be described in FrameLimitations.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="FrameLimitations" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Description of limitations of the usage of the frame for the data collection.  Clarify (over/under) coverage issues, lack of needed fields, and needs to support over-sampling or deviation from recommended sample frame found in sample plan stage.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="TargetSampleSize" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>The desired sample size for this particular sample plan express in relation to its strata number if relevant. Provides means of expressing the formula used for determining the sample size.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="DateOfSample" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Date or date range when sample was drawn.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ResponsibleForSamplingReference" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>A reference to an organization or individual responsible for sampling.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="FrameLimitations" type="r:StructuredStringType">
		<xs:annotation>
			<xs:documentation>Description of general limitations of the frame, including  over/under-coverage and update schedules and procedures.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="TargetSampleSize" type="TargetSampleSizeType">
		<xs:annotation>
			<xs:documentation>The desired sample size for this particular sample plan express in relation to its strata number if relevant.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DateOfSample" type="r:DateType">
		<xs:annotation>
			<xs:documentation>Date or date range when sample was drawn.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="SamplingStageReference" type="r:ReferenceType">
		<xs:annotation>
			<xs:documentation>Reference to an existing SamplingStage using the Reference structure. TypeOfObject should be set to SamplingStage.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="SampleFrameReference" type="r:ReferenceType">
		<xs:annotation>
			<xs:documentation>Reference to an existing SampleFrame using the Reference structure. TypeOfObject should be set to SampleFrame.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ResponsibleForSamplingReference" type="r:ReferenceType">
		<xs:annotation>
			<xs:documentation>Reference to an existing Organization or Individual using the Reference structure. TypeOfObject should be set to Organization or Individual.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="TargetSampleSizeType">
		<xs:annotation>
			<xs:documentation>The desired sample size for this particular sample plan express in relation to its strata number if relevant. Provides means of expressing the formula used for determining the sample size.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="StrataNumber" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicate specific strata if the sample frame has been stratified prior to sampling within the specified stage.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="DesiredSampleSize">
				<xs:annotation>
					<xs:documentation>The number and type of sample units.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="SampleSizeFormulaReference" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the General or GenerationInstruction containing the formula or instruction used to determine sample size. The basic Reference structure is extended to allow for the use of Binding to link specific source parameters to the InParameter of the instruction at the point of use. If there is a conflict between a Binding in the instruction of a specific source to an InParameter and the Binding information provided in the ProcessingInstructionReference, the Binding information in the reference overrides that found in the instruction. TypeOfObject should be set to GeneralInstruction or GenerationInstruction.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="StrataNumber" type="xs:nonNegativeInteger">
		<xs:annotation>
			<xs:documentation>A strata within a sample frame stratification.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DesiredSampleSize" type="SizeType">
		<xs:annotation>
			<xs:documentation>Size of the sample.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="SampleSizeFormulaReference" type="r:ReferenceWithBindingType">
		<xs:annotation>
			<xs:documentation>Reference to the General or GenerationInstruction containing the formula or instruction used to determine sample size. The basic Reference structure is extended to allow for the use of Binding to link specific source parameters to the InParameter of the instruction at the point of use. If there is a conflict between a Binding in the instruction of a specific source to an InParameter and the Binding information provided in the ProcessingInstructionReference, the Binding information in the reference overrides that found in the instruction. TypeOfObject should be set to GeneralInstruction or GenerationInstruction.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="DeviationFromSampleDesignType">
		<xs:annotation>
			<xs:documentation>Describes any deviations from the planned sample design. These may be for reasons of practicality, implementation issues, or other reasons. In addition to a narrative description allows for use of a brief term or controlled vocabulary term to classify the type of deviation.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:IdentifiableType">
				<xs:sequence>
					<xs:element ref="TypeOfDeviationFromSampleDesign" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Allows brief identification of the deviation from the sample design with the option of using a controlled vocabulary.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Full description of deviation from the sample design. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="TypeOfDeviationFromSampleDesign" type="r:CodeValueType">
		<xs:annotation>
			<xs:documentation>A brief textual description or classification of the deviation from sample design. Supports the use of an external controlled vocabulary.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DeviationFromSampleDesign" type="DeviationFromSampleDesignType">
		<xs:annotation>
			<xs:documentation>Describes any deviations from the planned sample design.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DataSource" type="DataSourceType">
		<xs:annotation>
			<xs:documentation>Describes the source of the data. This may be a population group, an environmental object, a registry, published or unpublished data source, etc.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="Origin" type="OriginType">
		<xs:annotation>
			<xs:documentation>A citation or URI for the source of the data.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="SourceCharacteristic" type="r:StructuredStringType">
		<xs:annotation>
			<xs:documentation>A characteristic of the source data. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DataCollectionFrequency" type="DataCollectionFrequencyType">
		<xs:annotation>
			<xs:documentation>Documents the intended frequency of data collection.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="ModeOfCollectionType">
		<xs:annotation>
			<xs:documentation>Describes the mode of collection, i.e., paper questionnaire, observation, web delivered questionnaire, computer assisted interview, automated data harvesting, etc. In addition to the narrative description allows for the use of a brief term or item from a controlled vocabulary to classify the mode used. If multiple modes are used repeat the element.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:IdentifiableType">
				<xs:sequence>
					<xs:element ref="TypeOfModeOfCollection" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Allows brief identification of the mode used with the option of using a controlled vocabulary. The DDI Alliance has provided a controlled vocabulary (ModeOfCollection) to support this element at http://www.ddialliance.org/controlled-vocabularies.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Full description of the mode of collection. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="TypeOfModeOfCollection" type="r:CodeValueType">
		<xs:annotation>
			<xs:documentation>A brief textual description or classification of the mode of data collection. Supports the use of an external controlled vocabulary. The DDI Alliance has provided a controlled vocabulary (ModeOfCollection) to support this element at http://www.ddialliance.org/controlled-vocabularies.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ModeOfCollection" type="ModeOfCollectionType">
		<xs:annotation>
			<xs:documentation>Describes the mode of collection, i.e., paper questionnaire, observation, web delivered questionnaire, computer assisted interview, automated data harvesting, etc.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="CollectionSituationType">
		<xs:annotation>
			<xs:documentation>Describes the situation in which the data collection event takes place.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:IdentifiableType">
				<xs:sequence>
					<xs:element ref="TypeOfCollectionSituation" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Allows brief identification of collection situation with the option of using a controlled vocabulary.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Full description of the collection situation. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="TypeOfCollectionSituation" type="r:CodeValueType">
		<xs:annotation>
			<xs:documentation>A brief textual description or classification of the collection situation. Supports the use of an external controlled vocabulary.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="CollectionSituation" type="CollectionSituationType">
		<xs:annotation>
			<xs:documentation>Describes the situation in which the data collection event takes place.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="ActionToMinimizeLossesType">
		<xs:annotation>
			<xs:documentation>Describes action taken to minimize loss of data from the collection event. This may include a brief term, such as from a controlled vocabulary, and a full description of the actions taken. If multiple actions were taken repeat this element.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:IdentifiableType">
				<xs:sequence>
					<xs:element ref="TypeOfActionToMinimizeLosses" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A brief textual description of the action taken to minimize loss of data. Supports the use of an external controlled vocabulary</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Full description of the action taken to minimize loss of data. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="TypeOfActionToMinimizeLosses" type="r:CodeValueType">
		<xs:annotation>
			<xs:documentation>A brief textual description or classification of the actions taken to minimum data loss. Supports the use of an external controlled vocabulary.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ActionToMinimizeLosses" type="ActionToMinimizeLossesType">
		<xs:annotation>
			<xs:documentation>Describes action taken to minimize loss of data from the collection event.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ControlOperation" type="OperationType">
		<xs:annotation>
			<xs:documentation>A generic operation description used to describe a control operation.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="CleaningOperation" type="OperationType">
		<xs:annotation>
			<xs:documentation>A generic operation description used to describe a cleaning operation.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="WeightingType">
		<xs:annotation>
			<xs:documentation>Describes the weighting used in the process. In addition to a description of the weighting process it may be designated as a specific type of weighting. If the data uses a standard weight (each record has an equal weight) it may be expressed here with StandardWeight.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:VersionableType">
				<xs:sequence>
					<xs:element ref="TypeOfWeighting" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Allows brief identification of Weighting Process used with the option of using a controlled vocabulary.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Full description of the weighting process. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="WeightingMethodologyReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A reference to the methodology used for the weighting process.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:AnalysisUnit" minOccurs="0">
						<xs:annotation>
							<xs:documentation>The entity to which the weights apply, for example, individuals, families or households, groups, institutions/organizations, administrative units, etc. Supports the use of an external controlled vocabulary. The DDI Alliance has provided a controlled vocabulary (AnalysisUnit) to support this element at http://www.ddialliance.org/controlled-vocabularies.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="UsageGuide" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A guide to the appropriate usage of the weights generated by the processing event.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="StandardWeight" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A standard weighting factor used by all or a group of variables within the data set.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="BasedOnSampleReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The sample that was the basis for the weighting. TypeOfObject should be Sample.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="WeightingMethodologyReference" type="r:ReferenceType">
		<xs:annotation>
			<xs:documentation>A reference to the methodology used for the weighting process. TypeOfObject should be set to WeightingMethodology</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="UsageGuide" type="UsageGuideType">
		<xs:annotation>
			<xs:documentation>A guide to the appropriate usage of the weights generated by the processing event.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="UsageGuideType">
		<xs:annotation>
			<xs:documentation>A guide to the appropriate usage of the weights generated by the processing event.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="UsageExample" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Provide relevant illustrations of the use of the weights described produced in the weighting process. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="UsageRestrictions" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Note specific rules or restrictions for use. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="UsageRecommendations" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Recommend best practices for the use of the weights described produced in the weighting process. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
				</xs:annotation>
			</xs:element>			
			<xs:element ref="r:CommandCode" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Use CommandCode content to describe and/or specify code for using weights. Allows specification of input variables using parameters and binding as well description, code snippets or a link to external code.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="UsageExample" type="r:StructuredStringType">
		<xs:annotation>
			<xs:documentation>Provide relevant illustrations of the use of the weights described produced in the weighting process. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="UsageRestrictions" type="r:StructuredStringType">
		<xs:annotation>
			<xs:documentation>Note specific rules or restrictions for use. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="UsageRecommendations" type="r:StructuredStringType">
		<xs:annotation>
			<xs:documentation>Recommend best practices for the use of the weights described produced in the weighting process. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="TypeOfWeighting" type="r:CodeValueType">
		<xs:annotation>
			<xs:documentation>A brief textual description or classification of the type of weighting process used. Supports the use of an external controlled vocabulary.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="Weighting" type="WeightingType">
		<xs:annotation>
			<xs:documentation>Describes the weighting used in the process.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="StandardWeight" type="StandardWeightType">
		<xs:annotation>
			<xs:documentation>Provides an identified value for a standard weight expressed as an xs:float.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="StandardWeightType">
		<xs:annotation>
			<xs:documentation>Provides an identified value for a standard weight expressed as an xs:float. This object may be referenced by a variable or statistic and used as a weight for analysis.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:IdentifiableType">
				<xs:sequence>
					<xs:element name="StandardWeightValue" type="xs:float">
						<xs:annotation>
							<xs:documentation>Provides the standard weight used for weighted analysis of data expressed as an xs:float. This element is referenced by the variable and/or statistics calculated using the standard weight.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="ResponseTextSet" type="ResponseTextSetType">
		<xs:annotation>
			<xs:documentation>Provides a means of bundling multiple language versions of the same intended dynamic text together. This wrapper serves to differentiate between a case where multiple language content for a single ResponseText are provided and when two differing sets of ResponseText are in immediate sequence (with no intervening question).</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="ResponseTextSetType">
		<xs:annotation>
			<xs:documentation>Provides a means of bundling multiple language versions of the same intended dynamic text together. This wrapper serves to differentiate between a case where multiple language content for a single ResponseText are provided and when two differing sets of ResponseText are in immediate sequence (with no intervening question). Each of the repetitions of ResponseText within this wrapper are assumed to be multi-language equivalents.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="ResponseText" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Text closely related to the content of the ResponseDomain(s), in general, text required to make sense of the related response domain. Note that when using ResponseText, the full ResponseText must be repeated for multi-language versions of the content. Different languages may handle the dynamic portions in different locations and/or with different content. Therefore languages cannot be mixed within a dynamic text except when the full text itself has multiple language sections, for example, a foreign language term in a text. The DisplayText may also be repeated to provide a dynamic and plain text version of the display. This allows for accurate rendering of the ResponseText in a non-dynamic environment like print.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="DataAppraisalInformation" type="DataAppraisalInformationType">
		<xs:annotation>
			<xs:documentation>Describes the result of data appraisal activities as a response rate and sampling error.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="Expression" type="r:CommandCodeType">
		<xs:annotation>
			<xs:documentation>Information on the command used to generate the dynamic portion of a text field.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="TypeOfIfThenElse" type="r:CodeValueType">
		<xs:annotation>
			<xs:documentation>A brief textual description or classification of the IfThenElse. Supports the use of an external controlled vocabulary. DDI recommends the use of a controlled vocabulary.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="IfCondition" type="r:CommandCodeType">
		<xs:annotation>
			<xs:documentation>Information on the command used to determine whether the "If" condition is met.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ThenConstructReference" type="r:ReferenceType">
		<xs:annotation>
			<xs:documentation>Reference to an existing Construct using the Reference structure. TypeOfObject should be set to ComputationItem, IfThenElse, Loop, MeasurementConstruct, QuestionConstruct, RepeatUntil, RepeatWhile, Sequence, StatementItem, Split, SplitJoin, DevelopmentStep, SamplingStage, or SampleStep.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ElseConstructReference" type="r:ReferenceType">
		<xs:annotation>
			<xs:documentation>Reference to an existing Construct using the Reference structure. TypeOfObject should be set to ComputationItem, IfThenElse, Loop, MeasurementConstruct, QuestionConstruct, RepeatUntil, RepeatWhile, Sequence, StatementItem, Split, SplitJoin, DevelopmentStep, SamplingStage, or SampleStep.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="UntilCondition" type="r:CommandCodeType">
		<xs:annotation>
			<xs:documentation>Information on the command used to determine whether the "Until" condition is met.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="UntilConstructReference" type="r:ReferenceType">
		<xs:annotation>
			<xs:documentation>Reference to an existing Construct using the Reference structure. TypeOfObject should be set to ComputationItem, IfThenElse, Loop, MeasurementConstruct, QuestionConstruct, RepeatUntil, RepeatWhile, Sequence, StatementItem, Split, SplitJoin, DevelopmentStep, SamplingStage, or SampleStep.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="WhileCondition" type="r:CommandCodeType">
		<xs:annotation>
			<xs:documentation>Information on the command used to determine whether the "While" condition is met.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="WhileConstructReference" type="r:ReferenceType">
		<xs:annotation>
			<xs:documentation>Reference to an existing Construct using the Reference structure. TypeOfObject should be set to ComputationItem, IfThenElse, Loop, MeasurementConstruct, QuestionConstruct, RepeatUntil, RepeatWhile, Sequence, StatementItem, Split, SplitJoin, DevelopmentStep, SamplingStage, or SampleStep.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="LoopVariableReference" type="r:ReferenceType">
		<xs:annotation>
			<xs:documentation>Reference to an existing Variable using the Reference structure.  TypeOfObject should be set to Variable.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="InitialValue" type="r:CommandCodeType">
		<xs:annotation>
			<xs:documentation>Information on the command used to set the initial value for the process. Could be a simple value.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="LoopWhile" type="r:CommandCodeType">
		<xs:annotation>
			<xs:documentation>Information on the command used to determine whether the "LoopWhile" condition is met.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="StepValue" type="r:CommandCodeType">
		<xs:annotation>
			<xs:documentation>Information on the command used to set the incremental or step value for the process. Could be a simple value.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="AssignedVariableReference" type="r:ReferenceType">
		<xs:annotation>
			<xs:documentation>Reference to an existing AssignedVariable using the Reference structure. TypeOfObject should be set to Variable.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DisplayText" type="DynamicTextType">
		<xs:annotation>
			<xs:documentation>Display text which supports the use of dynamic content.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="QuestionText" type="DynamicTextType">
		<xs:annotation>
			<xs:documentation>Question text which supports the use of dynamic content.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="QuestionIntent" type="r:StructuredStringType">
		<xs:annotation>
			<xs:documentation>Intent of the Question. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ResponseText" type="DynamicTextType">
		<xs:annotation>
			<xs:documentation>Response text which supports the use of dynamic content.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="SamplingError" type="r:StructuredStringType">
		<xs:annotation>
			<xs:documentation>Description of the sampling error. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="OtherAppraisalProcess" type="r:StructuredStringType">
		<xs:annotation>
			<xs:documentation>Description of any other appraisal process used. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ResponseUnit" type="r:CodeValueType">
		<xs:annotation>
			<xs:documentation>A brief textual description or classification of the intended response unit/respondent. Supports the use of an external controlled vocabulary. The DDI Alliance has provided a controlled vocabulary (ResponseUnit) to support this element at http://www.ddialliance.org/controlled-vocabularies.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="GeneralInstruction" type="GeneralInstructionType" substitutionGroup="ProcessingInstruction">
		<xs:annotation>
			<xs:documentation>Processing instructions that pertain to data collection or data processing overall such as handling of non-response to questions, imputation practices, suppression rules, etc.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="GenerationInstruction" type="GenerationInstructionType" substitutionGroup="ProcessingInstruction">
		<xs:annotation>
			<xs:documentation>Processing instructions for recodes, derivations from multiple question or variable sources, and derivations based on external sources.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="InputQuestionReference" type="SourceReferenceType">
		<xs:annotation>
			<xs:documentation>Reference to a question used in the derivation or coding instruction. Allows use of Alias to use of Variable in instruction. TypeOfObject should be set to QuestionItem or Question Grid.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="InputMeasurementReference" type="SourceReferenceType">
		<xs:annotation>
			<xs:documentation>Reference to a measurement used in the derivation or coding instruction. Allows use of Alias to use of Variable in instruction. TypeOfObject should be set to MeasurementItem.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="TypeOfComputationItem" type="r:CodeValueType">
		<xs:annotation>
			<xs:documentation>A brief textual description or classification of the ComputationItem. Supports the use of an external controlled vocabulary. DDI recommends the use of a controlled vocabulary.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ControlConstructReference" type="r:ReferenceType">
		<xs:annotation>
			<xs:documentation>A reference to a control construct of any type. TypeOfObject should be set to ComputationItem, IfThenElse, Loop, MeasurementConstruct, QuestionConstruct, RepeatUntil, RepeatWhile, Sequence, StatementItem, Split, SplitJoin, DevelopmentStep, SamplingStage, or SampleStep.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="InputVariableReference" type="SourceReferenceType">
		<xs:annotation>
			<xs:documentation>Reference to a variable used in the derivation or coding instruction. Allows use of Alias to use of Variable in instruction. TypeOfObject should be set to Variable.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ExternalInformation" type="ExternalInformationType">
		<xs:annotation>
			<xs:documentation>Description and link to the External Information using the DDI Other Material structure.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="ExternalInformationType">
		<xs:annotation>
			<xs:documentation>Description and link to the External Information using the DDI Other Material structure.</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element ref="r:OtherMaterial">
				<xs:annotation>
					<xs:documentation>Description and link to the External Information using the DDI Other Material structure.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="r:OtherMaterialReference">
				<xs:annotation>
					<xs:documentation>Use of a previously described External Information by Reference. TypeOfObject will be OtherMaterial.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>	
	</xs:complexType>
	<xs:element name="DataCollectorOrganizationReference" type="r:ReferenceType">
		<xs:annotation>
			<xs:documentation>Reference to an existing Organization or Individual using the Reference structure. TypeOfObject should be set to Organization or Individual.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ExternalInterviewerInstruction" type="ExternalInterviewerInstructionType">
		<xs:annotation>
			<xs:documentation>Specification of an external interviewer instruction not structured in DDI.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="InterviewerInstructionReference" type="InterviewerInstructionReferenceType">
		<xs:annotation>
			<xs:documentation>Reference to an interviewer instruction expressed as DDI XML plus a flag to designate whether the instruction should always be displayed. TypeOfObject should be set to Instruction.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="OverriddenCodeReference" type="r:ReferenceType">
		<xs:annotation>
			<xs:documentation>Reference to an existing Generation or General Instruction using the Reference structure. TypeOfObject should be set to GeneralInstruction or GenerationInstruction.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DataCollectionDate" type="r:DateType">
		<xs:annotation>
			<xs:documentation>Time period of this role.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ExternalAid" type="ExternalAidType">
		<xs:annotation>
			<xs:documentation>Description and link to the External Aid using the DDI Other Material structure.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="ExternalAidType">
		<xs:annotation>
			<xs:documentation>Description and link to the External Aid using the DDI Other Material structure.</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element ref="r:OtherMaterial">
				<xs:annotation>
					<xs:documentation>Description and link to the ExternalAid using the DDI Other Material structure.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="r:OtherMaterialReference">
				<xs:annotation>
					<xs:documentation>Use of a previously described ExternalAid by Reference. TypeOfObject will be OtherMaterial.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	<xs:element name="InstrumentReference" type="r:ReferenceType">
		<xs:annotation>
			<xs:documentation>Reference to an existing Instrument using the Reference structure. TypeOfObject should be set to Instrument.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="InstructionReference" type="r:ReferenceType">
		<xs:annotation>
			<xs:documentation>Reference to an individual instruction. TypeOfObject should be set to Instruction.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="InstructionAttachmentLocation" type="InstructionAttachmentLocationType">
		<xs:annotation>
			<xs:documentation>Allows attachment of an instruction to a specific item in a question structure. For example, to a Label, QuestionText, ResponseDomain, Response domain value, or grid cell.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="InstructionAttachmentLocationType">
		<xs:annotation>
			<xs:documentation>Allows attachment of an instruction to a specific item in a question structure. For example, to a Label, QuestionText, ResponseDomain, Response domain value, or grid cell.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="AttachmentLocation">
					<xs:annotation>
						<xs:documentation>Allows attachment of an instruction to a specific item in a code or category scheme. For example, attach a Definition to a specific Code/Category the value.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element ref="GridAttachment">
					<xs:annotation>
						<xs:documentation>Identifies the cell or cells in a grid to which the instruction is attached by a reference to a specific cell coordinate in a grid or by identifying a range of values along a dimension.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
		</xs:sequence>
		<xs:attribute name="attachToLabel" type="xs:boolean" default="false">
			<xs:annotation>
				<xs:documentation>Attach the instruction to the Question Label.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="attachToQuestionText" type="xs:boolean" default="true">
			<xs:annotation>
				<xs:documentation>Attach the instruction to the QuestionText.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:element name="SamplingInformationScheme" type="SamplingInformationSchemeType">
 		<xs:annotation>
 			<xs:documentation>A set of sampling information maintained by an agency including sampling plans, sample frames, and samples.</xs:documentation>
 		</xs:annotation>
 	</xs:element>
 	<xs:complexType name="SamplingInformationSchemeType">
 		<xs:annotation>
 			<xs:documentation>A set of sampling information maintained by an agency including sampling plans, sample frames, and samples.</xs:documentation>
 		</xs:annotation>
 		<xs:complexContent>
 			<xs:extension base="r:MaintainableType">
 				<xs:sequence>
 					<xs:element ref="SamplingInformationSchemeName" minOccurs="0" maxOccurs="unbounded">
 						<xs:annotation>
 							<xs:documentation>A name for the sampling information scheme. May be expressed in multiple languages. Repeat the element to express names with different content, for example different names for different systems.</xs:documentation>
 						</xs:annotation>
 					</xs:element>
 					<xs:element ref="r:Label" minOccurs="0" maxOccurs="unbounded">
 						<xs:annotation>
 							<xs:documentation>A display label for the sampling information scheme. Supports multiple language versions of the same content as well as optional formatting of the content. Repeat for labels with different content, for example, labels with differing length limitations.</xs:documentation>
 						</xs:annotation>
 					</xs:element>
 					<xs:element ref="r:Description" minOccurs="0">
 						<xs:annotation>
 							<xs:documentation>A description of the use of the sampling information scheme. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
 						</xs:annotation>
 					</xs:element>
 					<xs:element ref="r:SamplingInformationSchemeReference" minOccurs="0" maxOccurs="unbounded">
 						<xs:annotation>
 							<xs:documentation>Provides for inclusion by reference of external sampling information schemes.</xs:documentation>
 						</xs:annotation>
 					</xs:element>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
 						<xs:choice minOccurs="0" maxOccurs="unbounded">
 							<xs:element ref="SampleFrame">
 								<xs:annotation>
 									<xs:documentation>An item (that is, a sample frame) belonging to the sampling information Scheme.</xs:documentation>
 								</xs:annotation>
 							</xs:element>
 							<xs:element ref="SampleFrameReference">
 								<xs:annotation>
 									<xs:documentation>A sample frame item included in the scheme by reference.</xs:documentation>
 								</xs:annotation>
 							</xs:element>
 						</xs:choice>
 						<xs:choice minOccurs="0" maxOccurs="unbounded">
 							<xs:element ref="SamplingPlan">
 								<xs:annotation>
 									<xs:documentation>An item (that is, a sampling plan) belonging to the sampling information Scheme.</xs:documentation>
 								</xs:annotation>
 							</xs:element>
 							<xs:element ref="SamplingPlanReference">
 								<xs:annotation>
 									<xs:documentation>A sampling plan item included in the scheme by reference.</xs:documentation>
 								</xs:annotation>
 							</xs:element>
 						</xs:choice>
 						<xs:choice minOccurs="0" maxOccurs="unbounded">
 							<xs:element ref="Sample">
 								<xs:annotation>
 									<xs:documentation>An item (that is, a sample) belonging to the sampling information Scheme.</xs:documentation>
 								</xs:annotation>
 							</xs:element>
 							<xs:element ref="SampleReference">
 								<xs:annotation>
 									<xs:documentation>A sample included in the scheme by reference.</xs:documentation>
 								</xs:annotation>
 							</xs:element>
 						</xs:choice>
 					</xs:choice>
 					<xs:choice minOccurs="0" maxOccurs="unbounded">
 						<xs:element ref="SamplingInformationGroup">
 							<xs:annotation>
 								<xs:documentation>An item (that is, a sampling information group) belonging to the sampling information Scheme.</xs:documentation>
 							</xs:annotation>
 						</xs:element>
 						<xs:element ref="SamplingInformationGroupReference">
 							<xs:annotation>
 								<xs:documentation>Inclusion of a SamplingInformationGroup by reference.</xs:documentation>
 							</xs:annotation>
 						</xs:element>
 					</xs:choice>
 				</xs:sequence>
 			</xs:extension>
 		</xs:complexContent>
 	</xs:complexType>
 	<xs:element name="SampleFrame" type="SampleFrameType">
 		<xs:annotation>
 			<xs:documentation>An inline description of a sample frame (the source material from which a sample is drawn), i.e. phone book, data base, etc.</xs:documentation>
 		</xs:annotation>
 	</xs:element>
 	<xs:element name="SamplingInformationSchemeName" type="r:NameType">
 		<xs:annotation>
 			<xs:documentation>A name for the sampling information scheme using the NameType structure.</xs:documentation>
 		</xs:annotation>
 	</xs:element>
 	<xs:element name="SamplingInformationGroupReference" type="r:ReferenceType">
 		<xs:annotation>
 			<xs:documentation>Reference to an existing SamplingInformationGroup using the Reference structure. TypeOfObject should be set to SamplingInformationGroup.</xs:documentation>
 		</xs:annotation>
 	</xs:element>
 	<xs:element name="SamplingInformationGroup" type="SamplingInformationGroupType">
 		<xs:annotation>
 			<xs:documentation>A grouping of Sampling Information objects for administrative purposes.</xs:documentation>
 		</xs:annotation>
 	</xs:element>
 	<xs:complexType name="SamplingInformationGroupType">
 		<xs:annotation>
 			<xs:documentation>A grouping of Sampling Information objects for administrative purposes. Contains a group of sampling information objects and/or sampling information groups, which may be hierarchical.</xs:documentation>
 		</xs:annotation>
 		<xs:complexContent>
 			<xs:extension base="r:VersionableType">
 				<xs:sequence>
 					<xs:element ref="TypeOfSamplingInformationGroup" minOccurs="0">
 						<xs:annotation>
 							<xs:documentation>A generic element for specifying a reason for a sampling information group. Note that this element can contain either a term from a controlled vocabulary list or a textual description.</xs:documentation>
 						</xs:annotation>
 					</xs:element>
 					<xs:element ref="SamplingInformationGroupName" minOccurs="0" maxOccurs="unbounded">
 						<xs:annotation>
 							<xs:documentation>A name for the sampling information group. May be expressed in multiple languages. Repeat the element to express names with different content, for example different names for different systems.</xs:documentation>
 						</xs:annotation>
 					</xs:element>
 					<xs:element ref="r:Label" minOccurs="0" maxOccurs="unbounded">
 						<xs:annotation>
 							<xs:documentation>A display label for the sampling information group. Supports multiple language versions of the same content as well as optional formatting of the content. Repeat for labels with different content, for example, labels with differing length limitations.</xs:documentation>
 						</xs:annotation>
 					</xs:element>
 					<xs:element ref="r:Description" minOccurs="0">
 						<xs:annotation>
 							<xs:documentation>Additional textual description of the sampling information group. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
 						</xs:annotation>
 					</xs:element>
 					<xs:element ref="r:UniverseReference" minOccurs="0" maxOccurs="unbounded">
 						<xs:annotation>
 							<xs:documentation>Reference to the universe statement describing the persons or other elements that the sampling information objects refer to, and to which any analytic results refer.</xs:documentation>
 						</xs:annotation>
 					</xs:element>
 					<xs:element ref="r:ConceptReference" minOccurs="0">
 						<xs:annotation>
 							<xs:documentation>Reference to the concept measured by the sampling information objects in this group.</xs:documentation>
 						</xs:annotation>
 					</xs:element>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
 						<xs:element ref="SampleFrameReference">
 							<xs:annotation>
 								<xs:documentation>A sample frame item included in the scheme by reference.</xs:documentation>
 							</xs:annotation>
 						</xs:element>
 						<xs:element ref="SamplingPlanReference">
 							<xs:annotation>
 								<xs:documentation>A sampling plan item included in the scheme by reference.</xs:documentation>
 							</xs:annotation>
 						</xs:element>
 						<xs:element ref="SampleReference">
 							<xs:annotation>
 								<xs:documentation>A sample included in the scheme by reference.</xs:documentation>
 							</xs:annotation>
 						</xs:element>
 						<xs:element ref="SamplingInformationGroupReference">
 							<xs:annotation>
 								<xs:documentation>Inclusion of a SamplingInformationGroup by reference.</xs:documentation>
 							</xs:annotation>
 						</xs:element>
 					</xs:choice>
 				</xs:sequence>
 				<xs:attribute name="isOrdered" type="xs:boolean" default="false">
 					<xs:annotation>
 						<xs:documentation>Indicates that the content of the group is ordered as it appears within the XML structure.</xs:documentation>
 					</xs:annotation>
 				</xs:attribute>
 			</xs:extension>
 		</xs:complexContent>
 	</xs:complexType>
 	<xs:element name="SamplingInformationGroupName" type="r:NameType">
 		<xs:annotation>
 			<xs:documentation>A name for the sampling information group using the Name structure.</xs:documentation>
 		</xs:annotation>
 	</xs:element>
 	<xs:element name="TypeOfSamplingInformationGroup" type="r:CodeValueType">
 		<xs:annotation>
 			<xs:documentation>A generic element for specifying a reason for a sampling information group using the CodeValueType structure.</xs:documentation>
 		</xs:annotation>
 	</xs:element>
	<xs:element name="SampleFrameName" type="r:NameType">
		<xs:annotation>
			<xs:documentation>A name for the SampleFrame using the NameType structure.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="SampleFrameType">
		<xs:annotation>
			<xs:documentation>An inline description of a sample frame (the source material from which a sample is drawn), i.e. phone book, data base, etc. A sample frame is intended to be versioned over time and can be reused by multiple studies.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:VersionableType">
				<xs:sequence>
					<xs:element ref="SampleFrameName" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A name for a sample frame which may be repeated to express differing names for different systems. May be expressed in multiple languages. Repeat the element to express names with different content, for example different names for different systems.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Label" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A full display label for the sample frame, repeatable for different context or applications. Supports multiple language versions of the same content as well as optional formatting of the content. Repeat for labels with different content, for example, labels with differing length limitations.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Full description of the sample frame. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ValidPeriod" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Period for which the current version is valid.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="CustodianReference" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Organization or individual holding the rights to the frame</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="SampleFrameAccess" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Provides full description of access, forms for access, contact, etc.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:UniverseReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A reference to the Universe of this sample frame</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="UnitsOfFrame" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A sample frame may identify multiple units. One unit should be identified as the primary unit. Additional units are listed as secondary.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="FrameLimitations" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Description of general limitations of the frame, including  over/under-coverage and update schedules and procedures.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="AuxiliaryInformation" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Description of information within the frame that could support stratification, including listing of available fields.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ReferencePeriod" minOccurs="0">
						<xs:annotation>
							<xs:documentation>The date/period of reference for this frame</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="UpdateProcedure" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Describes how this frame gets updated.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="SourceFrameReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A reference to a frame that this frame was derived from.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="ValidPeriod" type="r:DateType">
		<xs:annotation>
			<xs:documentation>Period for which the current version of the parent object is valid using the Date structure.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="CustodianReference" type="r:ReferenceType">
		<xs:annotation>
			<xs:documentation>Reference to an existing Organization or Individual using the Reference structure. TypeOfObject should be set to Organization or Individual.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="UnitsOfFrame" type="PopulationSizeType">
		<xs:annotation>
			<xs:documentation>Describes the number and type of units within a sample frame.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="AuxiliaryInformation" type="r:StructuredStringType">
		<xs:annotation>
			<xs:documentation>Description of information within the frame that could support stratification, including listing of available fields.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ReferencePeriod" type="r:DateType">
		<xs:annotation>
			<xs:documentation>The date/period of reference for this frame using the Date structure.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="UpdateProcedure" type="r:StructuredStringType">
		<xs:annotation>
			<xs:documentation>Describes how this frame gets updated.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="SourceFrameReference" type="r:ReferenceType">
		<xs:annotation>
			<xs:documentation>Reference to an existing SourceFrame using the Reference structure. TypeOfObject should be set to SampleFrame.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="SampleFrameAccess" type="a:AccessType">
		<xs:annotation>
			<xs:documentation>Provides full description of access, forms for access, contact, etc.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="SamplingPlan" type="SamplingPlanType">
		<xs:annotation>
			<xs:documentation>An inline description of a sampling plan (how the sample is drawn).</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="SamplingPlanType">
		<xs:annotation>
			<xs:documentation>An inline description of a sampling plan (how the sample is drawn). A sampling plan is intended to be versioned over time and can be reused by multiple studies.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:VersionableType">
				<xs:sequence>
					<xs:element ref="TypeOfSamplingPlan" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A controlled vocabulary covering probability and non-probability sampling methods and modeling approaches. If this is a multi-stage sample the plan at this level should indicate the broadest description of the sampling approaches used in each stage.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="SamplingPlanName" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A name for a sampling plan which may be repeated to express differing names for different systems. May be expressed in multiple languages. Repeat the element to express names with different content, for example different names for different systems.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Label" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A full display label for the sampling plan, repeatable for different context or applications. Supports multiple language versions of the same content as well as optional formatting of the content. Repeat for labels with different content, for example, labels with differing length limitations.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Full description of the sampling plan. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="IntendedTargetPopulation" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A description of the population that the survey is intended to question (i.e. "Likely voters").</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="IntendedSurveyPopulation" minOccurs="0">
						<xs:annotation>
							<xs:documentation>The survey population is the set of elements identified by the frame.  For instance, pre-election polls have "likely voters" as a target population, but the survey is conducted using RDD (usually).  The survey population is households with active land-line telephones, because that's who we can initially identify.  Survey questions help narrow the respondents into the desired set, but then eliminating sampled units increases variance.  It is reusable in the sense that the same survey population will be used each time the named frame is used.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="SplitRationale" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Rationale for dividing the frame at this stage into subsets and using a different sampling technique (e.g., Simple Random Sampling or Probability Proportional to Size) on each subset.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ControlConstructReference" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Generally reference to a single SamplingStage or to a Sequence which orders multiple SamplingStages. TypeOfObject should be any valid member of the group of Control Constructs.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="StratificationRationale" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Describe the purpose for stratifying the sampling process.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="SamplingPlanName" type="r:NameType">
		<xs:annotation>
			<xs:documentation>A name for a sampling plan using NameType.</xs:documentation>
		</xs:annotation>
	</xs:element>
 	<xs:element name="TypeOfSamplingPlan" type="r:CodeValueType">
 		<xs:annotation>
 			<xs:documentation>A controlled vocabulary covering probability and non-probability sampling plans and modeling approaches using CodeValueType.</xs:documentation>
 		</xs:annotation>
 	</xs:element>
	<xs:element name="IntendedTargetPopulation" type="PopulationType">
		<xs:annotation>
			<xs:documentation>A description of the population that the survey is intended to question (i.e. "Likely voters").</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="IntendedSurveyPopulation" type="PopulationType">
		<xs:annotation>
			<xs:documentation>The survey population is the set of elements identified by the frame.  For instance, pre-election polls have "likely voters" as a target population, but the survey is conducted using RDD (usually).  The survey population is households with active land-line telephones, because that's who we can initially identify.  Survey questions help narrow the respondents into the desired set, but then eliminating sampled units increases variance.  It is reusable in the sense that the same survey population will be used each time the named frame is used.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="SplitRationale" type="r:StructuredStringType">
		<xs:annotation>
			<xs:documentation>Splits take a stage and divide the frame at that stage into subsets.  A different sampling technique is applied to each subset.  So, the highest level element after the initial sample description elements is the stage and its frame, then split and subset definitions of the frame within the stage, then sampling technique on each frame subset.  Once a split occurs, then each subset can have stages underneath, and the number of stages under each split subset may differ.  Move this element under SplitCondition.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="SamplingStage" type="SamplingStageType" substitutionGroup="ControlConstruct">
 		<xs:annotation>
			<xs:documentation>A ControlConstruct that provides a sequence order within Sampling Stages expressed as control constructs.</xs:documentation>
 		</xs:annotation>
 	</xs:element>
 	<xs:complexType name="SamplingStageType">
 		<xs:annotation>
			<xs:documentation>A ControlConstruct that provides a sequence order within Sampling Stages expressed as control constructs.</xs:documentation>
 		</xs:annotation>
 		<xs:complexContent>
 			<xs:extension base="ControlConstructType">
 				<xs:sequence>
					<xs:element ref="TypeOfSequence" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Provides the ability to "type" a sequence for classification or processing purposes. Supports the use of an external controlled vocabulary.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ControlConstructReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>References control constructs in the order that they should appear within the instrument.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ConstructSequence" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Describes alternate ordering for different cases using the SpecificSequence structure. If you set the sequence to anything other than order of appearance the only allowable children are QuestionConstruct or Sequence. Contents must be randomizable.</xs:documentation>
						</xs:annotation>
					</xs:element>
 					<xs:element ref="FrameRequirements" minOccurs="0">
 						<xs:annotation>
 							<xs:documentation>Describes the minimum requirements of the frame needed to use this sample stage. For example, if a stratification by age is specified in the stage the sample frame would need to support this stratification.</xs:documentation>
 						</xs:annotation>
 					</xs:element>
 					<xs:element ref="RecommendedSampleFrameReference" minOccurs="0" maxOccurs="unbounded">
 						<xs:annotation>
 							<xs:documentation>Identifies a specific sample frame or frames appropriate for this plan.</xs:documentation>
 						</xs:annotation>
 					</xs:element>
 					<xs:element ref="Stratification" minOccurs="0" maxOccurs="unbounded">
 						<xs:annotation>
							<xs:documentation>A distinct "strata" within a population used to define a group to be sampled within that population, for example an Income Level or Postal Code.</xs:documentation>
 						</xs:annotation>
 					</xs:element>
 					<xs:element ref="SamplingUnitReference" minOccurs="0">
 						<xs:annotation>
 							<xs:documentation>Sampling unit for this stage</xs:documentation>
 						</xs:annotation>
 					</xs:element>
 					<xs:element ref="SelectionProbability" minOccurs="0">
 						<xs:annotation>
 							<xs:documentation>If known and available, provide the selection probability for each sampling unit.  This is one number for equal probability sampling, such as SRS.  For PPS, a description of the size criterion is needed.  For other unequal designs, a description of of how the probabilities are assigned is needed.</xs:documentation>
 						</xs:annotation>
 					</xs:element>
				</xs:sequence>
 			</xs:extension>
 		</xs:complexContent>
 	</xs:complexType>
	<xs:element name="SampleStep" type="SampleStepType" substitutionGroup="ControlConstruct">
		<xs:annotation>
			<xs:documentation>A ControlConstruct that provides a specialized act for generating a sample.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="SampleStepType">
		<xs:annotation>
			<xs:documentation>A ControlConstruct that provides a specialized act for generating a sample.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ControlConstructType">
				<xs:sequence>
					<xs:element ref="ConditionForAcceptance" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A distinct "strata" within a population used to define a group to be sampled within that population, for example an Income Level or Postal Code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:CommandCode" minOccurs="0">
						<xs:annotation>
							<xs:documentation>The Code which contains the value of the variable in programming terms.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="Stratification" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A distinct "strata" within a population used to define a group to be sampled within that population, for example an Income Level or Postal Code.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="FrameRequirements" type="r:StructuredStringType">
		<xs:annotation>
			<xs:documentation>Describes the minimum requirements of the frame needed to use this sample stage. For example, if a stratification by age is specified in the stage the sample frame would need to support this stratification.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="RecommendedSampleFrameReference" type="r:ReferenceType">
		<xs:annotation>
			<xs:documentation>Reference to an existing SampleFrame using the Reference structure. TypeOfObject should be set to SampleFrame.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="Stratification" type="StratificationType">
		<xs:annotation>
			<xs:documentation>A distinct "strata" within a population used to define a group to be sampled within that population, for example an Income Level or Postal Code.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="SelectionProbability" type="r:StructuredStringType">
		<xs:annotation>
			<xs:documentation>If known and available, provide the selection probability for each sampling unit.  This is one number for equal probability sampling, such as SRS.  For PPS, a description of the size criterion is needed.  For other unequal designs, a description of of how the probabilities are assigned is needed.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="StratificationType">
		<xs:annotation>
			<xs:documentation>Describe all stratifications here. Note that each stratified group will be sampled using the same sampling plan. For example stratifying a state by ZIP Code areas in each of 5 mean income quintiles and then doing a random sample of the households in set of ZIP Codes. Allows for oversampling of identified subpopulations. Example: urban/rural, gender, state, marital status. Might be defined at the SamplngScheme level.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="StratificationRationale" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Describe the purpose for stratifying your sample frame prior to sampling.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="AllocationMethod" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Method to determine how the sample should be allocated/distributed (Source: US Census Metadata Standard document)</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="strataNumber" type="xs:nonNegativeInteger" use="required">
			<xs:annotation>
				<xs:documentation>Assign a number to the strata being described</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:element name="StratificationRationale" type="StratificationRationaleType">
		<xs:annotation>
			<xs:documentation>Describe the purpose for stratifying the sample frame prior to sampling.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="AllocationMethod" type="r:StructuredStringType">
		<xs:annotation>
			<xs:documentation>Method to determine how the sample should be allocated/distributed (Source: US Census Metadata Standard document)</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="StratificationRationaleType">
		<xs:annotation>
			<xs:documentation>Describe the purpose for stratifying your sample frame prior to sampling.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="r:Description" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A full description of the purpose for stratifying your sample frame prior to sampling</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="r:UniverseReference" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Reference each sub universe which defines a strata of the population. For example if you are stratifying on gender there would be 2 Universe references, one to Males and one to Females.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!-- DATA CAPTURE DESIGN CONTENT -->
	<xs:element name="DataCaptureDevelopment" type="DataCaptureDevelopmentType">
		<xs:annotation>
			<xs:documentation>DataCaptureDevelopment covers the development planning, process, and outcome for a partial or full data capture object (question, measurement, instrument, or control construct). Development normally included the development of the question wording, possible response domains and their presentation, translation for language or cultural variance in the population, question/measurement order and mode of delivery (instrument). Extensive work is often done for individual questions/measures that may be reused by different data capture instruments with the organization or for topical areas or populations that are difficult to measure.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="DataCaptureDevelopmentType">
		<xs:annotation>
			<xs:documentation>Data capture development covers the development planning, process, and outcome for a partial or full questionnaire. Development normally included the development of the question wording, possible response domains and their presentation, translation for language or cultural variance in the population, and question order. Extensive work is often done for individual questions that may be reused by different questionnaires with the organization or for topical areas or populations that are difficult to measure. In addition to the standard name, label, and description information DataCaptureDevelopment contains structures to capture the development plan, the development implementation, and the results or outcome of the development implementation. DataCaptureDevelopment is a Maintainable object and any Note or OtherMaterial related to one of its objects should be placed within the Note and OtherMaterial section of DataCaptureDevelopment.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:VersionableType">
				<xs:sequence>
					<xs:element ref="DataCaptureDevelopmentName" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A name for the Data Capture Development. May be expressed in multiple languages. Repeat the element to express names with different content, for example different names for different systems.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Label" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A display label for the Data Capture Development. Supports multiple language versions of the same content as well as optional formatting of the content. Repeat for labels with different content, for example, labels with differing length limitations.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A description of the content and purpose of the Data Capture Development. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element ref="DevelopmentPlan">
							<xs:annotation>
								<xs:documentation>Describes the set of development activities that should take place.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="DevelopmentPlanReference">
							<xs:annotation>
								<xs:documentation>Reference to the set of development activities that should take place. TypeOfObject should be DevelopmentPlan.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element ref="DevelopmentImplementation">
							<xs:annotation>
								<xs:documentation>Describes the implementation of a development plan for a specific set of development objects. May provide specific details using Control Construct to order Development Steps.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="DevelopmentImplementationReference">
							<xs:annotation>
								<xs:documentation>Reference to the development implementation of a development plan for a specific set of development objects. May provide specific details using Control Construct to order Development Steps. TypeOfObject should be DevelopmentImplementation.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element ref="DevelopmentResults">
							<xs:annotation>
								<xs:documentation>Separates the capture of development implementation results from the process plan and general activities. Allows for capture of the overall results, details of individual steps, or separate iterations of that step.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="DevelopmentResultsReference">
							<xs:annotation>
								<xs:documentation>Separates the capture of development implementation results from the process plan and general activities. Allows for capture of the overall results, details of individual steps, or separate iterations of that step. TypeOfObject should be DevelopmentResults.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="DataCaptureDevelopmentName" type="r:NameType">
		<xs:annotation>
			<xs:documentation>Name of the Data Capture Development using the DDI Name structure.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DevelopmentObject" type="DevelopmentObjectType">
		<xs:annotation>
			<xs:documentation>Structure a single Question which may contain one or more response domains (i.e., a list of valid category responses where if "Other" is indicated a text response can be used to specify the intent of "Other").</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="DevelopmentObjectType">
		<xs:annotation>
			<xs:documentation>A description of the development objects of a Development Implementation or Development Step. Supports a general description as well as specific references to allowed development objects.</xs:documentation>
		</xs:annotation>
      <xs:sequence>
        <xs:element ref="r:Description" minOccurs="0">
          <xs:annotation>
            <xs:documentation>A description of the development objects that are the intended objects of a Development Plan or specific objects of a Development Step. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:element ref="r:QuestionReference">
            <xs:annotation>
              <xs:documentation>Reference to the Question type that is the target of the development work. TypeOfObject should be QuestionItem, QuestionGrid, or QuestionBlock.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element ref="r:MeasurementReference">
            <xs:annotation>
              <xs:documentation>Reference to the Measurement that is the target of the development work. TypeOfObject should be Measurement.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element ref="InstrumentReference">
            <xs:annotation>
              <xs:documentation>Reference to the Instrument that is the target of the development work. TypeOfObject should be Instrument.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element ref="ControlConstructReference">
            <xs:annotation>
              <xs:documentation>Reference to the ControlConstruct that is the target of the development work. TypeOfObject should reflect the type of ControlConstruct being referenced. Value should be IfThenElse, RepeatUntil, RepeatWhile, Loop, Sequence, ComputationItem, StatementItem, MeasurementConstruct, QuestionConstruct, Split, SplitJoin, SamplingStage, SampleStep, DevelopmentStep.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:choice>
      </xs:sequence>
	</xs:complexType>
	<xs:element name="DevelopmentObjective" type="r:StructuredStringType">
		<xs:annotation>
			<xs:documentation>Describes the objectives of the development work. Supports the use of structured content in multiple languages.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ContactReference" type="r:ReferenceType">
		<xs:annotation>
			<xs:documentation>A reference to an organization and/or individual to contact for further information on this questionnaire development activity. TypeOfObject should be Organization or Individual.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="CostStructure" type="CostStructureType">
		<xs:annotation>
			<xs:documentation>Budget and funding information related to the development work.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DevelopmentPlan" type="DevelopmentPlanType">
		<xs:annotation>
			<xs:documentation>Describes the set activities which should take place.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DevelopmentResults" type="DevelopmentResultsType">
		<xs:annotation>
			<xs:documentation>Separates the capture of development process results from the process plan and organization.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DevelopmentPlanReference" type="r:ReferenceType">
		<xs:annotation>
			<xs:documentation>Reference to the set of development activities that should take place. TypeOfObject should be DevelopmentPlan.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DevelopmentImplementationReference" type="r:ReferenceType">
		<xs:annotation>
			<xs:documentation>Reference to the development implementation of a development plan for a specific set of development objects. May provide specific details using Control Construct to order Development Steps. TypeOfObject should be DevelopmentImplementation.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DevelopmentResultsReference" type="r:ReferenceType">
		<xs:annotation>
			<xs:documentation>Reference to the capture of development process results from the process plan and organization. Allows for capture of the overall results, details of individual steps, or separate iterations of that step. TypeOfObject should be DevelopmentResults.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="CostStructureType">
		<xs:annotation>
			<xs:documentation>Budget and funding information related to the development work.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="r:Budget" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>A description and/or reference to a related document providing budget information for the development activities</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="r:FundingInformation" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Provides information about the agency and grant(s) which fund the development work.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DevelopmentPlanType">
		<xs:annotation>
			<xs:documentation>Provides a name, label and description for the Development Plan and lists the individual development activities which should take place.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:VersionableType">
				<xs:sequence>
					<xs:element ref="DevelopmentPlanName" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A name for the DevelopmentPlan. May be expressed in multiple languages. Repeat the element to express names with different content, for example different names for different systems.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Label" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A display label for the Development Plan. Supports multiple language versions of the same content as well as optional formatting of the content. Repeat for labels with different content, for example, labels with differing length limitations.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A description of the content and purpose of the Development Plan. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="DevelopmentObjective" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Describes the objectives of the development work. Supports the use of structured content in multiple languages.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ContactReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A reference to an organization and/or individual to contact for further information on this questionnaire development activity.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="CostStructure" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Budget and funding information related to the development work.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="DevelopmentActivityReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Reference to one or more Development Activities used by the Development Plan. DevelopmentActivity is a substitution base for a number of types of activities described with appropriate content. TypeOfObject should be ContentReviewActivity, TranslationActivity, or PretestActivity.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="DevelopmentPlanName" type="r:NameType">
		<xs:annotation>
			<xs:documentation>Name of the Development Plan using the DDI Name structure.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DevelopmentActivity" type="DevelopmentActivityType" abstract="true">
		<xs:annotation>
			<xs:documentation>An abstract element serving as the head of a substitution group. May be substituted by any valid object of substitution type DevelopmentActivity.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="DevelopmentActivityType" abstract="true">
		<xs:annotation>
			<xs:documentation>An abstract element serving as the head of a substitution group. May be substituted by an valid object of substitution type DevelopmentActivity. Provides a set of objects available to all members of the stubstitution group. These include a statement of the desired outcome of the development activity, a summary of the process to be followed, recommended staff requirements for each staffing class, a statement of any addition resources (monetary, or other) that are required to complete the activity, and information on the debriefing process.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:VersionableType">
				<xs:sequence>
					<xs:element ref="DevelopmentActivityName" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A name for the Development Activity. May be expressed in multiple languages. Repeat the element to express names with different content, for example different names for different systems.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Label" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A display label for the Development Activity. Supports multiple language versions of the same content as well as optional formatting of the content. Repeat for labels with different content, for example, labels with differing length limitations.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A description of the content and purpose of the Development Activity. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="DesiredOutcome" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Describe the desired outcomes of the development activity. Address why the activity should take place, means of determining successful completion, etc.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ProcessSummary" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Summarize the process the activity should follow to meet desired outcomes.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="RecommendedStaffRequirements" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Specify requirements for type of staffing needed to complete activity. Repeat for each staff class</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="AdditionalRequiredResources" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Describe additional resources required such as funding, staffing, or resource material.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="DebriefingProcess" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Describe the debriefing process. This is especially important for assessing the quality of focus groups, cognitive interviews, etc. Specifies if debriefing is required.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="DevelopmentActivityName" type="r:NameType">
		<xs:annotation>
			<xs:documentation>A name for the Development Activity. May be expressed in multiple languages. Repeat the element to express names with different content, for example different names for different systems.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DesiredOutcome" type="r:StructuredStringType">
		<xs:annotation>
			<xs:documentation>Describe the desired outcomes of the development activity. Address why the activity should take place, means of determining successful completion, etc. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ProcessSummary" type="r:StructuredStringType">
		<xs:annotation>
			<xs:documentation>Summarize the process the activity should follow to meet desired outcomes. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="RecommendedStaffRequirements" type="RecommendedStaffRequirementsType">
		<xs:annotation>
			<xs:documentation>Specify requirements for type of staffing needed to complete activity. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="AdditionalRequiredResources" type="r:StructuredStringType">
		<xs:annotation>
			<xs:documentation>Describe additional resources required such as funding, staffing, or resource material. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DebriefingProcess" type="DebriefingProcessType">
		<xs:annotation>
			<xs:documentation>Describe the debriefing process. This is especially important for assessing the quality of focus groups, cognitive interviews, etc. Specifies if debriefing is required.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="RecommendedStaffRequirementsType">
		<xs:annotation>
			<xs:documentation>Specify requirements for type of staffing needed to complete activity including the class of staff participating in the activity, requirements for those participants, and the recruitment process.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="StaffClass">
				<xs:annotation>
					<xs:documentation>Specify the class of the staff participating in the activity. Supports the use of a controlled vocabulary.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ParticipantRequirements" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Describe any special or specific requirements for participating staff.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="RecruitmentProcess" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Describe the process to be used for staff recruitment in this class.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="StaffClass" type="r:CodeValueType">
		<xs:annotation>
			<xs:documentation>Specify the class of the staff participating in the activity. Supports the use of a controlled vocabulary.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ParticipantRequirements" type="r:StructuredStringType">
		<xs:annotation>
			<xs:documentation>Describe any special or specific requirements for participating staff. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="RecruitmentProcess" type="r:StructuredStringType">
		<xs:annotation>
			<xs:documentation>Describe the process to be used for staff recruitment in this class. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="DebriefingProcessType">
		<xs:annotation>
			<xs:documentation>Describe the debriefing process. Specifies if debriefing is required.</xs:documentation>
		</xs:annotation>		
		<xs:sequence>
			<xs:element ref="r:Description" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A description of the Debriefing Process. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="isRequired" type="xs:boolean" default="false">
			<xs:annotation>
				<xs:documentation>If debriefing is required for this activity set isRequired to "true".</xs:documentation>
			</xs:annotation>
		</xs:attribute>		
	</xs:complexType>
	<xs:element name="ContentReviewActivity" type="ContentReviewActivityType" substitutionGroup="DevelopmentActivity">
		<xs:annotation>
			<xs:documentation>A substitution for DevelopmentActivity which requires no additional information other than the specification of the type of content review taking place for development purposes.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="ContentReviewActivityType">
		<xs:annotation>
			<xs:documentation>A substitution for DevelopmentActivity which requires no additional information other than the specification of the type of content review taking place for development purposes.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="DevelopmentActivityType">
				<xs:sequence>
					<xs:element ref="TypeOfContentReview" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Identifies the specific type of content review not done as part of a Focus Group, Cognitive Expert Review, or Cognitive Interview. Supports the use of a controlled vocabulary which is strongly recommended.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="TypeOfContentReview" type="r:CodeValueType">
		<xs:annotation>
			<xs:documentation>Identifies the specific type of content review. Supports the use of a controlled vocabulary.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="FocusGroupActivity" type="FocusGroupActivityType" substitutionGroup="DevelopmentActivity">
		<xs:annotation>
			<xs:documentation>A substitution for DevelopmentActivity which requires no additional information other than the specification of the type of Focus Group taking place for development purposes.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="FocusGroupActivityType">
		<xs:annotation>
			<xs:documentation>A substitution for DevelopmentActivity which requires no additional information other than the specification of the type of Focus Group taking place for development purposes.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="DevelopmentActivityType">
				<xs:sequence>
					<xs:element ref="TypeOfFocusGroup" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Identifies the specific type of Focus Group. Supports the use of a controlled vocabulary which is strongly recommended.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="TypeOfFocusGroup" type="r:CodeValueType">
		<xs:annotation>
			<xs:documentation>Identifies the specific type of  Focus Group. Supports the use of a controlled vocabulary.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="CognitiveInterviewActivity" type="CognitiveInterviewActivityType" substitutionGroup="DevelopmentActivity">
		<xs:annotation>
			<xs:documentation>A substitution for DevelopmentActivity which requires no additional information other than the specification of the type of content review taking place for development purposes.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="CognitiveInterviewActivityType">
		<xs:annotation>
			<xs:documentation>A substitution for DevelopmentActivity which requires no additional information other than the specification of the type of cognitive interview review taking place for development purposes.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="DevelopmentActivityType">
				<xs:sequence>
					<xs:element ref="TypeOfCognitiveInterview" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Identifies the specific type of Cognitive Interview. Supports the use of a controlled vocabulary which is strongly recommended.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="TypeOfCognitiveInterview" type="r:CodeValueType">
		<xs:annotation>
			<xs:documentation>Identifies the specific type of Cognitive Interview. Supports the use of a controlled vocabulary.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="CognitiveExpertReviewActivity" type="CognitiveExpertReviewActivityType" substitutionGroup="DevelopmentActivity">
		<xs:annotation>
			<xs:documentation>A substitution for DevelopmentActivity which requires no additional information other than the specification of the type of cognitive expert review taking place for development purposes.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="CognitiveExpertReviewActivityType">
		<xs:annotation>
			<xs:documentation>A substitution for DevelopmentActivity which requires no additional information other than the specification of the type of cognitive expert review taking place for development purposes.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="DevelopmentActivityType">
				<xs:sequence>
					<xs:element ref="TypeOfCognitiveExpertReview" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Identifies the specific type of Cognitive Expert Interview. Supports the use of a controlled vocabulary which is strongly recommended.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="TypeOfCognitiveExpertReview" type="r:CodeValueType">
		<xs:annotation>
			<xs:documentation>Identifies the specific type of content review such as Focus Group, Cognitive Review, etc. Supports the use of a controlled vocabulary.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="TranslationActivity" type="TranslationActivityType" substitutionGroup="DevelopmentActivity">
		<xs:annotation>
			<xs:documentation>A substitution for DevelopmentActivity which describes the specifics of translation.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="TranslationActivityType">
		<xs:annotation>
			<xs:documentation>A substitution for DevelopmentActivity which describes the specifics of translation, looking at source and target languages, aids available for translation, and translator requirements regarding language ability and method of translation.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="DevelopmentActivityType">
				<xs:sequence>
					<xs:element ref="TranslationMethod" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Describes the method of translation required through use of a controlled vocabulary and description. Repeat for multiple methods.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="TranslationRequirements" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Provides a detailed description of the requirements for an acceptable translation and indicate if the translation should be oral and/or written.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="TranslationAid" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Describes available aids for translation typed by a controlled vocabulary and supporting a description and resource identification where appropriate. This may include items such as the availability of an interpreter, key word material, etc.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="TranslatorRequirements" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Describes both minimum and preferred language abilities sought for the translation work as a set of source and target language requirements. Details requirements for the translator in terms of language ability for reading, speaking, and writing the source and target languages. Repeat for each language pair sought.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="translationSourceLanguage" type="r:LanguageList">
					<xs:annotation>
						<xs:documentation>List the language or language codes in a space delimited array. The language original may or may not be provided in this bundle of language specific strings.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="translationTargetLanguage" type="r:LanguageList">
					<xs:annotation>
						<xs:documentation>List the language or language codes in a space delimited array.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="TranslationMethod" type="TranslationMethodType">
		<xs:annotation>
			<xs:documentation>Describes the method of translation required through use of a controlled vocabulary and description. Repeat for multiple methods.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="TranslationMethodType">
		<xs:annotation>
			<xs:documentation>Describes both minimum and preferred language abilities sought for the translation work as a set of source and target language requirements.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="TypeOfTranslationMethod" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Specifies the type of translation method used. Supports the use of a controlled vocabulary.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="r:Description" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Description of the translation method. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="TranslationAid" type="TranslationAidType">
		<xs:annotation>
			<xs:documentation>Describes available aids for translation typed by a controlled vocabulary and supporting a description and resource identification where appropriate. This may include items such as the availability of an interpreter, key word material, etc.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="TranslationAidType">
		<xs:annotation>
			<xs:documentation>Describes available aids for translation typed by a controlled vocabulary and supporting a description and resource identification where appropriate. This may include items such as the availability of an interpreter, key word material, etc.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="TypeOfTranslationAid" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Specifies the type of translation aid available. Supports the use of a controlled vocabulary.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="r:Description" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Description of the translation aid. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="TranslationAidResource" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Provides a reference to the translation aid resource using the structure of OtherMaterial.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="TranslationAidResource" type="TranslationAidResourceType">
		<xs:annotation>
			<xs:documentation>Provides a reference to the translation aid resource using the structure of OtherMaterial.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="TranslationAidResourceType">
		<xs:annotation>
			<xs:documentation>Provides a reference to the translation aid resource using the structure of OtherMaterial.</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element ref="r:OtherMaterial">
				<xs:annotation>
					<xs:documentation>Description and link to the complexType using the DDI Other Material structure.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="r:OtherMaterialReference">
				<xs:annotation>
					<xs:documentation>Use of a previously described complexType by Reference. TypeOfObject will be OtherMaterial.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	<xs:element name="TypeOfTranslationMethod" type="r:CodeValueType">
		<xs:annotation>
			<xs:documentation>Specifies the type of translation method used. Supports the use of a controlled vocabulary.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="TypeOfTranslationAid" type="r:CodeValueType">
		<xs:annotation>
			<xs:documentation>Specifies the type of translation aid used. Supports the use of a controlled vocabulary.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="TypeOfAdditionalData" type="r:CodeValueType">
		<xs:annotation>
			<xs:documentation>Specifies the type of additional data used. Supports the use of a controlled vocabulary.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="TranslationRequirements" type="TranslationRequirementsType">
		<xs:annotation>
			<xs:documentation>Provides a detailed description of the requirements for an acceptable translation and indicate if the translation should be oral and/or written.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="TranslationRequirementsType">
		<xs:annotation>
			<xs:documentation>Provides a detailed description of the requirements for an acceptable translation and indicate if the translation should be oral and/or written. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="r:Description" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A description of the Translation Requirements. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="isOral" type="xs:boolean">
			<xs:annotation>
				<xs:documentation>Indicates if the translation is an oral translation.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="isWritten" type="xs:boolean">
			<xs:annotation>
				<xs:documentation>Indicates if the translation is a written translation.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:element name="TranslatorRequirements" type="TranslatorRequirementsType">
		<xs:annotation>
			<xs:documentation>Details requirements for the translator in terms of language ability for reading, speaking, and writing the source and target languages.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="TranslatorRequirementsType">
		<xs:annotation>
			<xs:documentation>Describes both minimum and preferred language abilities sought for the translation work as a set of source and target language requirements.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="TranslationSourceLanguageAbility" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Describes both minimum and preferred language abilities sought for the translation work for the source language.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="TranslationTargetLanguageAbility" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Describes both minimum and preferred language abilities sought for the translation work for the target language.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="TranslationSourceLanguageAbility" type="LanguageAbilitySoughtType">
		<xs:annotation>
			<xs:documentation>Identifies the language and the individuals ability to read, write, and speak the designated language using a controlled vocabulary as minimum and preferred requirements.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="TranslationTargetLanguageAbility" type="LanguageAbilitySoughtType">
		<xs:annotation>
			<xs:documentation>Identifies the language and the individuals ability to read, write, and speak the designated language using a controlled vocabulary as minimum and preferred requirements.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="MinimumLanguageAbility" type="a:IndividualLanguageType">
		<xs:annotation>
			<xs:documentation>Identifies the language and the individuals ability to read, write, and speak the designated language using a controlled vocabulary.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="PreferredLanguageAbility" type="a:IndividualLanguageType">
		<xs:annotation>
			<xs:documentation>Identifies the language and the individuals ability to read, write, and speak the designated language using a controlled vocabulary.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="LanguageAbilitySoughtType">
		<xs:annotation>
			<xs:documentation>Describes both minimum and preferred language abilities sought for the translation work as a set of source and target language requirements.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="MinimumLanguageAbility" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Identifies the language and the individuals ability to read, write, and speak the designated language using a controlled vocabulary.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="PreferredLanguageAbility" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Identifies the language and the individuals ability to read, write, and speak the designated language using a controlled vocabulary.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="PretestActivity" type="PretestActivityType" substitutionGroup="DevelopmentActivity">
		<xs:annotation>
			<xs:documentation>Specifies the details for performing a pretest of a set of questions or questionnaire.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="PretestActivityType">
		<xs:annotation>
			<xs:documentation>A substitution for DevelopmentActivity which specifies the details for performing a pretest of a set of questions or questionnaire. Includes reference to the Sample Frame and Sample Method for the pretest, and the data collection process in terms of method of administration, mode of collection, delivery method, and identification of any additional data collected.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="DevelopmentActivityType">
				<xs:sequence>
					<xs:element ref="SampleFrameReference" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A reference to the Sample Frame used in selecting the the sample from the parent population.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="SamplingPlanReference" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Reference to the sampling plan used with the sample frame.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="PretestAdministration" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Description of the method and mode of data collection in administering the pretest. Notes any additional data collected in the administration of the pretest.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="PretestAdministration" type="PretestAdministrationType">
		<xs:annotation>
			<xs:documentation>Description of the method and mode of data collection in administering the pretest. Notes any additional data collected in the administration of the pretest.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="PretestAdministrationType">
		<xs:annotation>
			<xs:documentation>Description of the method and mode of data collection in administering the pretest. Notes any additional data collected in the administration of the pretest.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="MethodOfAdministration" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Describes the method of pretest administration using a controlled vocabulary and description.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ModeOfPretestCollection" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Describes the mode of collection used in the pretest. Repeat of multiple modes of collection were used. Indicate the primary mode using isPrimary attribute if applicable.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="AdditionalDataCollection" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Description of the method and mode of data collection in administering the pretest. Notes any additional data collected in the administration of the pretest.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="ModeOfPretestCollection" type="ModeOfPretestCollectionType">
		<xs:annotation>
			<xs:documentation>Describes the mode of pretest data collection using a controlled vocabulary and description.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="ModeOfPretestCollectionType">
		<xs:annotation>
			<xs:documentation>Describes available aids for translation typed by a controlled vocabulary and a description.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="TypeOfPretestCollectionMode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Specifies the type of data collection mode used (i.e. interview, self-completed form, observation). Supports the use of a controlled vocabulary.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="r:Description" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Description of mode of data collection for the pretest. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="MethodOfDelivery" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Method of delivery for the pretest mode (i.e., mail, hand-delivery, etc.). Supports the use of a controlled vocabulary.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="isPrimary" type="xs:boolean">
			<xs:annotation>
				<xs:documentation>A value of true indicates that this is the primary mode of data collection.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="isAudioFormatAvailable" type="xs:boolean">
			<xs:annotation>
				<xs:documentation>A value of true indicates that an audio format of the question text is available.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="isRecordedInterview" type="xs:boolean">
			<xs:annotation>
				<xs:documentation>A value of true indicates that the interview is recorded.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="MethodOfAdministrationType">
		<xs:annotation>
			<xs:documentation>Describes the method of pretest administration using a controlled vocabulary and description.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="TypeOfAdministrationMethod" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Specifies the type of administration method  used. Supports the use of a controlled vocabulary.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="r:Description" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Description of the administration method. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="TypeOfAdministrationMethod" type="r:CodeValueType">
		<xs:annotation>
			<xs:documentation>Specifies the type of administration method  used. Supports the use of a controlled vocabulary.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="TypeOfPretestCollectionMode" type="r:CodeValueType">
		<xs:annotation>
			<xs:documentation>Specifies the type of data collection mode used for the pretest. Supports the use of a controlled vocabulary.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="MethodOfDelivery" type="r:CodeValueType">
		<xs:annotation>
			<xs:documentation>Specifies the type of delivery method used to distribute the pretest form. Supports the use of a controlled vocabulary.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="MethodOfAdministration" type="MethodOfAdministrationType">
		<xs:annotation>
			<xs:documentation>Describes the method of pretest administration using a controlled vocabulary and description.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="AdditionalDataCollection" type="AdditionalDataCollectionType">
		<xs:annotation>
			<xs:documentation>Description of the method and mode of data collection in administering the pretest. Notes any additional data collected in the administration of the pretest.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="AdditionalDataCollectionType">
		<xs:annotation>
			<xs:documentation>Description of the method and mode of data collection in administering the pretest. Notes any additional data collected in the administration of the pretest.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="TypeOfAdditionalData" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Specifies type of additional data collected. Supports the use of a controlled vocabulary.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="r:Description" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Description of the additional data collected. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DevelopmentActivitySchemeType">
		<xs:annotation>
			<xs:documentation>A set of Development Activities maintained by an agency, and used in defining the development of a data capture object. In addition to the standard name, label, and description allows for the inclusion of an existing DevelopmentActivityScheme by reference and descriptions of DevelopmentActivity and DevelopmentActivityGroup either in-line or by reference.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:MaintainableType">
				<xs:sequence>
					<xs:element ref="DevelopmentActivitySchemeName" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A name for the DevelopmentActivityScheme. May be expressed in multiple languages. Repeat the element to express names with different content, for example different names for different systems.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Label" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A display label for the DevelopmentActivityScheme. Supports multiple language versions of the same content as well as optional formatting of the content. Repeat for labels with different content, for example, labels with differing length limitations.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A description of the DevelopmentActivityScheme. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:DevelopmentActivitySchemeReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Reference to an existing DevelopmentActivityScheme for inclusion.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element ref="DevelopmentActivity">
							<xs:annotation>
								<xs:documentation>Extensible structure for development activity elements used in describing the development of a questionnaire.: ContentReviewActivity, TranslationActivity, and PretestActivity.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="DevelopmentActivityReference">
							<xs:annotation>
								<xs:documentation>Reference to an existing DevelopmentActivity for inclusion in the scheme. TypeOfObject should be ContentReviewActivity, TranslationActivity, or PretestActivity.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element ref="DevelopmentActivityGroup">
							<xs:annotation>
								<xs:documentation>A description of a group of DevelopmentActivity for administrative or conceptual purposes.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="DevelopmentActivityGroupReference">
							<xs:annotation>
								<xs:documentation>A Processing Instruction Group included in the scheme by reference.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="DevelopmentActivitySchemeName" type="r:NameType">
		<xs:annotation>
			<xs:documentation>Name of the Development Activity Scheme using the DDI Name structure.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DevelopmentActivityReference" type="r:ReferenceType">
		<xs:annotation>
			<xs:documentation>Reference to an existing DevelopmentActivity for inclusion in the scheme. TypeOfObject should be set to CognitiveInterviewActivity, CognitiveExpertReviewActivity, ContentReviewActivity, FocusGroupActivity, TranslationActivity, or PretestActivity.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DevelopmentActivityGroupReference" type="r:ReferenceType">
		<xs:annotation>
			<xs:documentation>Reference to an existing DevelopmentActivityGroup using the Reference structure. TypeOfObject should be set to DevelopmentActivityGroup.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DevelopmentActivityGroup" type="DevelopmentActivityGroupType">
		<xs:annotation>
			<xs:documentation>Describes a group of Development Activities for administrative or conceptual purposes, which may be hierarchical.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="DevelopmentActivityGroupType">
		<xs:annotation>
			<xs:documentation>Describes a group of Development Activities for administrative or conceptual purposes, which may be hierarchical. In addition to the standard name, label, and description contains references to included Development Activities, and other DevelopmentActivityGroups.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:VersionableType">
				<xs:sequence>
					<xs:element ref="TypeOfDevelopmentActivityGroup" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A generic element for specifying a reason for a Development Activities Group. Note that this element can contain either a term from a controlled vocabulary list or a textual description.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="DevelopmentActivityGroupName" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A name for the DevelopmentActivityGroup. May be expressed in multiple languages. Repeat the element to express names with different content, for example different names for different systems.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Label" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A display label for the DevelopmentActivityGroup. Supports multiple language versions of the same content as well as optional formatting of the content. Repeat for labels with different content, for example, labels with differing length limitations.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A description of the DevelopmentActivityGroup. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:UniverseReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Reference to the universe statement describing the persons or other objects to which the contents of this group pertain.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:ConceptReference" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Reference to the concept expressed by the objects in this group.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Subject" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>If subjects are listed for this group, it is strongly recommended that the subjects listed also be found in the TopicalCoverage element for the parent packaging element when this group is included directly or by reference in a module containing a coverage element. Use of subject at the group level allows for associating objects as a type of subject based group or to identify subject characteristics of a reusable group of objects.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Keyword" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>If keywords are listed for this group, it is strongly recommended that the keywords listed also be found in the TopicalCoverage element for the parent packaging element when this group is included directly or by reference in a module containing a coverage element. Use of keyword at the group level allows for associating objects as a type of keyword based group or to identify keyword characteristics of a reusable group of objects.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element ref="DevelopmentActivityReference">
							<xs:annotation>
								<xs:documentation>Reference to a constituent DevelopmentActivity for inclusion in the group. TypeOfObject should be ContentReviewActivity, TranslationActivity, or PretestActivity.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element ref="DevelopmentActivityGroupReference">
							<xs:annotation>
								<xs:documentation>Reference to constituent Development Activity group. This allows for nesting of processing instruction groups. TypeOfObject should be DevelopmentActivityGroup.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
				</xs:sequence>
				<xs:attribute name="isOrdered" type="xs:boolean" default="false">
					<xs:annotation>
						<xs:documentation>If set to "true" indicates that the content of the group is ordered as it appears within the XML structure.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="DevelopmentActivityGroupName" type="r:NameType">
		<xs:annotation>
			<xs:documentation>Name of the Development Activity Group using the DDI Name structure.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="TypeOfDevelopmentActivityGroup" type="r:CodeValueType">
		<xs:annotation>
			<xs:documentation>A brief textual description of the type of group created to associate a number of Development Activities. Supports the use of an external controlled vocabulary.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="DevelopmentResultsType">
		<xs:annotation>
			<xs:documentation>Separates the capture of development implementation results from the process plan and general activities. Allows for capture of the overall results, details of individual steps, or separate iterations of that step.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:VersionableType">
				<xs:sequence>
					<xs:element ref="DevelopmentResultsName" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A name for the DevelopmentResults. May be expressed in multiple languages. Repeat the element to express names with different content, for example different names for different systems.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Label" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A display label for the Development Results. Supports multiple language versions of the same content as well as optional formatting of the content. Repeat for labels with different content, for example, labels with differing length limitations.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A description of the overall Development Results. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="DevelopmentImplementationReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>References the Development Implementation which the results refer to. TypeOfObject should be DevelopmentImplementation</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ResultsDate" minOccurs="0">
						<xs:annotation>
							<xs:documentation>The date or date range of obtaining results from the development work.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ResultDetail" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Details of specific results of the development plan and process. May refer to specific development activities or DevelopmentSteps within a DevelopmentProcess.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="DevelopmentResultsName" type="r:NameType">
		<xs:annotation>
			<xs:documentation>A name for the DevelopmentResults. May be expressed in multiple languages. Repeat the element to express names with different content, for example different names for different systems.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ResultsDate" type="r:DateType">
		<xs:annotation>
			<xs:documentation>The date or date range of obtaining results from the development work.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ResultDetail" type="ResultDetailType">
		<xs:annotation>
			<xs:documentation>Details of specific results of the development plan and process. May refer to specific development activities or DevelopmentSteps within a DevelopmentProcess.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="ResultDetailType">
		<xs:annotation>
			<xs:documentation>Details of specific results of the development plan and process. May refer to specific development activities or DevelopmentSteps within a DevelopmentProcess.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="TypeOfResult" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Identifies the specific type of result. Supports the use of an external controlled vocabulary.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="r:Description" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A description of the Results Detail. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ResultsDate" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The date or date range of obtaining results from the development work.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="RequirementsAssessment" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Description of whether specific requirements for the activities providing these results were met.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="TypeOfResult" type="r:CodeValueType">
		<xs:annotation>
			<xs:documentation>Identifies the specific type of result. Supports the use of an external controlled vocabulary.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="RequirementsAssessment" type="RequirementsAssessmentType">
		<xs:annotation>
			<xs:documentation>Description of whether specific requirements for the activities providing these results were met.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="RequirementsAssessmentType">
		<xs:annotation>
			<xs:documentation>Description of whether specific requirements for the activities providing these results were met.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="TypeOfRequirementsAssessment" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Identifies the type of requirement being assessed such as staffing, funding, source materials, etc. Supports the use of an external controlled vocabulary.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="r:Description" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A description of the Requirements Assessment. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="isSatisfied" type="xs:boolean">
			<xs:annotation>
				<xs:documentation>A boolean statement of whether the requirement was satisfied or not. A value of "true" indicates that the minimum requirement was satisfied. Note any specific information in the Description.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:element name="TypeOfRequirementsAssessment" type="r:CodeValueType">
		<xs:annotation>
			<xs:documentation>Identifies the specific type of result. Supports the use of an external controlled vocabulary.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DevelopmentImplementation" type="DevelopmentImplementationType">
		<xs:annotation>
			<xs:documentation>Provides the order of process steps in development of the questionnaire including references to previously specified development activities as well as information on the persons and organizations involved in the process, the objects under development and the results of development activities. Note that the structure allows for a simple summary of the implementation work or can provide details using the DevelopmentStep and other control constructs to describe the organization of the implementation.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="DevelopmentImplementationType">
		<xs:annotation>
			<xs:documentation>Provides a name, label and description for the Development Implementation and lists the individual development activities which should take place. Note that the structure allows for a simple summary of the implementation work or can provide details using the DevelopmentStep and other control constructs to describe the organization of the implementation.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:VersionableType">
				<xs:sequence>
					<xs:element ref="DevelopmentImplementationName" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A name for the DevelopmentImplementation. May be expressed in multiple languages. Repeat the element to express names with different content, for example different names for different systems.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Label" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A display label for the Development Implementation. Supports multiple language versions of the same content as well as optional formatting of the content. Repeat for labels with different content, for example, labels with differing length limitations.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A description of the overall Development Implementation. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="DevelopmentPlanReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>References the Development Plan which the results refer to.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="DevelopmentActivityReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Reference to one or more Development Activities used by the Development Implementation. DevelopmentActivity is a substitution base for a number of types of activities described with appropriate content. TypeOfObject should be ContentReviewActivity, TranslationActivity, or PretestActivity.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="DevelopmentObject" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Describes the object of the development. May reference a specific object instrument, question, measurement, or control construct to.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ControlConstructReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A set of DevelopmentSteps (control construct sub-type) that detail the implementation. May be organized using other control constructs to define sequencing, flow logic, sub-testing, etc. TypeOfObject should be any sub-type of a control construct.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="DevelopmentImplementationName" type="r:NameType">
		<xs:annotation>
			<xs:documentation>A name for the DevelopmentImplementation. May be expressed in multiple languages. Repeat the element to express names with different content, for example different names for different systems.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DevelopmentStep" type="DevelopmentStepType" substitutionGroup="ControlConstruct">
		<xs:annotation>
			<xs:documentation>A member of the ControlConstruct substitution group. Describes a Development Step implementing a Development Activity directed at a specific development object. Defines prerequisites, condition for acceptance, and activity date and and agent performing the step.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="DevelopmentStepType">
		<xs:annotation>
			<xs:documentation>A member of the ControlConstruct substitution group. Describes a Development Step implementing a Development Activity directed at a specific development object. Defines prerequisites, condition for acceptance, and activity date and and agent performing the step. Use ExternalAid to identify external resources used by the DevelopmentStep</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ControlConstructType">
				<xs:sequence>
					<xs:element ref="DevelopmentObject" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Describes the object of the development. May reference a specific object instrument, question, measurement, or control construct to.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="DevelopmentActivityReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Reference to one or more Development Activities used by the Development Process Step. DevelopmentActivity is a substitution base for a number of types of activities described with appropriate content. TypeOfObject should be ContentReviewActivity, TranslationActivity, or PretestActivity.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ResponsibleAgencyReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Reference to an Organization or Individual responsible for this step. TypeOfObject should be any sub-type of Agency.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="Prerequisite" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A description of the overall prerequisites for completing this Development Processing Step. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ConditionForAcceptance" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The conditions under which the output of the Development Process Step is accepted.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ActivityDate" minOccurs="0">
						<xs:annotation>
							<xs:documentation>The date or date range of activity in this step.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="ResponsibleAgencyReference" type="r:ReferenceType">
		<xs:annotation>
			<xs:documentation>Reference to an Organization or Individual responsible for this step. TypeOfObject should be Organization or Individual.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ActivityDate" type="r:DateType">
		<xs:annotation>
			<xs:documentation>The date or date range of activity in this step.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="Prerequisite" type="r:StructuredStringType">
		<xs:annotation>
			<xs:documentation>A description of the overall prerequisites for completing this Development Processing Step. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ConditionForAcceptance" type="r:StructuredStringType">
		<xs:annotation>
			<xs:documentation>The conditions under which the output of the step is accepted. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ResourceUsed" type="ResourceUsedType">
		<xs:annotation>
			<xs:documentation>Existing resources used in the process step.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="ResourceUsedType">
		<xs:annotation>
			<xs:documentation>Provides a name, label and description for the Development Process and lists the individual development activities which should take place.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="TypeOfResource" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Type of resource used. Supports the use of an external controlled vocabulary.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="r:Description" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A description of the Resource. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ResourceObjectReference" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to the resource object used by this development step. If it is an external object create a description as OtherMaterial and reference the OtherMaterial. Use the attribute "objectLanguage" to specify any language preference. Repeat for multiple development objects. TypeOfObject should relate to the object referenced.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ResourceUsage" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The use of the resource within the DevelopmentProcessingStep. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="TypeOfResource" type="r:CodeValueType">
		<xs:annotation>
			<xs:documentation>Identifies the specific type of resource used. Supports the use of an external controlled vocabulary.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ResourceObjectReference" type="r:ReferenceType">
		<xs:annotation>
			<xs:documentation>Reference to the resource object used by this development step. If it is an external object create a description as OtherMaterial and reference the OtherMaterial. Use the attribute "objectLanguage" to specify any language preference. Repeat for multiple development objects. TypeOfObject should be set to any Identifiable, Versionable or Maintainable object.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ResourceUsage" type="r:StructuredStringType">
		<xs:annotation>
			<xs:documentation>The use of the resource within the DevelopmentProcessingStep. Supports multiple language versions of the same content as well as optional formatting of the content.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<!-- end of DataCaptureDevelopment CONTENT -->
	<xs:element name="Split" type="SplitType" substitutionGroup="ControlConstruct">
		<xs:annotation>
			<xs:documentation>A member of the ControlConstruct substitution group. The components of a Split consists of a number of process steps to be executed concurrently with partial synchronization. Split completes as soon as all of its component process steps have been scheduled for execution.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="SplitType">
		<xs:annotation>
			<xs:documentation>A member of the ControlConstruct substitution group. The components of a Split consists of a number of process steps to be executed concurrently with partial synchronization. Split completes as soon as all of its component process steps have been scheduled for execution.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ControlConstructType">
				<xs:sequence>
					<xs:element ref="TypeOfSequence" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Provides the ability to "type" a spit for classification or processing purposes. Supports the use of an external controlled vocabulary.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ControlConstructReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>References control constructs that can be executed concurrently.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="SplitJoin" type="SplitJoinType" substitutionGroup="ControlConstruct">
		<xs:annotation>
			<xs:documentation>A member of the ControlConstruct substitution group. The components of a SplitJoin consists of a number of process steps to be executed concurrently with partial synchronization. SplitJoin consists of process steps that are executed concurrently (execution with barrier synchronization). That is, SplitJoin completes when all of its components processes have completed. Supports parallel processing that requires completion of all included process steps to exit.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="SplitJoinType">
		<xs:annotation>
			<xs:documentation>A member of the ControlConstruct substitution group. The components of a SplitJoin consists of a number of process steps to be executed concurrently with partial synchronization. SplitJoin consists of process steps that are executed concurrently (execution with barrier synchronization). That is, SplitJoin completes when all of its components processes have completed. Supports parallel processing that requires completion of all included process steps to exit.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ControlConstructType">
				<xs:sequence>
					<xs:element ref="TypeOfSequence" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Provides the ability to "type" a split for classification or processing purposes. Supports the use of an external controlled vocabulary.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ControlConstructReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>References control constructs that can be executed concurrently.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:element name="Sample" type="SampleType">
		<xs:annotation>
			<xs:documentation>Describes a sample created by the implementation of a sample plan.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="SampleType">
		<xs:annotation>
			<xs:documentation>Describes a sample created by the implementation of a sample plan.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="r:VersionableType">
				<xs:sequence>
					<xs:element ref="TypeOfSample" minOccurs="0">
						<xs:annotation>
							<xs:documentation>A generic means of classifying a SamplingProcedure. Supports the use of an external controlled vocabulary.</xs:documentation>
						</xs:annotation>
					</xs:element>
 					<xs:element ref="SampleName" minOccurs="0" maxOccurs="unbounded">
 						<xs:annotation>
 							<xs:documentation>A name for the sample. May be expressed in multiple languages. Repeat the element to express names with different content, for example different names for different systems.</xs:documentation>
 						</xs:annotation>
 					</xs:element>
 					<xs:element ref="r:Label" minOccurs="0" maxOccurs="unbounded">
 						<xs:annotation>
 							<xs:documentation>A display label for the sample. Supports multiple language versions of the same content as well as optional formatting of the content. Repeat for labels with different content, for example, labels with differing length limitations.</xs:documentation>
 						</xs:annotation>
 					</xs:element>
					<xs:element ref="r:Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Full description of the sample. Supports structured content and multiple language content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="PopulationOfConcern" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Describe the population being sampled through a combination of textual description and reference to a structured Universe.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="OverallTargetSampleSize" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The target value of the sample size for the primary and any secondary or sub-population.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="OverallSampleSize" minOccurs="0">
						<xs:annotation>
							<xs:documentation>The size of the overall sample actually used.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ApplicationDetails" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Provides sample stage level details where needed. Repeat for individual stages or sub-stages.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="DateOfSample" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Date the sample was taken. May be expressed as a single date or range. If the sample was created using multiple extractions at different dates, repeat for each date.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="SampleLocationReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Description of general limitations of the frame, including  over/under-coverage and update schedules and procedures.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="SamplingPlanImplementedReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A reference to the SamplingPlan implemented to creating the sample. Target object should be SamplingPlan</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="SampleFrameUsedReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A reference to the SampleFrame used for creating the sample. Target object should be SampleFrame</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ComponentSampleReference" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A reference to a previously created sample that was used as a component of the current sample. Target object should be Sample.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="SampleName" type="r:NameType">
		<xs:annotation>
			<xs:documentation>A name for the Sample using the NameType structure.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="TypeOfSample" type="r:CodeValueType">
		<xs:annotation>
			<xs:documentation>A brief textual description or classification of the type of sample used. Supports the use of an external controlled vocabulary. The DDI Alliance has provided a controlled vocabulary (SamplingProcedure) to support this element at http://www.ddialliance.org/controlled-vocabularies.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="SampleLocationReference" type="r:ReferenceType">
		<xs:annotation>
			<xs:documentation>A reference to a description of the sample and its location using OtherMaterialType. TypeOfObject should be set to OtherMaterial.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="SamplingPlanImplementedReference" type="r:ReferenceType">
		<xs:annotation>
			<xs:documentation>A reference to the SamplingPlan implemented to creating the sample. TypeOfObject should be set to SamplingPlan</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="SampleFrameUsedReference" type="r:ReferenceType">
		<xs:annotation>
			<xs:documentation>A reference to the SampleFrame used for creating the sample. TypeOfObject should be set to SampleFrame</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="SampleReference" type="r:ReferenceType">
		<xs:annotation>
			<xs:documentation>A reference to a sample. TypeOfObject should be set to Sample.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ComponentSampleReference" type="r:ReferenceType">
		<xs:annotation>
			<xs:documentation>A reference to a previously created sample that was used as a component of the current sample. TypeOfObject should be set to Sample.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="BasedOnSampleReference" type="r:ReferenceType">
		<xs:annotation>
			<xs:documentation>The sample that was the basis for the weighting. TypeOfObject should be set to Sample.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="SamplingUnitReference" type="r:ReferenceType">
 		<xs:annotation>
 			<xs:documentation>Reference to a unit type describing the sample's. TypeOfObject should be set to UnitType.</xs:documentation>
 		</xs:annotation>
 	</xs:element>
</xs:schema>
