name: Build release

on:
  push:
    branches:
      - 'v3-main'
    paths-ignore:
      - 'logo/**'
      - 'docs/**'
      - 'CHANGELOG.md'
      - 'README**.md'
      - 'Dockerfile'
      - '.github/**'

jobs:

  check-version:
    runs-on: ubuntu-latest
    outputs:
      release-version: ${{ steps.version-step.outputs.version }}
    steps:
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Checkout Eno repo
        uses: actions/checkout@v4

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Get Eno Version
        id: version-step
        run: |
          ./gradlew # (load the gradle wrapper, required for the get version step)
          echo "version=$(./gradlew printVersion --console=plain -q)" >> $GITHUB_OUTPUT

      - name: Print Eno Version
        run: echo ${{ steps.version-step.outputs.version }}

      - uses: mukunku/tag-exists-action@v1.6.0
        name: Check tag existence
        id: check-tag-exists
        with:
          tag: ${{ steps.version-step.outputs.version }}

      - name: Tag verification
        id: check-tag
        run: |
          if [[ "${{ steps.check-tag-exists.outputs.exists }}" == "true" ]]; then
            echo "Nothing to tag/release, the tag ${{ steps.version-step.outputs.version }} already exists"
            exit 1
          fi

          if ! [[ "${{ steps.version-step.outputs.version }}" =~ ^[0-9]+.[0-9]+.[0-9]+$ ]]; then
            echo "Nothing to tag/release, the tag ${{ steps.version-step.outputs.version }} is not in correct format X.Y.Z"
            exit 1
          fi

  sonar:
    name: Sonar analysis
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_HOST_URL: "https://sonarcloud.io"
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew clean build sonar -Dsonar.projectKey=InseeFr_Eno -Dsonar.organization=inseefr

  build-sources:
    needs: sonar
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - uses: actions/checkout@v4
      - name: Build Eno modules
        run: |
          ./gradlew build -x test
          mv ./eno-ws/build/libs/*.jar ./eno-ws/build/libs/eno-ws.jar

      - name: Upload Eno-WS jar
        uses: actions/upload-artifact@v4
        with:
          name: eno-ws-jar
          path: ./eno-ws/build/libs/eno-ws.jar

  create-release:
    needs: [ check-version, build-sources ]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get previous final release tag
        id: previousTag
        run: echo "previousTag=$(git --no-pager tag --sort=creatordate --merged ${{ github.ref_name }} | grep "^[3-9]\.[0-9]+\.[0-9]+(-hotfix\.\d+)?$" | tail -1)" >> $GITHUB_OUTPUT
        # Note: the regex works for single digit major version, to be updated if the version goes 10.0.0 or more

      - name: Create tag
        uses: rickstaa/action-create-tag@v1
        with:
          tag: ${{ needs.check-version.outputs.release-version }}

      - name: Create release note
        id: changelog
        uses: requarks/changelog-action@v1
        with:
          fromTag: ${{ needs.check-version.outputs.release-version }}
          toTag: ${{ steps.previousTag.outputs.previousTag}}
          excludeTypes: docs,style,chore,other
          token: ${{ secrets.GITHUB_TOKEN }}
          writeToFile: true
          changelogFilePath: 'CHANGELOG.md'

      - name: Commit changelog file
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          branch: 'v3-main'
          commit_message: 'docs(changelog): ${{ needs.check-version.outputs.release-version }} update [skip ci]'
          file_pattern: 'CHANGELOG.md'

      - name: Download build
        id: download
        uses: actions/download-artifact@v4
        with:
          name: eno-ws-jar
          path: eno-ws/build/libs/

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.check-version.outputs.release-version }}
          target_commitish: ${{ github.head_ref || github.ref }}
          name: ${{ needs.check-version.outputs.release-version }}
          body: ${{steps.changelog.outputs.changes}}
          files: eno-ws/build/libs/eno-ws.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-docker:
    needs: [ check-version, build-sources ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download Eno-WS jar
        uses: actions/download-artifact@v4
        with:
          name: eno-ws-jar
          path: ./eno-ws/build/libs

      - name: Publish to Docker Hub
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          name: inseefr/eno-ws
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          default_branch: ${{ github.ref }}
          tags: "latest,${{ needs.check-version.outputs.release-version }}"
