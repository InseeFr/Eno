name: Eno V2 snapshot

on:
  pull_request:
    types: [labeled]

env:
  JAVA_VERSION: '17'

jobs:

  remove-deploy-label:
    if: ${{ contains(github.event.pull_request.labels.*.name, 'deploy-snapshot') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-ecosystem/action-remove-labels@v1
        with:
          labels: deploy-snapshot

  check-version:
    needs: remove-deploy-label
    runs-on: ubuntu-latest
    outputs:
      snapshot-version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@v4

      - name: Get version
        id: version
        run: echo "version=$(mvn -f pom.xml help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_OUTPUT

      - name: Print version
        run: echo ${{ steps.version.outputs.version }}

      - name: Check tag existence
        id: check-tag-exists
        uses: mukunku/tag-exists-action@v1.6.0
        with:
          tag: "v${{ steps.version.outputs.version }}"

      - name: Tag verification
        id: check-tag
        run: |
          if ! [[ "${{ steps.version.outputs.version }}" =~ ^2.[0-9]+.[0-9]+-SNAPSHOT.?[0-9]*$ ]]; then
            echo "Version on v2-main ${{ steps.version.outputs.version }} branch does not match the format 2.Y.Z-SNAPSHOT"
            exit 1
          fi

          if [[ "${{ steps.check-tag-exists.outputs.exists }}" == "true" ]]; then
            echo "Nothing to tag/release, the tag v${{ steps.version.outputs.version }} already exists"
            exit 1
          fi

  create-tag:
    needs: check-version
    runs-on: ubuntu-latest
    steps:
      - name: Create tag
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/v${{ needs.check-version.outputs.snapshot-version }}',
              sha: context.sha
            })

#  deploy-maven-repo:
#    needs: check-version
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#      - name: Set up Maven Central Repository
#        uses: actions/setup-java@v4
#        with:
#          java-version: ${{ env.JAVA_VERSION }}
#          distribution: 'temurin'
#          server-id: ossrh
#          server-username: MAVEN_USERNAME
#          server-password: MAVEN_PASSWORD
#          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
#          gpg-passphrase: MAVEN_GPG_PASSPHRASE
#      - name: Build and deploy with Maven
#        run: mvn --batch-mode clean process-classes deploy -Prelease -DskipTests=true --no-transfer-progress
#        env:
#          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
#          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
#          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

#  deploy-comment:
#    needs: [ check-version, deploy-maven-repo ]
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/github-script@v7
#        with:
#          script: |
#            github.rest.issues.createComment({
#              issue_number: context.issue.number,
#              owner: context.repo.owner,
#              repo: context.repo.repo,
#              body: 'ðŸ‘‹ Version ${{ needs.check-version.outputs.snapshot-version }} deployed on maven central repository'
#            })
