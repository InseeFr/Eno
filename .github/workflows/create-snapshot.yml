name: Build snapshot

on:
  pull_request:
    types: [labeled]
    paths-ignore:
      - 'logo/**'
      - 'docs/**'
      - 'CHANGELOG.md'
      - 'README**.md'
      - 'Dockerfile'
      - '.github/**'

jobs:

  check-version:
    if: ${{ contains(github.event.pull_request.labels.*.name, 'deploy-snapshot') }}
    runs-on: ubuntu-latest
    outputs:
      release-version: ${{ steps.version-step.outputs.version }}
    steps:
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Checkout Eno repo
        uses: actions/checkout@v4

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Get Eno Version
        id: version-step
        run: |
          ./gradlew # (load the gradle wrapper, required for the get version step)
          echo "version=$(./gradlew printVersion --console=plain -q)" >> $GITHUB_OUTPUT
        
      - name: Print Eno Version
        run: echo ${{ steps.version-step.outputs.version }}

      - uses: mukunku/tag-exists-action@v1.6.0
        name: Check tag existence
        id: check-tag-exists
        with:
          tag: ${{ steps.version-step.outputs.version }}

      - name: Tag verification
        id: check-tag
        run: |
          if [[ "${{ steps.check-tag-exists.outputs.exists }}" == "true" ]]; then
            echo "Nothing to tag/release, the tag ${{ steps.version-step.outputs.version }} already exists"
            exit 1
          fi

          if ! [[ "${{ steps.version-step.outputs.version }}" =~ ^[0-9]+.[0-9]+.[0-9]+-SNAPSHOT.?[0-9]*$ ]]; then
            echo "Nothing to tag/release, the tag ${{ steps.version-step.outputs.version }} is not in correct format X.Y.Z-SNAPSHOT"
            exit 1
          fi

  build-sources:
    needs: check-version
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - uses: actions/checkout@v4
      - name: Build Eno modules
        run: ./gradlew build

      - name: Upload Eno-WS jar
        uses: actions/upload-artifact@v4
        with:
          name: eno-ws-jar
          path: ./eno-ws/build/libs/*.jar

  create-tag:
    needs: [ check-version, build-sources ]
    runs-on: ubuntu-latest
    steps:
      - name: Create tag
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{ needs.check-version.outputs.release-version }}',
              sha: context.sha
            })

  publish-docker:
    needs: [ check-version, create-tag ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Download Eno-WS jar
        uses: actions/download-artifact@v4
        with:
          name: eno-ws-jar
          path: ./eno-ws/build/libs
      
      - name: Publish to Docker Hub
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          name: inseefr/eno-ws
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          default_branch: ${{ github.ref }}
          tags: ${{ needs.check-version.outputs.release-version }}

  write-comment:
    needs: [ check-version, publish-docker ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸ‘‹ Version ${{ needs.check-version.outputs.release-version }} deployed on docker hub'
            })       

  remove-deploy-label:
    needs: write-comment
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-ecosystem/action-remove-labels@v1
        with:
          labels: deploy-snapshot