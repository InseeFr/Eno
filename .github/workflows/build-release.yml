name: Eno V2 release

on:
  push:
    branches:
      - 'main'
    paths-ignore:
      - 'docs/**'
      - 'doc/**'
      - '.github/**'

jobs:

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Build Eno with Maven
        run: mvn clean process-classes package install --no-transfer-progress -DskipTests=true -Dmaven.javadoc.skip=true -Djar.finalName="eno-core" -B -V --file pom.xml
      - name: Run test with Maven
        run: mvn test

  check-version:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      release-version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@v4

      - name: Get version
        id: version
        run: echo "version=$(mvn -f pom.xml help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_OUTPUT

      - name: Print version
        run: echo ${{ steps.version.outputs.version }}

      - name: Check tag existence
        id: check-tag-exists
        uses: mukunku/tag-exists-action@v1.5.0
        with:
          tag: "v${{ steps.version.outputs.version }}"

      - name: Tag verification
        id: check-tag
        run: |
          if ! [[ "${{ steps.version.outputs.version }}" =~ ^2.[0-9]+.[0-9]+$ ]]; then
            echo "Version on main ${{ steps.version.outputs.version }} branch does not match the format 2.Y.Z"
            exit 1
          fi

          if [[ "${{ steps.check-tag-exists.outputs.exists }}" == "true" ]]; then
            echo "Nothing to tag/release, the tag ${{ steps.version.outputs.version }} already exists"
            exit 1
          fi

  tag-release:
    needs: check-version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Get previous v2 release tag
        id: previousTag
        run: echo "previousTag=$(git --no-pager tag --sort=creatordate --merged ${{ github.ref_name }} | grep "^v2\.[0-9]\+\.[0-9]\+$" | tail -1)" >> $GITHUB_OUTPUT

      - name: Print previous tag
        run: echo ${{ steps.previousTag.outputs.previousTag }}

      - name: Create release note
        id: changelog
        uses: requarks/changelog-action@v1
        with:
          fromTag: ${{ github.sha }}
          toTag: ${{ steps.previousTag.outputs.previousTag }}
          excludeTypes: ci,style,chore,other
          token: ${{ secrets.GITHUB_TOKEN }}
          writeToFile: true
          changelogFilePath: 'doc/releases.md'

      - name: Create release
        uses: ncipollo/release-action@v1 # This action allows to publish non 'latest' releases
        with:
          tag: "v${{ needs.check-version.outputs.release-version }}"
          commit: ${{ github.head_ref || github.ref }}
          name: "v${{ needs.check-version.outputs.release-version }}"
          body: ${{steps.changelog.outputs.changes}}
          makeLatest: 'false'
