import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
    id 'org.springframework.boot'
    id 'java-library'
    id 'maven-publish'
}

description = 'eno-core'

/*
To manage dependencies with the help of spring boot dependencies BOM
with Gradle, two solutions are possible :
refer to https://docs.spring.io/spring-boot/docs/2.7.3/gradle-plugin/reference/htmlsingle
https://docs.spring.io/spring-boot/docs/3.0.0-RC1/gradle-plugin/reference/htmlsingle/
 */

dependencies {

    implementation enforcedPlatform(SpringBootPlugin.BOM_COORDINATES)

    // DDI
    implementation project(':ddi-beans')
    // Lunatic
    implementation 'fr.insee.lunatic:lunatic-model:'+project.properties['version.lunatic-model']
    // Pogues
    implementation 'fr.insee.pogues:pogues-model:'+project.properties['version.pogues-model']

    implementation 'org.springframework:spring-core'
    implementation 'org.springframework:spring-beans'
    implementation 'org.springframework:spring-expression'

    // Jackson
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    // Logging
    implementation 'org.slf4j:slf4j-api'

    // Testing
    testRuntimeOnly 'ch.qos.logback:logback-classic'
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter'
    // Mockito
    testImplementation "org.mockito:mockito-core"

    // Lombok // https://projectlombok.org/setup/gradle
    String lombokVersion = '1.18.24'
    compileOnly 'org.projectlombok:lombok:'+lombokVersion
    annotationProcessor 'org.projectlombok:lombok:'+lombokVersion
    testCompileOnly 'org.projectlombok:lombok:'+lombokVersion
    testAnnotationProcessor 'org.projectlombok:lombok:'+lombokVersion
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if (details.requested.group == 'org.slf4j') {
            details.useVersion '2.0.0'
        }
        if (details.requested.group == 'ch.qos.logback'){
            details.useVersion '1.3.0-beta0'
        }
    }
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

tasks.withType(GenerateModuleMetadata).configureEach {
    // The value 'enforced-platform' is provided in the validation error message you got
    suppressedValidationErrors.add('enforced-platform')
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}
