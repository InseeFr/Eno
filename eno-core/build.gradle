import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
    id 'org.springframework.boot' version '2.7.3' apply false
}

description = 'eno-core'

/*
To manage dependencies with the help of spring boot dependencies BOM
with Gradle, two solutions are possible :
refer to https://docs.spring.io/spring-boot/docs/2.7.3/gradle-plugin/reference/htmlsingle
 */

dependencies {

    implementation enforcedPlatform(SpringBootPlugin.BOM_COORDINATES)

    // DDI
    implementation (project(':ddi-beans')) {
        transitive = false
    }
    implementation ('org.apache.xmlbeans:xmlbeans:5.0.3') {
        //exclude group: 'org.apache.logging.log4j', module: 'log4j-api'
    }
    // Lunatic
    implementation 'fr.insee.lunatic:lunatic-model:2.2.13'
    // Pogues
    implementation 'fr.insee.pogues:pogues-model:1.0.1'

    implementation 'org.springframework:spring-core'
    implementation 'org.springframework:spring-beans'
    implementation 'org.springframework:spring-expression'

    // Jackson
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    // Logging
    implementation 'org.slf4j:slf4j-api'

    // Testing
    testRuntimeOnly 'ch.qos.logback:logback-classic'
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter'
    // Mockito
    testImplementation "org.mockito:mockito-core"


    // Lombok https://projectlombok.org/setup/gradle // TODO: version could be managed with spring dependencies (?)
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if (details.requested.group == 'org.slf4j') {
            details.useVersion '2.0.0'
        }
        if (details.requested.group == 'ch.qos.logback'){
            details.useVersion '1.3.0-beta0'
        }
    }
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
