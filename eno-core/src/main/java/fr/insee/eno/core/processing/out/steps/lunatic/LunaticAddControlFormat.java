package fr.insee.eno.core.processing.out.steps.lunatic;

import fr.insee.eno.core.parameter.EnoParameters;
import fr.insee.eno.core.processing.ProcessingStep;
import fr.insee.eno.core.processing.out.steps.lunatic.control.*;
import fr.insee.lunatic.model.flat.*;
import lombok.extern.slf4j.Slf4j;

import java.util.List;

/**
 * Processing adding format controls to components
 * Format controls are controls generated by the min/max/decimals attributes of the Datepicker/InputNumber components
 */
@Slf4j
public class LunaticAddControlFormat implements ProcessingStep<Questionnaire> {

    private final EnoParameters.Language language;

    /** Using french as default value.
     * Note: for the moment, not all messages are internationalised. */
    public LunaticAddControlFormat() {
        this.language = EnoParameters.Language.FR;
    }

    public LunaticAddControlFormat(EnoParameters.Language language) {
        this.language = language;
    }

    /**
     *
     * @param lunaticQuestionnaire lunatic questionnaire to be processed.
     */
    public void apply(Questionnaire lunaticQuestionnaire) {
        processComponents(lunaticQuestionnaire.getComponents());
    }

    private void processComponents(List<ComponentType> components) {
        components
                .forEach(componentType -> {
                    if(componentType instanceof ComponentNestingType componentNesting) {
                        processComponents(componentNesting.getComponents()); // recursive call
                        return;
                    }

                    if(componentType instanceof Table table) {
                        new LunaticTableControls().insertFormatControls(table);
                        return;
                    }

                    if(componentType instanceof RosterForLoop roster) {
                        new LunaticRosterControl().insertFormatControls(roster);
                        return;
                    }

                    if(componentType instanceof InputNumber number) {
                        new LunaticInputNumberControl().insertFormatControls(number);
                        return;
                    }

                    if(componentType instanceof Datepicker datepicker) {
                        new LunaticDatepickerControl(language).insertFormatControls(datepicker);
                        return;
                    }

                    if (componentType instanceof Duration duration){
                        new LunaticDurationControl().insertFormatControls(duration);
                    }
                });
    }

}
