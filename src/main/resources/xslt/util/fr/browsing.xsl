<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xd="http://www.oxygenxml.com/ns/doc/xsl" xmlns:xf="http://www.w3.org/2002/xforms"
    xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:fr="http://orbeon.org/oxf/xml/form-runner"
    xmlns:xxf="http://orbeon.org/oxf/xml/xforms" xmlns:ev="http://www.w3.org/2001/xml-events"
    xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:eno="http://xml.insee.fr/apps/eno"
    exclude-result-prefixes="eno xd" version="2.0">

    <xsl:import href="../../lib.xsl"/>

    <xd:doc scope="stylesheet">
        <xd:desc>
            <xd:p>This xslt stylesheet is used to add a navigation layer to the xforms generated by the main process.</xd:p>
        </xd:desc>
    </xd:doc>

    <!-- The output file generated will be xml type -->
    <xsl:output method="xml" indent="yes" encoding="UTF-8"/>

    <xsl:strip-space elements="*"/>

    <xd:doc>
        <xd:desc>
            <xd:p>The folder containing label resources in different languages.</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:param name="labels-folder"/>

    <xd:doc>
        <xd:desc>
            <xd:p>A variable is created to build a set of label resources in different languages.</xd:p>
            <xd:p>Only the resources in languages already present in the form are charged.</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:variable name="labels-resource">
        <xsl:variable name="languages" as="xs:string*">
            <xsl:for-each select="distinct-values(root()//@xml:lang)">
                <xsl:value-of select="."/>
            </xsl:for-each>
        </xsl:variable>
        <xsl:sequence select="eno:build-labels-resource($labels-folder,$languages)"/>
    </xsl:variable>

    <xd:doc>
        <xd:desc>
            <xd:p>A string corresponding to the path to the CurrentSection.</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:variable name="choice">
        <xsl:value-of select="'{instance(''fr-form-instance'')/Util/CurrentSection}'"/>
    </xsl:variable>

    <xd:doc>
        <xd:desc>
            <xd:p>The number of modules.</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:variable name="number-of-modules">
        <xsl:value-of select="count(//fr:body/*[name()='fr:section' or name()='xf:repeat'])"/>
    </xsl:variable>

    <xd:doc>
        <xd:desc>
            <xd:p>Root template.</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:template match="/">
        <xsl:apply-templates select="xhtml:html"/>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Default template for every element and every attribute, simply coying to the
                output file.</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:template match="node() | @*">
        <xsl:copy>
            <xsl:apply-templates select="node() | @*"/>
        </xsl:copy>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Template to add those elements to the main instance.</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:template match="xf:instance[@id='fr-form-instance']/form">
        <xsl:copy>
            <xsl:apply-templates select="@*"/>
            <!-- For the generic first page -->
            <Beginning>
                <GenericBeginningText/>
            </Beginning>
            <xsl:apply-templates select="node()"/>
            <!-- For the generic last page -->
            <End>
                <GenericEndText/>
            </End>
            <!-- Elements that are used for navigation and need to be saved -->
            <Util>
                <CurrentSection>1</CurrentSection>
                <CurrentSectionName/>
                <xsl:for-each select="//fr:body/xf:repeat">
                    <CurrentLoopElement loop-name="{@id}">0</CurrentLoopElement>
                </xsl:for-each>
                <Send>false</Send>
                <DateTime/>
            </Util>
        </xsl:copy>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Template to create the corresponding binds of the elements above.</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:template match="xf:bind[@id='fr-form-instance-binds']">
        <xsl:copy>
            <xsl:apply-templates select="@*"/>
            <xf:bind id="beginning-bind" name="beginning" ref="Beginning">
                <xf:bind id="generic-beginning-text-bind" name="generic-beginning-text"
                    ref="GenericBeginningText"/>
            </xf:bind>
            <xsl:apply-templates select="node()"/>
            <xf:bind id="end-bind" name="end" ref="End">
                <xf:bind id="generic-end-text-bind" name="generic-end-text" ref="GenericEndText"/>
            </xf:bind>
            <!-- The CurrentSectionName depends of the CurrentSection -->
            <xf:bind id="current-section-name-bind" name="current-section-name"
                ref="Util/CurrentSectionName">
                <xsl:attribute name="calculate">
                    <xsl:for-each select="//fr:body/xf:repeat">
                        <xsl:variable name="section-position">
                            <xsl:value-of select="count(preceding-sibling::*)+1"/>
                        </xsl:variable>
                        <xsl:variable name="loop-module" select="fr:section/@name"/>
                        <xsl:value-of select="concat('(if (instance(''fr-form-instance'')/Util/CurrentSection=''',$section-position,''')
                            then ''',$loop-module,''' else ')"
                        />
                    </xsl:for-each>
                    <xsl:value-of select="'(instance(''fr-form-util'')/Pages/*)[position()=number(instance(''fr-form-instance'')/Util/CurrentSection)]/name()'"/>
                    <xsl:for-each select="//fr:body/xf:repeat">
                        <xsl:value-of select="')'"/>
                    </xsl:for-each>
                </xsl:attribute>
            </xf:bind>
        </xsl:copy>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Direct child of a loop at the root of the questionnaire : it means this child is considered as a module.</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:template match="xf:bind[@id='fr-form-instance-binds']/xf:bind[@nodeset]">
        <xsl:variable name="container" select="@name"/>
        <xsl:variable name="name">
            <xsl:choose>
                <xsl:when test="ends-with(@name,'-Container')">
                    <xsl:value-of select="substring-after(@nodeset,'/')"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="@name"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:copy>
            <xsl:apply-templates select="@*"/>
            <!-- Each one is relevant only when it needs to be displayed -->
            <xsl:attribute name="relevant" select="concat('count(preceding-sibling::*[name()=''',$name,'''])+1=instance(''fr-form-instance'')/Util/CurrentLoopElement[@loop-name=''',$container,''']')"/>
            <xsl:apply-templates select="node()"/>
        </xsl:copy>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Template to add elements to the resource instance.</xd:p>
            <xd:p>This template is based on the variable defined at the beginning of this stylesheet.</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:template match="resource[ancestor::xf:instance[@id='fr-form-resources']]">
        <xsl:variable name="language" select="@xml:lang"/>
        <xsl:copy>
            <xsl:apply-templates select="@*"/>
            <Beginning>
                <label>
                    <xsl:value-of select="$labels-resource/Languages/Language[@xml:lang=$language]/Browsing/Beginning"/>
                </label>
            </Beginning>
            <GenericBeginningText>
                <label>
                    <xsl:value-of select="$labels-resource/Languages/Language[@xml:lang=$language]/Browsing/GenericBeginningText"/>
                </label>
            </GenericBeginningText>
            <xsl:apply-templates select="node()"/>
            <End>
                <label>
                    <xsl:value-of select="$labels-resource/Languages/Language[@xml:lang=$language]/Browsing/End"/>
                </label>
            </End>
            <GenericEndText>
                <label>
                    <xsl:value-of select="$labels-resource/Languages/Language[@xml:lang=$language]/Browsing/GenericEndText"/>
                </label>
            </GenericEndText>
            <Progress>
                <label>
                    <xsl:value-of select="$labels-resource/Languages/Language[@xml:lang=$language]/Browsing/Progress"/>
                </label>
            </Progress>
            <Start>
                <label>
                    <xsl:value-of select="$labels-resource/Languages/Language[@xml:lang=$language]/Browsing/Start"/>
                </label>
            </Start>
            <Previous>
                <label>
                    <xsl:value-of select="$labels-resource/Languages/Language[@xml:lang=$language]/Browsing/Previous"/>
                </label>
            </Previous>
            <Next>
                <label>
                    <xsl:value-of select="$labels-resource/Languages/Language[@xml:lang=$language]/Browsing/Next"/>
                </label>
            </Next>
            <Send>
                <label>
                    <xsl:value-of select="$labels-resource/Languages/Language[@xml:lang=$language]/Browsing/Send"/>
                </label>
            </Send>
            <ConfirmationMessage>
                <label>
                    <xsl:value-of select="$labels-resource/Languages/Language[@xml:lang=$language]/Browsing/ConfirmationMessage"/>
                </label>
            </ConfirmationMessage>
            <FatalError>
                <label>
                    <xsl:value-of select="$labels-resource/Languages/Language[@xml:lang=$language]/Browsing/FatalError"/>
                </label>
            </FatalError>
            <Correct>
                <label>
                    <xsl:value-of select="$labels-resource/Languages/Language[@xml:lang=$language]/Browsing/Correct"/>
                </label>
            </Correct>
            <Continue>
                <label>
                    <xsl:value-of select="$labels-resource/Languages/Language[@xml:lang=$language]/Browsing/Continue"/>
                </label>
            </Continue>
            <GoBackWarning>
                <label>
                    <xsl:value-of select="$labels-resource/Languages/Language[@xml:lang=$language]/Browsing/GoBackWarning"/>
                </label>
            </GoBackWarning>
            <GoBack>
                <label>
                    <xsl:value-of select="$labels-resource/Languages/Language[@xml:lang=$language]/Browsing/GoBack"/>
                </label>
            </GoBack>
            <GoToFirstPage>
                <label>
                    <xsl:value-of select="$labels-resource/Languages/Language[@xml:lang=$language]/Browsing/GoToFirstPage"/>
                </label>
            </GoToFirstPage>
            <WelcomeBack>
                <label>
                    <xsl:value-of select="$labels-resource/Languages/Language[@xml:lang=$language]/Browsing/WelcomeBack"/>
                </label>
            </WelcomeBack>
            <Warning>
                <label>
                    <xsl:value-of select="$labels-resource/Languages/Language[@xml:lang=$language]/Browsing/Warning"/>
                </label>
            </Warning>
            <Error>
                <label>
                    <xsl:value-of select="$labels-resource/Languages/Language[@xml:lang=$language]/Browsing/Error"/>
                </label>
            </Error>
            <WelcomeBackText>
                <label>
                    <xsl:value-of select="$labels-resource/Languages/Language[@xml:lang=$language]/Browsing/WelcomeBackText"/>
                </label>
            </WelcomeBackText>
            <WarningTextPrevious>
                <label>
                    <xsl:value-of select="$labels-resource/Languages/Language[@xml:lang=$language]/Browsing/WarningTextPrevious"/>
                </label>
            </WarningTextPrevious>
            <WarningTextNext>
                <label>
                    <xsl:value-of select="$labels-resource/Languages/Language[@xml:lang=$language]/Browsing/WarningTextNext"/>
                </label>
            </WarningTextNext>
            <ErrorTextPrevious>
                <label>
                    <xsl:value-of select="$labels-resource/Languages/Language[@xml:lang=$language]/Browsing/ErrorTextPrevious"/>
                </label>
            </ErrorTextPrevious>
            <ErrorTextNext>
                <label>
                    <xsl:value-of select="$labels-resource/Languages/Language[@xml:lang=$language]/Browsing/ErrorTextNext"/>
                </label>
            </ErrorTextNext>
        </xsl:copy>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Adding many elements to Xforms model :</xd:p>
            <xd:p>- an 'util' instance' which contains elements used by the form</xd:p>
            <xd:p>- the corresponding binds</xd:p>
            <xd:p>- a save submission</xd:p>
            <xd:p>- a send/validate final submission called 'submit'</xd:p>
            <xd:p>- a 'xforms-ready' action (used when the form is charged)</xd:p>
            <xd:p>- a 'page-change' action (to check if there are errors or warnings on the current page and if the page change is authorized)</xd:p>
            <xd:p>- a 'page-change-done' action (to process the effective page change)</xd:p>
            <xd:p>- a 'submit-form' action (used for the final validation of the form and uses the 'submit' submission)</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:template match="xf:model[@id='fr-form-model']">
        <xsl:copy>
            <xsl:apply-templates select="node() | @*"/>

            <!-- 'util' instance' which contains elements used by the form -->
            <xf:instance id="fr-form-util">
                <Util>
                    <Start/>
                    <Previous/>
                    <Next/>
                    <Send/>
                    <ProgressPercent/>
                    <Progress/>
                    <PageTop/>
                    <Pages>
                        <Beginning/>
                        <!-- One element is created for each page -->
                        <xsl:for-each select="//*[parent::form[parent::xf:instance[@id='fr-form-instance']] and not(name()='Util') and child::*]">
                            <xsl:element name="{name()}"/>
                        </xsl:for-each>
                        <End/>
                    </Pages>
                    <PreviousNext/>
                    <PageChangeDone/>
                    <ConfirmationMessage/>
                    <FatalError/>
                    <ErrorText/>
                    <WarningText/>
                    <WelcomeBackText/>
                </Util>
            </xf:instance>

            <!-- The corresponding binds -->
            <xf:bind id="fr-form-util-binds" ref="instance('fr-form-util')">
                <!-- The number of pages in the form (not counting the beginning and end pages) -->
                <xsl:variable name="inner-questionnaire-pages-or-repeats-number" as="xs:integer">
                    <xsl:value-of select="count(//*[parent::form[parent::xf:instance[@id='fr-form-instance']] and not(name()='Util') and child::*])"/>
                </xsl:variable>
                <xf:bind id="start-bind"
                    relevant="instance('fr-form-instance')/Util/CurrentSection='1'" ref="Start"/>
                <!-- The previous button does not appear on first page and after the last page -->
                <xf:bind id="previous-bind"
                    relevant="not(instance('fr-form-instance')/Util/CurrentSection='1' or number(instance('fr-form-instance')/Util/CurrentSection)&gt; {$inner-questionnaire-pages-or-repeats-number +2})"
                    ref="Previous"/>
                <!-- The next button does not appear on first and last pages -->
                <xf:bind id="next-bind"
                    relevant="not(instance('fr-form-instance')/Util/CurrentSection='1' or number(instance('fr-form-instance')/Util/CurrentSection)&gt; {$inner-questionnaire-pages-or-repeats-number+1})"
                    ref="Next"/>
                <xf:bind id="send-bind" ref="Send"
                    relevant="instance('fr-form-instance')/Util/Send='false'"/>
                <xf:bind id="progress-percent-bind" name="progress-percent" ref="ProgressPercent">
                    <xsl:attribute name="calculate">
                        <xsl:variable name="repeats-number" as="xs:integer">
                            <xsl:value-of select="count(//fr:body/xf:repeat)"/>
                        </xsl:variable>
                        <!-- The total number of pages in the repeat : it can evolve when filling questionnaire -->
                        <xsl:variable name="total-group-pages-count">
                            <xsl:for-each select="//fr:body/xf:repeat">
                                <xsl:variable name="container" select="@id"/>
                                <xsl:variable name="group-name" select="substring-after(@nodeset,concat($container,'/'))"/>
                                <xsl:variable name="group-pages-number" select="count(fr:section)"/>
                                <xsl:value-of select="concat('+count(instance(''fr-form-instance'')//',$container,'/',$group-name,')*',$group-pages-number)"/>
                            </xsl:for-each>
                        </xsl:variable>
                        <!-- The number of repeats is removed from the number pages because it is counted in the total number of pages instead -->
                        <xsl:variable name="denominator" select="concat('(',string($inner-questionnaire-pages-or-repeats-number - $repeats-number),$total-group-pages-count,')')"/>

                        <xsl:value-of select="'if (number(instance(''fr-form-instance'')/Util/CurrentSection)=1) then ''0'' '"/>
                        <xsl:value-of
                            select="concat('else (if (number(instance(''fr-form-instance'')/Util/CurrentSection)&gt;',
                                           $inner-questionnaire-pages-or-repeats-number+1,
                                           ') then ''100''')"/>
                        <xsl:for-each select="//fr:body/xf:repeat">
                            <xsl:variable name="occurrence-position" select="count(//fr:body/xf:repeat/preceding-sibling::fr:section)+1"/>
                            <xsl:variable name="container" select="@id"/>
                            <xsl:variable name="previous-group-pages-count">
                                <xsl:for-each select="//fr:body/xf:repeat[following-sibling::xf:repeat/@id=$container]">
                                    <xsl:variable name="previous-group-pages-number" select="count(fr:section)"/>
                                    <xsl:variable name="previous-group-container" select="@id"/>
                                    <xsl:variable name="previous-group-name" select="substring-after(@nodeset,concat($previous-group-container,'/'))"/>
                                    <xsl:value-of select="concat('+(count(instance(''fr-form-instance'')//',$previous-group-container,'/',$previous-group-name,')*',$previous-group-pages-number,'-1)')"/>
                                </xsl:for-each>
                            </xsl:variable>
                            <xsl:variable name="group-pages-number" select="count(fr:section)"/>

                            <xsl:value-of select="concat(' else (if (number(instance(''fr-form-instance'')/Util/CurrentSection) &lt;',$occurrence-position,')')"/>
                            <xsl:value-of select="concat(' then round((number(instance(''fr-form-instance'')/Util/CurrentSection)-2',$previous-group-pages-count,')')"/>
                            <xsl:value-of select="concat(' div ',$denominator,'*100)')"/>
                            <xsl:value-of select="concat(' else (if (instance(''fr-form-instance'')/Util/CurrentSection =',$occurrence-position,')')"/>
                            <!-- pages due to sections previous from the repeat + pages due to previous occurrences + pages due to previous sections in the current occurrence -->
                            <xsl:value-of select="concat(' then round((',$occurrence-position,'-2',$previous-group-pages-count)"/>
                            <xsl:value-of select="concat('+(number(instance(''fr-form-instance'')/Util/CurrentLoopElement[@loop-name=''',$container,'''])-1)*',$group-pages-number)"/>
                            <xsl:value-of select="'+count(instance(''fr-form-instance'')/*[name()=instance(''fr-form-instance'')/Util/CurrentSectionName]/preceding-sibling::*))'"/>
                            <xsl:value-of select="concat(' div ',$denominator,'*100)')"/>
                        </xsl:for-each>
                        <xsl:value-of select="concat(' else round((number(instance(''fr-form-instance'')/Util/CurrentSection) - 2',
                                                     $total-group-pages-count,
                                                     ')')"/>
                        <xsl:value-of select="concat(' div ',$denominator,'*100))')"/>
                        <!-- if ends -->
                        <xsl:for-each select="//fr:body/xf:repeat">
                            <xsl:value-of select="'))'"/>
                        </xsl:for-each>
                    </xsl:attribute>
                </xf:bind>
                <xf:bind id="progress-bind" ref="Progress"/>
                <xf:bind id="page-top-bind" ref="PageTop"/>
                <xf:bind id="confirmation-message-bind" ref="ConfirmationMessage" name="confirmation-message"
                    relevant="instance('fr-form-instance')/Util/Send='true'"/>
                <xf:bind id="pages-bind" ref="Pages">
                    <xsl:apply-templates select="//xf:instance[@id='fr-form-instance']/form/*[child::*]" mode="page-bind">
                        <xsl:with-param name="loop-ancestors"/>
                    </xsl:apply-templates>
                </xf:bind>
            </xf:bind>

            <!--  Save submission -->
            <xsl:comment>You can add a resource attribute for the save submission by processing the result with your own xslt.</xsl:comment>
            <xf:submission id="save" method="post" ref="instance('fr-form-instance')" replace="none" relevant="false">
                <xf:action ev:event="xforms-submit-error">
                    <xxf:show ev:event="DOMActivate" dialog="fatal-error"/>
                </xf:action>
                <xf:action ev:event="xforms-submit-done">
                    <xf:setvalue ref="xxf:instance('fr-persistence-instance')/data-safe-override">true</xf:setvalue>
                </xf:action>
            </xf:submission>

            <!-- Send/Validate submission (final) -->
            <xsl:comment>You can add a resource attribute for the submit submission by processing the result with your own xslt.</xsl:comment>
            <xf:submission id="submit" method="post" ref="instance('fr-form-instance')" replace="none" relevant="false">
                <!-- If somehow it crashes, we register the survey as not submitted and show an error dialog -->
                <xf:action ev:event="xforms-submit-error">
                    <xf:setvalue ref="instance('fr-form-instance')/Util/Send" value="string('false')"/>
                    <xxf:show ev:event="DOMActivate" dialog="fatal-error"/>
                </xf:action>
                <xf:action ev:event="xforms-submit-done">
                    <!-- This helps to avoid native Orbeon alert messages when wanting to leave the survey even thought the datas are saved. -->
                    <xf:setvalue ref="xxf:instance('fr-persistence-instance')/data-safe-override">true</xf:setvalue>
                </xf:action>
            </xf:submission>

            <!-- Initialization action -->
            <!-- Initialization of all variable text fields -->
            <xf:action ev:event="xforms-ready">
                <!-- Initialization of dynamic arrays -->
                <xsl:for-each select="//xf:repeat">
                    <xsl:variable name="container" select="@id"/>
                    <xsl:variable name="dynamic-array" select="substring-after(@nodeset,concat($container,'/'))"/>
                    <xsl:if test="//xf:repeat[tokenize(@nodeset,'/')[last()]=$dynamic-array][not(preceding::xf:repeat[tokenize(@nodeset,'/')[last()]=$dynamic-array])]/@id=$container">
                        <xf:action if="not(instance('fr-form-instance')//{$container}/*)
                            or count(instance('fr-form-instance')//{$container}/{$dynamic-array}) &lt; instance('fr-form-instance')//{$dynamic-array}-Count">
                            <xf:action while="count(instance('fr-form-instance')//{$container}/{$dynamic-array}) &lt; instance('fr-form-instance')//{$dynamic-array}-Count">
                                <xf:insert context="instance('fr-form-instance')//{$container}"
                                    nodeset="instance('fr-form-instance')//{$container}/{$dynamic-array}"
                                    position="after"
                                    origin="instance('fr-form-loop-model')/{$container}/{$dynamic-array}"/>
                                <xf:setvalue ref="instance('fr-form-instance')//{$container}/{$dynamic-array}[last()]/@id"
                                    value="concat('{$dynamic-array}-',count(instance('fr-form-instance')//{$container}/{$dynamic-array}))"/>
                            </xf:action>
                        </xf:action>
                        <xf:action if="count(instance('fr-form-instance')//{$container}/{$dynamic-array}) &gt; instance('fr-form-instance')//{$dynamic-array}-Count">
                            <xf:setvalue ref="instance('fr-form-instance')//{$dynamic-array}-Count"
                                value="count(instance('fr-form-instance')//{$container}/{$dynamic-array})"/>
                        </xf:action>
                        <xsl:for-each select="//xf:repeat[substring-after(@nodeset,concat(@id,'/')) = $dynamic-array]">
                            <xsl:if test="@id != $container">
                                <xf:action if="not(instance('fr-form-instance')//{@id}/*)
                                    or count(instance('fr-form-instance')//{@id}/{$dynamic-array}) &lt; instance('fr-form-instance')//{$dynamic-array}-Count">
                                    <xf:action while="count(instance('fr-form-instance')//{@id}/{$dynamic-array}) &lt; instance('fr-form-instance')//{$dynamic-array}-Count">
                                        <xf:insert context="instance('fr-form-instance')//{@id}"
                                            nodeset="instance('fr-form-instance')//{@id}/{$dynamic-array}"
                                            position="after"
                                            origin="instance('fr-form-loop-model')/{@id}/{$dynamic-array}"/>
                                        <xf:setvalue ref="instance('fr-form-instance')//{@id}/{$dynamic-array}[last()]/@id"
                                            value="instance('fr-form-instance')//{$container}/{$dynamic-array}[position() = count(instance('fr-form-instance')//{@id}/{$dynamic-array})]/@id"/>
                                    </xf:action>
                                </xf:action>
                            </xsl:if>
                        </xsl:for-each>
                    </xsl:if>
                </xsl:for-each>
                <!-- Going back to the page we left -->
                <xf:toggle case="{$choice}"/>
                <!-- If this isn't submitted yet, and we're not on the first page, a dialog is appearing -->
                <xxf:show
                    if="instance('fr-form-instance')/Util/Send='false' and not(instance('fr-form-instance')/Util/CurrentSection='1')"
                    dialog="welcome-back"/>
            </xf:action>

            <!-- Page changing action -->
            <xf:action ev:event="page-change">
                <!-- Iterating on every field of the current page and doing a DOMFocusOut in order to display potential error messages -->
                <xf:action iterate="instance('fr-form-instance')/*[name()=instance('fr-form-instance')/Util/CurrentSectionName]//*">
                    <xf:dispatch name="DOMFocusOut">
                        <xsl:attribute name="target">
                            <xsl:value-of select="'{concat(context()/name(),''-control'')}'"/>
                        </xsl:attribute>
                    </xf:dispatch>
                </xf:action>
                <!-- The same for loops of pages -->
                <xsl:for-each select="//fr:body/xf:repeat">
                    <xsl:variable name="section-position">
                        <xsl:value-of select="count(preceding-sibling::*)+1"/>
                    </xsl:variable>
                    <xsl:variable name="container" select="@id"/>
                    <xsl:variable name="loop-name" select="substring-after(@nodeset,concat($container,'/'))"/>
                    <xf:action if="instance('fr-form-instance')/Util/CurrentSection='{$section-position}'">
                        <xf:action
                            iterate="instance('fr-form-instance')//{$container}/{$loop-name}[count(preceding-sibling::*[name()='{$loop-name}'])+1=instance('fr-form-instance')/Util/CurrentLoopElement[@loop-name='{$container}']]
                                                                                            /*[name()=instance('fr-form-instance')/Util/CurrentSectionName]//*">
                            <xf:dispatch name="DOMFocusOut">
                                <xsl:attribute name="target" select="'{concat(context()/name(),''-control'')}'"/>
                            </xf:dispatch>
                        </xf:action>
                    </xf:action>
                </xsl:for-each>


                <!-- Forcing this to false to notify that the page change isn't done yet. -->
                <xf:setvalue ref="instance('fr-form-util')/PageChangeDone" value="string('false')"/>


                <!-- Every action below is exclusive (works as a switch case)
                        The result of each action can initiate another one, but we don't want that.
                        Therefore, an action will only occur when the PageChangeDone property will be false.
                        Also, each action will end by setting this property to true (which will prevent other actions from triggering-->
                <xf:action
                    if="instance('fr-form-util')/PageChangeDone='false'
                    and not(xxf:valid(instance('fr-form-instance')/*[name()=instance('fr-form-instance')/Util/CurrentSectionName],true(),true()))">
                    <!-- Displaying the dialog window that correspond to an error according to value of PreviousNext-->
                    <xf:action if="instance('fr-form-util')/PreviousNext='-1'">
                        <xxf:show ev:event="DOMActivate" dialog="errorPrevious"/>
                    </xf:action>
                    <xf:action if="instance('fr-form-util')/PreviousNext='1'">
                        <xxf:show ev:event="DOMActivate" dialog="errorNext"/>
                    </xf:action>

                    <!-- And we don't change page -->
                    <xf:setvalue ref="instance('fr-form-util')/PageChangeDone" value="string('true')"/>
                </xf:action>
                <!-- The same for loops of pages -->
                <xsl:for-each select="//fr:body/xf:repeat">
                    <xsl:variable name="section-position">
                        <xsl:value-of select="count(preceding-sibling::*)+1"/>
                    </xsl:variable>
                    <xsl:variable name="container" select="@id"/>
                    <xsl:variable name="loop-name" select="substring-after(@nodeset,concat($container,'/'))"/>
                    <xf:action if="instance('fr-form-instance')/Util/CurrentSection='{$section-position}'">
                        <xf:action if="instance('fr-form-util')/PageChangeDone='false'
                            and not(xxf:valid(instance('fr-form-instance')//{$container}/{$loop-name}[count(preceding-sibling::*[name()='{$loop-name}'])+1 = instance('fr-form-instance')/Util/CurrentLoopElement[@loop-name='{$container}']]
                                                                                        /*[name()=instance('fr-form-instance')/Util/CurrentSectionName],
                                              true(),true()))">
                            <!-- Displaying the dialog window that correspond to an error according to value of PreviousNext-->
                            <xf:action if="instance('fr-form-util')/PreviousNext='-1'">
                                <xxf:show ev:event="DOMActivate" dialog="errorPrevious"/>
                            </xf:action>
                            <xf:action if="instance('fr-form-util')/PreviousNext='1'">
                                <xxf:show ev:event="DOMActivate" dialog="errorNext"/>
                            </xf:action>
                            <!-- And we don't change page -->
                            <xf:setvalue ref="instance('fr-form-util')/PageChangeDone" value="string('true')"/>
                        </xf:action>
                    </xf:action>
                </xsl:for-each>

                <xf:action if="instance('fr-form-util')/PageChangeDone='false'
                           and xxf:valid(instance('fr-form-instance')/*[name()=instance('fr-form-instance')/Util/CurrentSectionName],true(),true())
                           and xxf:evaluate-bind-property(concat('page-',instance('fr-form-instance')/Util/CurrentSectionName,'-bind'),'constraint')=false()">
                    <!-- Displaying the dialog window that correspond to an warning according to value of PreviousNext-->
                    <xf:action if="instance('fr-form-util')/PreviousNext='-1'">
                        <xxf:show ev:event="DOMActivate" dialog="warningPrevious"/>
                    </xf:action>
                    <xf:action if="instance('fr-form-util')/PreviousNext='1'">
                        <xxf:show ev:event="DOMActivate" dialog="warningNext"/>
                    </xf:action>
                    <!-- And we don't change page. The page change can happen at the level of this dialog window -->
                    <xf:setvalue ref="instance('fr-form-util')/PageChangeDone"
                        value="string('true')"/>
                </xf:action>
                <!-- The same for loops of pages -->
                <xsl:for-each select="//fr:body/xf:repeat">
                    <xsl:variable name="section-position">
                        <xsl:value-of select="count(preceding-sibling::*)+1"/>
                    </xsl:variable>
                    <xsl:variable name="container" select="@id"/>
                    <xsl:variable name="loop-name" select="substring-after(@nodeset,concat($container,'/'))"/>
                    <xf:action if="instance('fr-form-instance')/Util/CurrentSection='{$section-position}'">
                        <xf:action if="instance('fr-form-util')/PageChangeDone='false'
                            and xxf:valid(instance('fr-form-instance')//{$container}/{$loop-name}[count(preceding-sibling::*[name()='{$loop-name}'])+1 = instance('fr-form-instance')/Util/CurrentLoopElement[@loop-name='{$container}']]
                                                                                    /*[name()=instance('fr-form-instance')/Util/CurrentSectionName],true(),true()) and xxf:evaluate-bind-property(concat('page-',instance('fr-form-instance')/Util/CurrentSectionName,'-bind')
                                          ,'constraint')=false()">
                            <!-- Displaying the dialog window that correspond to an warning according to value of PreviousNext-->
                            <xf:action if="instance('fr-form-util')/PreviousNext='-1'">
                                <xxf:show ev:event="DOMActivate" dialog="warningPrevious"/>
                            </xf:action>
                            <xf:action if="instance('fr-form-util')/PreviousNext='1'">
                                <xxf:show ev:event="DOMActivate" dialog="warningNext"/>
                            </xf:action>
                            <!-- And we don't change page -->
                            <xf:setvalue ref="instance('fr-form-util')/PageChangeDone"
                                value="string('true')"/>
                        </xf:action>
                    </xf:action>
                </xsl:for-each>

                <xf:action
                    if="instance('fr-form-util')/PageChangeDone='false'
                    and xxf:valid(instance('fr-form-instance')/*[name()=instance('fr-form-instance')/Util/CurrentSectionName],true(),true())
                    and not(xxf:evaluate-bind-property(concat('page-',instance('fr-form-instance')/Util/CurrentSectionName,'-bind'),'constraint')=false())">
                    <!-- The page change happens -->
                    <xf:dispatch name="page-change-done" targetid="fr-form-model"/>
                </xf:action>
                <!-- The same for loops of pages -->
                <xsl:for-each select="//fr:body/xf:repeat">
                    <xsl:variable name="section-position" select="count(preceding-sibling::*)+1"/>
                    <xsl:variable name="container" select="@id"/>
                    <xsl:variable name="loop-name" select="substring-after(@nodeset,concat($container,'/'))"/>
                    <xf:action if="instance('fr-form-instance')/Util/CurrentSection='{$section-position}'">
                        <xf:action if="instance('fr-form-util')/PageChangeDone='false'
                            and xxf:valid(instance('fr-form-instance')//{$container}/{$loop-name}[count(preceding-sibling::*[name()='{$loop-name}'])+1 = instance('fr-form-instance')/Util/CurrentLoopElement[@loop-name='{$container}']]
                                                                                    /*[name()=instance('fr-form-instance')/Util/CurrentSectionName],
                                          true(),true())
                            and not(xxf:evaluate-bind-property(concat('page-',instance('fr-form-instance')/Util/CurrentSectionName,'-bind'),'constraint')=false())">
                            <xf:dispatch name="page-change-done" targetid="fr-form-model"/>
                        </xf:action>
                    </xf:action>
                </xsl:for-each>

            </xf:action>

            <!-- What happens when the page change is effective -->
            <xf:action ev:event="page-change-done">
                <xf:setvalue ref="instance('fr-form-util')/PageChangeDone" value="string('false')"/>

                <!-- For each CurrentLoopElement, we calculate the corresponding value -->
                <xsl:apply-templates select="//fr:body/xf:repeat" mode="page-change"/>

                <xf:action
                    if="instance('fr-form-util')/PageChangeDone='false' and instance('fr-form-util')/PreviousNext='1'">
                    <!-- Not handled : loop whose all elements are hidden -->
                    <xf:setvalue ref="instance('fr-form-instance')/Util/CurrentSection"
                        value="count(instance('fr-form-util')/Pages/*[position()=instance('fr-form-instance')/Util/CurrentSection]/following-sibling::*[not(text()='false')][1]/preceding-sibling::*)+1"/>
                    <xf:setvalue ref="instance('fr-form-util')/PageChangeDone" value="string('true')"/>
                </xf:action>
                <xf:action
                    if="instance('fr-form-util')/PageChangeDone='false' and instance('fr-form-util')/PreviousNext='-1'">
                    <!-- Non handled : loop whose all elements are hidden -->
                    <xf:setvalue ref="instance('fr-form-instance')/Util/CurrentSection"
                        value="count(instance('fr-form-util')/Pages/*[position()=instance('fr-form-instance')/Util/CurrentSection]/preceding-sibling::*[not(text()='false')][1]/preceding-sibling::*)+1"/>
                    <xf:setvalue ref="instance('fr-form-util')/PageChangeDone" value="string('true')"/>
                </xf:action>

                <!-- Saving the time when the saving happened -->
                <xf:setvalue ref="instance('fr-form-instance')/Util/DateTime"
                    value="fn:format-dateTime(fn:current-dateTime(),'[D01]-[M01]-[Y0001] à [H01]:[m01]')"/>

                <!-- Switching page -->
                <xf:toggle case="{$choice}"/>
                <!-- Saving -->
                <xf:send submission="save"/>
                <!-- Going at the top of the page -->
                <xf:setfocus control="page-top-control"/>
            </xf:action>

            <!-- What happens when the form is submitted -->
            <xf:action ev:event="submit-form">
                <!-- Writing in the instance that the survey is submitted -->
                <xf:setvalue ref="instance('fr-form-instance')/Util/Send" value="string('true')"/>
                <xf:setvalue ref="instance('fr-form-instance')/Util/DateTime"
                    value="fn:format-dateTime(fn:current-dateTime(),'[D01]-[M01]-[Y0001] à [H01]:[m01]')"/>
                <!-- Dispatching the submission -->
                <xf:send submission="submit"/>
            </xf:action>

        </xsl:copy>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>loop of pages : bind</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:template match="*[ends-with(name(),'-Container')]" mode="page-bind">
        <xsl:param name="loop-ancestors"/>
        <xsl:variable name="container" select="name()"/>
        <xsl:variable name="loop-name" select="child::*/name()"/>
        <xf:bind id="page-{name()}-bind" name="{name()}" ref="{name()}/{$loop-name}[instance('fr-form-instance')/Util/CurrentLoopElement[@loop-name='{$container}']]">
            <xf:bind id="{$container}-position-bind" name="{$container}-position" value="number(instance('fr-form-instance')/Util/CurrentLoopElement[@loop-name='{$container}'])"/>
            <xsl:apply-templates select="child::*/child::*[child::*]" mode="page-bind">
                <xsl:with-param name="loop-ancestors" select="if ($loop-ancestors='') then $loop-name else concat($loop-ancestors,' ',$loop-name)"/>
            </xsl:apply-templates>
        </xf:bind>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>page-bind</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:template match="*[not(ends-with(name(),'-Container'))]" mode="page-bind">
        <xsl:param name="loop-ancestors"/>

        <xf:bind id="page-{name()}-bind" name="{name()}" ref="{name()}">
            <xf:calculate value="xxf:evaluate-bind-property('{name()}-bind','relevant')"/>
            <!-- Creating a constraint equals to the sum of warning-level constraints -->
            <xsl:variable name="module-name" select="name()"/>
            <xsl:variable name="constraint">
                <xsl:apply-templates select="//xf:bind[@name=$module-name]/*" mode="page-check">
                    <xsl:with-param name="parent-name" select="$module-name" tunnel="yes"/>
                    <xsl:with-param name="last-ancestor" select="tokenize($loop-ancestors,' ')[last()]" tunnel="yes"/>
                    <xsl:with-param name="level" select="'warning'" tunnel="yes"/>
                </xsl:apply-templates>
            </xsl:variable>
            <xsl:if test="$constraint[text()!='']">
                <xf:constraint value="{$constraint}"/>
            </xsl:if>
        </xf:bind>
    </xsl:template>

    <xd:doc>
        <xd:desc>page-check : nothing by default</xd:desc>
    </xd:doc>
    <xsl:template match="*[not(@relevant) and not(@nodeset)]" mode="page-check" priority="-1">
        <xsl:apply-templates select="*" mode="page-check"/>
    </xsl:template>

    <xd:doc>
        <xd:desc>page-check : constraint added : must be true so that there is no pop-up</xd:desc>
    </xd:doc>
    <xsl:template match="xf:constraint" mode="page-check">
        <xsl:param name="parent-name" tunnel="yes"/>
        <xsl:param name="last-ancestor" tunnel="yes"/>
        <xsl:param name="level" tunnel="yes"/>

        <xsl:if test="@level=$level">
            <xsl:if test="preceding::xf:constraint[@level=$level and ancestor::xf:bind/@name=$parent-name]">
                <xsl:value-of select="' and '"/>
            </xsl:if>
            <xsl:value-of select="concat('(',replace(@value,'ancestor::','ancestor-or-self::'),')')"/>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc>page-check : relevant ancestor of constraint added : must be not relevant or the constraint inside must be true</xd:desc>
    </xd:doc>
    <xsl:template match="xf:bind[@relevant]" mode="page-check">
        <xsl:param name="parent-name" tunnel="yes"/>
        <xsl:param name="last-ancestor" tunnel="yes"/>
        <xsl:param name="level" tunnel="yes"/>

        <xsl:if test="descendant::xf:constraint/@level=$level">
            <xsl:if test="preceding::xf:constraint[@level=$level and ancestor::xf:bind/@name=$parent-name]">
                <xsl:value-of select="' and '"/>
            </xsl:if>
            <xsl:value-of select="concat('(not(',replace(@relevant,'ancestor::','ancestor-or-self::'),') or ')"/>
            <xsl:apply-templates select="*" mode="page-check">
                <xsl:with-param name="parent-name" select="@name" tunnel="yes"/>
            </xsl:apply-templates>
            <xsl:value-of select="')'"/>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc>page-check : relevant nodeset of constraint added : all instances must be true, so no instance can be false</xd:desc>
    </xd:doc>
    <xsl:template match="xf:bind[@nodeset]" mode="page-check">
        <xsl:param name="parent-name" tunnel="yes"/>
        <xsl:param name="last-ancestor" tunnel="yes"/>
        <xsl:param name="level" tunnel="yes"/>

        <xsl:if test="descendant::xf:constraint/@level=$level">
            <xsl:variable name="loop-name" select="substring-before(@name,'-Container')"/>
            <xsl:if test="preceding::xf:constraint[@level=$level and ancestor::xf:bind/@name=$parent-name]">
                <xsl:value-of select="' and '"/>
            </xsl:if>
            <xsl:choose>
                <xsl:when test="$last-ancestor != ''">
                    <xsl:value-of select="concat('not(descendant::',$loop-name)"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="concat('not(instance(''fr-form-instance'')//',$loop-name)"/>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:value-of select="'[not('"/>
            <xsl:apply-templates select="*" mode="page-check">
                <xsl:with-param name="parent-name" select="@name" tunnel="yes"/>
                <xsl:with-param name="last-ancestor" select="$loop-name" tunnel="yes"/>
            </xsl:apply-templates>
            <xsl:value-of select="')])'"/>
        </xsl:if>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>actions added when sections are in a xf:repeat</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:template match="xf:repeat" mode="page-change">
        <xsl:variable name="module-position">
            <xsl:value-of select="count(preceding-sibling::*)+1"/>
        </xsl:variable>
        <xsl:variable name="container" select="@id"/>
        <xsl:variable name="loop-id" select="substring-after(@nodeset,concat($container,'/'))"/>
        <!-- if we're on the group and next button was clicked then : if all modules are hidden then 0 else next minimum value -->
        <xf:action if="instance('fr-form-util')/PreviousNext='1' and number(instance('fr-form-instance')/Util/CurrentSection) = {$module-position}">
            <xf:setvalue ref="instance('fr-form-instance')/Util/CurrentLoopElement[@loop-name='{$container}']"
                value="string(if (count(instance('fr-form-instance')//{$container}/{$loop-id}[(count(preceding-sibling::*[name()='{$loop-id}'])+1)
                                  &gt; instance('fr-form-instance')/Util/CurrentLoopElement[@loop-name='{$container}'] and not(text()='false')]) &gt; 0)
                                  then (count(instance('fr-form-instance')//{$container}/{$loop-id}[(count(preceding-sibling::*[name()='{$loop-id}'])+1)
                                    &gt; instance('fr-form-instance')/Util/CurrentLoopElement[@loop-name='{$container}'] and not(text()='false')][1]/preceding-sibling::*)+1)
                              else 0)"/>
            <xf:action if="instance('fr-form-instance')/Util/CurrentLoopElement[@loop-name='{@id}'] &gt; 0">
                <xf:setvalue ref="instance('fr-form-util')/PageChangeDone" value="string('true')"/>
            </xf:action>
        </xf:action>
        <!-- if we're on the group and previous button was clicked then : if all modules are hidden then 0 else next maximum value -->
        <xf:action if="instance('fr-form-util')/PreviousNext='-1' and number(instance('fr-form-instance')/Util/CurrentSection) = {$module-position}">
            <xf:setvalue ref="instance('fr-form-instance')/Util/CurrentLoopElement[@loop-name='{$container}']"
                value="string(if (count(instance('fr-form-instance')//{$container}/{$loop-id}[(count(preceding-sibling::*[name()='{$loop-id}'])+1)
                                  &lt; instance('fr-form-instance')/Util/CurrentLoopElement[@loop-name='{$container}'] and not(text()='false')]) &gt; 0)
                                  then (count(instance('fr-form-instance')//{$container}/{$loop-id}[(count(preceding-sibling::*[name()='{$loop-id}'])+1) &lt; instance('fr-form-instance')/Util/CurrentLoopElement[@loop-name='{$container}']
                                                                               and not(text()='false')][last()]/preceding-sibling::*)+1)
                              else 0)"/>
            <xf:action if="instance('fr-form-instance')/Util/CurrentLoopElement[@loop-name='{@id}'] &gt; 0">
                <xf:setvalue ref="instance('fr-form-util')/PageChangeDone" value="string('true')"/>
            </xf:action>
        </xf:action>
        <!-- if we're on a previous group and next button was clicked then : if all modules are hidden then 0 else minimum value -->
        <xf:action if="instance('fr-form-util')/PreviousNext='1' and number(instance('fr-form-instance')/Util/CurrentSection) &lt; {$module-position}">
            <xf:setvalue ref="instance('fr-form-instance')/Util/CurrentLoopElement[@loop-name='{$container}']"
                value="string(if (count(instance('fr-form-instance')//{$container}/{$loop-id}[not(text()='false')]) &gt; 0)
                then (count(instance('fr-form-instance')//{$container}/{$loop-id}[not(text()='false')][1]/preceding-sibling::*[name()='{$loop-id}'])+1)
                              else 0)"/>
        </xf:action>
        <!-- if we're on a next group and previous button was clicked then : if all modules are hidden then 0 else maximum value -->
        <xf:action if="instance('fr-form-util')/PreviousNext='-1' and number(instance('fr-form-instance')/Util/CurrentSection) &gt; {$module-position}">
            <xf:setvalue ref="instance('fr-form-instance')/Util/CurrentLoopElement[@loop-name='{$container}']"
                value="string(if (count(instance('fr-form-instance')//{$container}/{$loop-id}[not(text()='false')]) &gt; 0)
                then (count(instance('fr-form-instance')//{$container}/{$loop-id}[not(text()='false')][last()]/preceding-sibling::*[name()='{$loop-id}'])+1)
                              else 0)"/>
        </xf:action>
 <!--Waiting for loop on several pages to be tested-->
        <!-- at least needs to add the occurrence of the loop -->
 <!--       <xf:action if="instance('fr-form-util')/PreviousNext='1' and number(instance('fr-form-instance')/Util/CurrentSection) = {$module-position}">
            <xf:setvalue ref="instance('fr-form-instance')/Util/CurrentLoopElement[@loop-name='{$container}']"
                value="string(if (count(instance('fr-form-instance')//{$container}/{$loop-id}/*[position()
                                  &gt; instance('fr-form-instance')/Util/CurrentLoopElement[@loop-name='{$container}'] and not(text()='false')]) &gt; 0)
                                  then (count(instance('fr-form-instance')//{$container}/{$loop-id}/*[position()
                                    &gt; instance('fr-form-instance')/Util/CurrentLoopElement[@loop-name='{$container}'] and not(text()='false')][1]/preceding-sibling::*)+1)
                              else 0)"/>
            <xf:action if="instance('fr-form-instance')/Util/CurrentLoopElement[@loop-name='{$container}'] &gt; 0">
                <xf:setvalue ref="instance('fr-form-util')/PageChangeDone" value="string('true')"/>
            </xf:action>
        </xf:action>
        <xf:action if="instance('fr-form-util')/PreviousNext='-1' and number(instance('fr-form-instance')/Util/CurrentSection) = {$module-position}">
            <xf:setvalue ref="instance('fr-form-instance')/Util/CurrentLoopElement[@loop-name='{$container}']"
                value="string(if (count(instance('fr-form-instance')//{$container}/{$loop-id}/*[position()
                                  &lt; instance('fr-form-instance')/Util/CurrentLoopElement[@loop-name='{$container}'] and not(text()='false')]) &gt; 0)
                                  then (count(instance('fr-form-instance')/{$container}/{$loop-id}/*[position()
                                    &lt; instance('fr-form-instance')/Util/CurrentLoopElement[@loop-name='{$container}'] and not(text()='false')][last()]/preceding-sibling::*)+1)
                              else 0)"/>
            <xf:action if="instance('fr-form-instance')/Util/CurrentLoopElement[@loop-name='{$container}'] &gt; 0">
                <xf:setvalue ref="instance('fr-form-util')/PageChangeDone" value="string('true')"/>
            </xf:action>
        </xf:action>
        <xf:action
            if="instance('fr-form-util')/PreviousNext='1' and number(instance('fr-form-instance')/Util/CurrentSection) &lt; {$module-position}">
            <xf:setvalue ref="instance('fr-form-instance')/Util/CurrentLoopElement[@loop-name='{$container}']"
                value="string(if (count(instance('fr-form-instance')/{$container}/{$loop-id}/*[not(text()='false')]) &gt; 0)
                then (count(instance('fr-form-instance')/{$container}/{$loop-id}/*[not(text()='false')][1]/preceding-sibling::*)+1)
                              else 0)"/>
        </xf:action>
        <xf:action if="instance('fr-form-util')/PreviousNext='-1' and number(instance('fr-form-instance')/Util/CurrentSection) &gt; {$module-position}">
            <xf:setvalue ref="instance('fr-form-instance')/Util/CurrentLoopElement[@loop-name='{$container}']"
                value="string(if (count(instance('fr-form-instance')/{$container}/{$loop-id}/*[not(text()='false')]) &gt; 0)
                then (count(instance('fr-form-instance')/{$container}/{$loop-id}/*[not(text()='false')][last()]/preceding-sibling::*)+1)
                              else 0)"/>
        </xf:action>
-->
    </xsl:template>

    <xsl:template match="xf:var[@value='position()' and parent::xf:repeat/fr:section]">
        <xsl:copy>
            <xsl:apply-templates select="@*"/>
            <xsl:attribute name="value" select="concat('number(instance(''fr-form-instance'')/Util/CurrentLoopElement[@loop-name=''',parent::xf:repeat/@id,'''])')"/>
            <xsl:apply-templates select="node()"/>
        </xsl:copy>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Adding buttons to the questionnaire to make a change of page.</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:template match="fr:view">
        <xsl:copy>
            <xsl:apply-templates select="node() | @*"/>
            <fr:buttons>
                <xf:trigger id="start" bind="start-bind">
                    <xf:label ref="$form-resources/Start/label"/>
                    <xf:action ev:event="DOMActivate">
                        <xf:setvalue ref="instance('fr-form-util')/PreviousNext" value="1"/>
                        <xf:dispatch name="page-change" targetid="fr-form-model"/>
                    </xf:action>
                </xf:trigger>
                <xf:trigger id="previous" bind="previous-bind">
                    <xf:label ref="$form-resources/Previous/label"/>
                    <xf:action ev:event="DOMActivate">
                        <xf:setvalue ref="instance('fr-form-util')/PreviousNext" value="-1"/>
                        <xf:dispatch name="page-change" targetid="fr-form-model"/>
                    </xf:action>
                </xf:trigger>
                <xf:trigger id="next" bind="next-bind">
                    <xf:label ref="$form-resources/Next/label"/>
                    <xf:action ev:event="DOMActivate">
                        <xf:setvalue ref="instance('fr-form-util')/PreviousNext" value="1"/>
                        <xf:dispatch name="page-change" targetid="fr-form-model"/>
                    </xf:action>
                </xf:trigger>
            </fr:buttons>
        </xsl:copy>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Adding some elements to the body and modifying some others :</xd:p>
            <xd:p>- a progress bar</xd:p>
            <xd:p>- wrapping the differents modules into a switch/case to display one module by page</xd:p>
            <xd:p>- adding different dialogs</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:template match="fr:body">
        <xsl:copy>
            <xsl:apply-templates select="@*"/>
            <!-- This helps being placed at the top of the page when changing page -->
            <xf:input id="page-top-control" bind="page-top-bind" class="page-top"/>
            <!-- Representing the progress-bar element on every page -->
            <xhtml:div class="progress-bar-container">
                <xhtml:span class="right">
                    <xf:output id="progress-control" bind="progress-bind">
                        <xf:label ref="$form-resources/Progress/label">
                            <xsl:attribute name="mediatype">text/html</xsl:attribute>
                        </xf:label>
                    </xf:output>
                    <!-- This element measures the survey's progress -->
                    <xhtml:progress id="progress" max="100">
                        <xsl:attribute name="value" select="'{instance(''fr-form-util'')/ProgressPercent}'"/>
                    </xhtml:progress>
                    <xf:output id="progress-percent" ref="instance('fr-form-util')/ProgressPercent"/> %</xhtml:span>
            </xhtml:div>

            <xsl:apply-templates select="*[not(name()='fr:section') and not(name()='xf:repeat')]"/>
            <!-- Using a switch in order to display one module by page -->
            <xf:switch id="section-body">
                <xf:case id="1">
                    <fr:section id="beginning-control" bind="beginning-bind" name="beginning">
                        <xf:label ref="$form-resources/Beginning/label"/>
                        <xhtml:div class="center">
                            <xf:output id="generic-beginning-text-control" bind="generic-beginning-text-bind">
                                <xf:label ref="$form-resources/GenericBeginningText/label" mediatype="text/html"/>
                            </xf:output>
                        </xhtml:div>
                    </fr:section>
                </xf:case>
                <xsl:apply-templates select="*[name()='fr:section' or name()='xf:repeat']"/>
                <xf:case id="{string(number($number-of-modules)+2)}">
                    <fr:section id="end-control" bind="end-bind" name="end">
                        <xf:label ref="$form-resources/End/label"/>
                        <xhtml:div class="center">
                            <xf:output id="generic-end-text-control" bind="generic-end-text-bind">
                                <xf:label ref="$form-resources/GenericEndText/label" mediatype="text/html"/>
                            </xf:output>
                            <!-- Button to submit the form -->
                            <xf:trigger id="send" bind="send-bind">
                                <xf:label ref="$form-resources/Send/label"/>
                                <xf:action ev:event="DOMActivate">
                                    <xf:dispatch name="submit-form" targetid="fr-form-model"/>
                                </xf:action>
                            </xf:trigger>
                            <!-- When submitted, this message appears -->
                            <xf:output id="confirmation-message" bind="confirmation-message-bind">
                                <xf:label ref="concat($form-resources/ConfirmationMessage/label,' ',instance('fr-form-instance')/Util/DateTime)"/>
                            </xf:output>
                        </xhtml:div>
                    </fr:section>
                </xf:case>
            </xf:switch>

            <!-- The dialog displayed if there is an error on page change -->
            <xxf:dialog id="errorPrevious" draggable="false" close="false">
                <xf:label ref="$form-resources/Error/label"/>
                <xf:output ref="instance('fr-form-util')/ErrorText">
                    <xf:label ref="$form-resources/ErrorTextPrevious/label" mediatype="text/html"/>
                </xf:output>
                <xf:trigger id="correct-error-previous">
                    <xf:label ref="$form-resources/Correct/label"/>
                    <xxf:hide ev:event="DOMActivate" dialog="errorPrevious"/>
                </xf:trigger>
            </xxf:dialog>
            <xxf:dialog id="errorNext" draggable="false" close="false">
                <xf:label ref="$form-resources/Error/label"/>
                <xf:output ref="instance('fr-form-util')/ErrorText">
                    <xf:label ref="$form-resources/ErrorTextNext/label" mediatype="text/html"/>
                </xf:output>
                <xf:trigger id="correct-error-next">
                    <xf:label ref="$form-resources/Correct/label"/>
                    <xxf:hide ev:event="DOMActivate" dialog="errorNext"/>
                </xf:trigger>
            </xxf:dialog>
            <!-- The dialog displayed if there is a warning on page change -->
            <xxf:dialog id="warningPrevious" close="false" draggable="false">
                <xf:label ref="$form-resources/Warning/label"/>
                <xf:output ref="instance('fr-form-util')/WarningText">
                    <xf:label ref="$form-resources/WarningTextPrevious/label" mediatype="text/html"/>
                </xf:output>
                <xf:trigger id="correct-warning-previous">
                    <xf:label ref="$form-resources/Correct/label"/>
                    <xxf:hide ev:event="DOMActivate" dialog="warningPrevious"/>
                </xf:trigger>
                <xf:trigger id="warning-previous">
                    <xf:label ref="$form-resources/GoBackWarning/label"/>
                    <xxf:hide ev:event="DOMActivate" dialog="warningPrevious"/>
                    <xf:action ev:event="DOMActivate">
                        <xf:dispatch name="page-change-done" targetid="fr-form-model"/>
                    </xf:action>
                </xf:trigger>
            </xxf:dialog>
            <xxf:dialog id="warningNext" close="false" draggable="false">
                <xf:label ref="$form-resources/Warning/label"/>
                <xf:output ref="instance('fr-form-util')/WarningText">
                    <xf:label ref="$form-resources/WarningTextNext/label" mediatype="text/html"/>
                </xf:output>
                <xf:trigger id="correct-warning-next">
                    <xf:label ref="$form-resources/Correct/label"/>
                    <xxf:hide ev:event="DOMActivate" dialog="warningNext"/>
                </xf:trigger>
                <xf:trigger id="warning-continue">
                    <xf:label ref="$form-resources/Continue/label"/>
                    <xxf:hide ev:event="DOMActivate" dialog="warningNext"/>
                    <xf:action ev:event="DOMActivate">
                        <xf:dispatch name="page-change-done" targetid="fr-form-model"/>
                    </xf:action>
                </xf:trigger>
            </xxf:dialog>
            <!-- The dialog displayed when the form is charged, for a user who already started filling the form without submitting it -->
            <xxf:dialog id="welcome-back" close="false" draggable="false">
                <xf:label ref="$form-resources/WelcomeBack/label"/>
                <xf:output ref="instance('fr-form-util')/WelcomeBackText">
                    <xf:label ref="$form-resources/WelcomeBackText/label" mediatype="text/html"/>
                </xf:output>
                <xf:trigger id="go-back">
                    <xf:label ref="$form-resources/GoBack/label"/>
                    <xxf:hide ev:event="DOMActivate" dialog="welcome-back"/>
                </xf:trigger>
                <xf:trigger id="go-to-first-page">
                    <xf:label ref="$form-resources/GoToFirstPage/label"/>
                    <xf:action ev:event="DOMActivate">
                        <xxf:hide dialog="welcome-back"/>
                        <xf:setvalue ref="instance('fr-form-instance')/Util/CurrentSection" value="'1'"/>
                        <xf:toggle case="{$choice}"/>
                    </xf:action>
                </xf:trigger>
            </xxf:dialog>
            <!-- The dialog displayed when there was an error when saving or submitting the form -->
            <xxf:dialog id="fatal-error" close="true" draggable="false">
                <xf:label ref="$form-resources/Error/label"/>
                <xf:output ref="instance('fr-form-util')/FatalError">
                    <xf:label ref="$form-resources/FatalError/label"/>
                </xf:output>
            </xxf:dialog>
        </xsl:copy>
    </xsl:template>

    <xd:doc>
        <xd:desc>
            <xd:p>Template to wrap each existing module in a xf:case.</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:template match="fr:section[parent::fr:body] | xf:repeat[parent::fr:body]">
        <!-- Calculating its index -->
        <xsl:variable name="index"
            select="number($number-of-modules)-count(following-sibling::fr:section)-count(following-sibling::xf:repeat)+1"/>
        <xf:case id="{$index}">
            <xsl:copy>
                <xsl:apply-templates select="node() | @*"/>
            </xsl:copy>
        </xf:case>
    </xsl:template>

</xsl:stylesheet>
